[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Matt Crump is a cognitive psychologist with research interests in learning, memory, attention, skill learning, semantics, and computational modeling. He runs the computational cognition lab at Brooklyn College of CUNY. He also plays music.\nHomophony is a word created by Richard Semon as a part of his theory of memory processes. It refers to the concept that experiences in memory may resonate with one another, like notes on a piano."
  },
  {
    "objectID": "blog/10_12_30_23_Quantum_Freeloader/index.html",
    "href": "blog/10_12_30_23_Quantum_Freeloader/index.html",
    "title": "Quantum Freeloader",
    "section": "",
    "text": "Tape cassette robot shooting lasers of music at a concert with massive speakers and a universe in the sky. - LCM_Dreamshaper_v7\n  \nThis is a mash-up of a few things I’ve been working on and covered in previous posts.\n\nI spent some time learning solo parts from Wynton Kelly’s piano solo on Miles Davis’ Freddie Freeloader\nI did some beat recreation from Quantic’s Life in the Rain. This ended up as a midi track with lots of added notes and modified note probabilities to make the beat have more natural and interesting variation.\n\nThe track is in the style of Freddie Freeloader. The chords and melody are different, but they are still variations of the general idea."
  },
  {
    "objectID": "blog/4_12_24_23_scales_7ths/index.html",
    "href": "blog/4_12_24_23_scales_7ths/index.html",
    "title": "Scales in 7th chords",
    "section": "",
    "text": "“An armadillo piano player practicing playing piano in the middle of a desert with a bright blue sky” - LCM_Dreamshaper_v7\n  \nThis exercise has two parts. Practice around the circle of fifths.\n\nPlay the major scale up and down using 7th chords.\n\nI∆7 II-7 III-7 IV∆7 V7 VI-7 VII-Dim7\n\nPlay each chord as an arpeggio, but start on the 7th and play down to the root.\n\nNotes: very easy to burn through this in C without thinking. G and F are decent, everything else is slow. Need to keep practicing the hard ones."
  },
  {
    "objectID": "blog/20_1_19_24_7th_chords/index.html",
    "href": "blog/20_1_19_24_7th_chords/index.html",
    "title": "Assessing my 7th chords with a reaction time test",
    "section": "",
    "text": "Testing myself on 7th chords using a choice-reaction time procedure\nThis post is about collecting some performance data on my ability to play stuff. I have some longer term plans to improve on these methods for research purposes, but for now, I’m just interested in roughly tracking my own abilities.\nIn my last post I was about try out some different practice schedules, one of which would require me to randomly pick which keys to practice. That kind of stuff is annoying to do without a computer. Plus, if I’m about to collect a bunch of data in a bunch of conditions, I’d rather not code things and do data entry by hand.\nSo, I jumped ship and decided to start building little computerized measurement tools.\nI put together a really simple choice reaction test using jspsych, the same JavaScript library that I use for online cognition experiments.\nTo start, I decided to test myself on basic seventh chords in all keys. There are 12 different keys, and for this test, I used ∆7, 7, and -7 chords, for a total of 36 different chords.\nThe choice reaction time test is very simple. The program takes all of the possible chord names, randomly shuffles them, and then presents each name on the screen one at a time. I put my laptop on top of my piano, waited for the chord name to appear, and then played the chord as fast as I could on the piano. At the same time, I had my left thumb on the spacebar, and I pressed the spacebar roughly at the same time that I played the chord. This allowed me to measure the reaction time for each chord. I also had the program repeat all the chords randomly twice, so that I got two reaction time measures per chord.\nI love jspsych. It took like 15 minutes to make this happen (granted, I have a bunch of prior experience using that library, and I was doing something very simple). Still, I already made the program and ran the test, and collected the data as a JSON variable. Woo hoo!\nAnd, of course, this is really messy data. Ideally, I would have the reaction times for each note, say using MIDI or something. But, that’s for later.\nI’d really like to take a look at my own performance data. I know all of these chords pretty well, but I have never closely compared my ability to produce them on demand. I expect I’ll be pretty good in C, D, F, G, A, and worse in the other keys. But, I don’t really know what the pattern looks like.\nSo, let’s get to the data analysis.\nI loaded in the data, computed the average chord-reaction time for each chord, and put them all in the following table and graph.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNeat. Close to what I expected in terms of which chords I think I’m better at. All of em could do with some extra practice. I suppose I should do more practice on the slow ones, because the fast ones don’t really need it.\n\nI was too hasty with my jspsych programming and totally forgot to add a few things that would make data analysis much easier. I’d like to be able to easily replot the data in a few different ways. One way is to group by maj7, min7, and dominant 7th. Another is to arrange the keys in ascending/descending order (rather than alphabetically), or in the order of the circle of fifths. I could add the necessary factor levels to the data file by hand, but I think I’ll add this to the jspsych program so that the data file includes this by default.\nSo, off to fixing the program, and then I’ll collect some more data and try a few different plots.\nAnd, I’m back. I ran through the practice one more time. Now my data file should be easier to plot in different ways.\nHere is the mean chord reaction time for each key, grouped by 7th chords.\n\n\n\n\n\n\n\n\n\nI wanted to order the keys in terms of the circle of fifths, but there was another bug in the code, now fixed. I’ll need another round of data-collection to get that graph.\nIn terms of piano practice, I should get a bunch of these chord reaction times lower. Especially Gb, Ab, Bb, Eb, and Db, and B. I thought Bb would be better, but nope.\nThe program is not currently keeping track of practice attempts per chord, and I should add that.\n\nAfter some javascript nonsense, the program now runs in a loop. Each loop goes through a set of practice material and records the practice attempt number for each chord.\nMy loop of practice material is all the basic 7th chords. So, I’m about to practice them for a while and then plot the data.\nOne detail is whether to do away with the delay between trials. Right now there is a 2 second delay before the next chord. That’s nice and everything, but I feel like chomping through this, so I’ll get rid of that delay.\n\nI practiced all the chords in a random order for about 10 times each. This is a plot of my chord reaction times as a function of practice for all chords. A bit messy to look at.\n\n\n\n\n\n\n\n\n\nIf I average over keys, did I get any faster?\nThere’s a downward trend I guess.\n\n\n\n\n\n\n\n\n\nAveraging over chords and showing the individual keys:\n\n\n\n\n\n\n\n\n\nAnd, one last summary graph. Let’s average over repetitions, and arrange by the circle of fifths.\n\n\n\n\n\n\n\n\n\nI guess I should practice Gb and Db and Bb and flatten out this performance distribution.\n\nAlright, that’s basically all I wanted to accomplish today. Now I have a clunky little tool to relatively quickly assess where I am at on different musical elements. Time to go do something else.\n\nPracticing “Eb”,“Db”,“Gb”,“Ab”,“B” this morning, and plotting the reactions from yesterday (1), and today (2).\n\n\n\n\n\n\n\n\n\nAveraging over individual chords, and looking at mean chord reaction time yesterday and today on these chords.\n\n\n\n\n\n\n\n\n\nMade a change to the program so that when I load it up I can select which keys to practice. I’m assuming that if I select only Gb and Ab (the slowest), I would be able to get them both under 2 seconds. I wonder if I would then maintain that level of performance when increasing the number of other chords in the test. Need to make breakfast first.\nI put Gb and Ab and practiced those 7th chords for a while.\n\n\n\n\n\n\n\n\n\nNice, with 5 minutes or so of banging around those chords, I could get the times way down in the context of this much simpler test (fewer other chords to play, less hand movement between chords etc).\nI’m curious whether this improvement for Gb and Ab would persist into a test using all of the keys.\n\n\n\n\n\n\n\n\n\nWhen I added all of the keys back the RTs for Gb and Ab went up a little bit from the last time, but they are over all way down. Almost all of them are under 1500 ms now.\nThis practice isn’t very musical, but it seems to work out my ability to identify and then play chords on demand. Perhaps speeding up on this test would improve my ability to sight read chord changes."
  },
  {
    "objectID": "blog/12_1_8_24_screaming_modems/index.html",
    "href": "blog/12_1_8_24_screaming_modems/index.html",
    "title": "Screaming modems",
    "section": "",
    "text": "“massive synthesizer, dueling guitar playing giant robots. guitar looks like an old fashioned modem. speakers. stereo. modular synth. eurorack. cartoon, thundercats, woodcut, linocut.” - dreamshaper-xl-turbo\n  \nSometimes I’ll just give up and go with screaming modems dueling in stereo sonic nonsense…that is unnecessarily too long…courtesy of the OB-6. Not much else to say really."
  },
  {
    "objectID": "blog/7_12_27_23_freddie/index.html",
    "href": "blog/7_12_27_23_freddie/index.html",
    "title": "Freddie Freeloader Wynton Kelly solo",
    "section": "",
    "text": "“A small penguin wearing headphones. The penguin listens to the music from the headphones. The penguin sits in front of a piano. The penguin can imagine the musical notes in a tornado above her head.” - LCM_Dreamshaper_v7\nI spent most of yesterday working through Wynton Kelly’s solo on Freddie Freeloader (from Miles Davis’s Kind of Blue). My plan for this post is to talk a little bit about what I did, and what I learned.\nA slight detour though. It’s been very nice to have some clear time to actually practice piano, let alone enough time to break down a solo. When I was a kid the advice was to listen to recordings and learn to play from them by ear. In some cases I was able to do this (with difficulty, because I didn’t spend enough time practicing this way), but for the most part I didn’t have the recordings to listen to. Flash-forward to today and almost everything is available to stream. That’s amazing when you’re trying to learn something by ear. Not only that, but the internet is full of musicians sharing their practice tips. It’s almost overwhelming, but in a good way.\nFor Freddie Freeloader I checked out a couple of YouTube videos before trying the solo myself: a transcription video and an analysis video. Then I played the song a couple times before heading downstairs. Here’s the breakdown process I used this time.\n\nPlay the original recording into a track on Ableton live\nCut the track so that it starts properly on the first bar\nTurn off “warp”, and then adjust the tempo of Ableton until the beats in the track line up properly with the bars in Ableton.\n\n\nThe purple track is the original recording. The selected area is the first two bars, and it is possible to loop the selection and/or slow it down without changing the pitch (by turning warp back on).\nI wasn’t particularly interested in learning the solo to play it note for note straight through. But, I was interested in trying out each little part and thinking about how the notes were used as phrases.\nSo, I worked in sections of two bars, looped each section, then played over top on the Fender Rhodes until I thought I had the line. The blue track are my 2 bar recordings on the Rhodes.\nI didn’t have time to get through the whole solo, just the first 12 bars, and it got a little messy at the end. Oh well. Had lots of fun.\n  \nPractice notes: I ended up practicing the first phrase through the circle of fifths this morning."
  },
  {
    "objectID": "blog/13_1_9_24_turtle_ep133/index.html",
    "href": "blog/13_1_9_24_turtle_ep133/index.html",
    "title": "Turtle TRS-80 variations",
    "section": "",
    "text": "“Can’t remember exactly. TRS computers, turtle connecting to the universe with a modem. Thundercats. woodcut cartoon vibes.” - dreamshaper-xl-turbo\n\nI did my piano practice in A major today following the 7th chord themes from previous posts.\nThen I accidentally spent too much time generating turtle cartoons with dreamshaper. So, I made a beat with the EP-133 and set them to music.\nSo many variations of the same thing."
  },
  {
    "objectID": "blog/2_12_23_23_practice/index.html",
    "href": "blog/2_12_23_23_practice/index.html",
    "title": "Practice",
    "section": "",
    "text": "“A piano keyboard shaped like a perfect circle. Very bright and colorful. Lightning bolts in the sky.” - LCM_Dreamshaper_v7\nBack into practicing the piano and working on my chops. It’s been a little bit painful because I am so out of practice. Perhaps there is a new year’s resolution here to practice more. But, what to practice?\nMy recent routine is working through the circle of fifths and reclaiming some basics.\n\nPlaying Maj7 chords anti-clockwise and then clockwise through the circle of fifths\nPlaying II-V-I through the circle of fifths\nPlaying V7-V7 through the circle of fifths\nPlaying I-VI-II-V through the circle of fifths. This is the same progression as in “Heart and Soul”, a duet we’d play as kids. Currently, I’m asking the question whether I can play this song effortlessly (chords in the left hand, melody in the right) in a key as I go around the circle, and if the answer is yes, I shouldn’t practice this key, and if the answer is no, then I should.\n\nStarting to get some fluency back. I was never that diligent at practicing through all of the keys, and some of them need a lot of work.\nIdeally, I’d like to keep a little journal here of practice strategies, reporting on: what I’m doing, what I’m hoping to get out of it (or did get out of it), and other observations that could relate to musical connections and/or connections to the cognitive science of skill learning."
  },
  {
    "objectID": "blog/12_1_8_24_Dmajor/index.html",
    "href": "blog/12_1_8_24_Dmajor/index.html",
    "title": "D major practice",
    "section": "",
    "text": "“D major scale. Piano. Circle of fifths. D major 7th chords played on an infinite universe piano. synthesizer keyboard universe.” - dreamshaper-xl-turbo\nContinuing from yesterday’s G major practice I moved onto D major.\nPlayed the D major scale up and down using 7th chords. Did this multiple times with each inversion.\nNoted that I liked the sound of the 3rd inversion the best. Ran up and down enough times that I could play fairly fluently, almost into melody territory. Will likely continue this sort of practice across other keys.\n\nAside…I’ve been messing around with huggingface models as a possible way to generate visual stimuli for some experiments this semester. The class of latent consistency models can generate decent images fairly quickly. This morning I downloaded the “dreamshaper-xl-turbo” model to test it out. Today’s blog picture was generated from this model."
  },
  {
    "objectID": "blog/1_12_20_23_dolphin_dance/index.html",
    "href": "blog/1_12_20_23_dolphin_dance/index.html",
    "title": "Dolphin Dance",
    "section": "",
    "text": "” Herbie Hancock’s dolphin dance with a bunch of synthesizers” - LCM_Dreamshaper_v7\n  \nHave been messing about with Herbie Hancock’s “Dolphin Dance” on the piano for a while.\nHad a clear day to try some mixer mimicking. Plan was to develop my own voicings for everything, but mix them similar to the Maiden Voyage recording…and then jam it.\nWhat happened:\n\nRecorded the Hancock version into Ableton\nLocated BPM\nVoices\n\nRhodes\nMoog matriarch bass lines\nMPC drums\nOB-6 horns\n\nFor each voice, play with the original record. Keep recording in a loop using Ableton comping lanes\nFix messes by sampling in comping lanes/ explore have fun with fixing the mess\nDuplicate the head, then solo overtop for a bit\nMix it down.\nTry some final mixing touches."
  },
  {
    "objectID": "blog/11_1_7_24_saddle/index.html",
    "href": "blog/11_1_7_24_saddle/index.html",
    "title": "Back in the saddle",
    "section": "",
    "text": "“a piano riding a horse. piano rides horse. piano riding a horse. piano keys. synthesizer keyboard.” - LCM_Dreamshaper_v7\nVacation was nice. Easing back into practice.\n\nPlayed through each scale using 7ths chords going anti-clockwise through the circle of fifths.\n\nI’ve overplayed the C major scale for decades and should probably just stop practicing in C. At the same time, I can rip through the C major scale using 7th chords very quickly. In addition to practice, it seems easier to “see” the 7th chords in C major– they all have the same shape and use only white keys. It would be nice to have that immediacy for all of the other scales, and this is something I’m slowly working towards.\n\nDid a little bit of focused practice in G. Played through the G Major scale using 7th chords to build up speed. Played up and down using each inversion of each 7th chord."
  },
  {
    "objectID": "blog/16_1_16_24_transitions/index.html",
    "href": "blog/16_1_16_24_transitions/index.html",
    "title": "Transitions in wonderland",
    "section": "",
    "text": "Not sure where today’s post will take me, exciting times! The plan is to write a little bit in the morning, go play, write a little bit more, and so on. I’m hoping the writing will help focus my playing goals. Plus, I need to get back in the habit of writing everyday as the new semester approaches. So, win win."
  },
  {
    "objectID": "blog/16_1_16_24_transitions/index.html#explanatory-and-descriptive-theory",
    "href": "blog/16_1_16_24_transitions/index.html#explanatory-and-descriptive-theory",
    "title": "Transitions in wonderland",
    "section": "Explanatory and descriptive theory",
    "text": "Explanatory and descriptive theory\nThe title of this post is transitions. Mostly, I want to focus this on changes from one musical element to another. Before I head in that direction, I’ve been mulling over a more theoretical transition that has been helpful. My own mental transition from thinking about music theory as explanatory versus descriptive.\nWhen I was first learning music theory (Royal Conservatory of Music, Canadian styles) I was a kid and didn’t have a wide exposure to different ways of thinking about music or theory in general. I remember working through music theory exercise books as homework. I don’t remember what was in those books necessarily, but probably they gave me a lot of basic names and definitions for musical elements.\nIn high school and early undergrad years I was still playing music when I could, and was getting much more heavily into jazz and improvising. I was also learning more about science, philosophy of science, and cognitive psychology, which shaped a general interest in theory. My day job is now as a cognitive psychology prof, and after many years of that job, the topic of theory still holds my interest. For example, in cognitive psychology a common goal is to develop theories that “explain” some phenomena of interest. Given the complexity of human/animal cognition, explaining how something works is usually a very tall order. This also raises the question of what gets to count as a successful explanation. Mechanistic theories are often held in high regard, as they would describe how individual components of some system work together to produce the phenomena of interest. Here, a phenomena is “explained” in terms of the way that it’s component pieces/processes work together.\nWhen I became interested in learning “jazz” chords I was also scrambling to connect what I was learning back to music theory concepts I had been taught growing up. I can’t remember what my piano teachers had told me about what kind of “theory” music theory was supposed to be…I’m not sure that issue ever came up. Looking back, there were definitely a few years where I thought that music theory was somehow “explanatory”. For example, I would be analyzing a lead sheet trying to use music theory concepts to “understand” and “explain” why the melody went from here to there, or why the chord changed from this to that. Although sizeable chunks of a given song could be readily described using music theory concepts I had learned, there would be lots of changes that didn’t make sense to me. Sometimes a particularly inexplicable change would lead to hours of pondering possible contortions of music theory that might explain why something sounded good or made sense. I’ll give an example soon, but this is all to say that I was frustrated by looking toward music theory for explanation.\nAt that time I think I was missing the concept of “descriptive theory”. In cognitive science there are lots of examples of researchers using descriptive theories. Many of theses example derive from a logical positivist approach to science. Here, a primary goal is to predict and control a phenomena of interest. A common strategy is to create a descriptive system that can provide names for elements of a system, and mathematical functions to relate how elements move together or interact with one another. If a system can be well described using mathematical functions then it can be predicted and controlled. In this framework, the correspondence between reality and the descriptive system matters less than the amount of prediction and control achieved by the system. I’m getting too caught up here, and need to get back on track so I can practice more piano.\nHere’s a point I have been slowly internalizing. Music theory provides a systematic way of describing some musical elements. But, it’s a descriptive theory, not an explanatory theory. Music theory doesn’t explain many important aspects of music. For example, it doesn’t explain how feelings of tension and resolution and created by musical elements. Music theory is not very generative. I may understand the C major scale, and the modes, and the chords that come from the C major scale, but this understanding does not show me how to compose any given song with C as a tonal center.\nAt least in my experience (and I don’t have an advanced degree in music theory), music theory is less of a theory and more of a naming convention system, rather than a fully worked out descriptive theory that a logical positivist would be proud of. Potato, tomato.\n\n\n\nWhereas earlier I would go down “beautiful mind” rabbit holes trying to “explain” a lead sheet from a music theory point of view, now I’m much more content for music theory to be the exceptional descriptive system that it is. Exceptional in the sense that exceptions are used whenever they are needed. And, that’s just the way it is.\n\nAlice in wonderland\nHere’s an example of the rabbit holes I go down from “Alice in Wonderland”. And, maybe it would all “make sense” if only I knew more music theory 🤷.\n\nThe first seven chords follow a similar pattern, and there is more than one way to describe it. I used the blue pen to show the pattern in terms of leading 7ths being resolved to thirds in the next chord. For example, the first chord change is from D-7 to G7. In D-7, C is the 7th note, which moves down one semitone to a B, or major third in G7. In G7, F is the 7th note, which moves down one semitone to an E, or major third of C∆7.\nAspects of this pattern repeat until it starts breaking. The transition between B-7b5 and E7 is a little bit exceptional. Up until this point all of the notes are in the C major scale. If I was focusing on music theory as explanation I would ask, “what is G# doing in there?”. It sort of fits the pattern in that the 7th of of B-7b5 (A) is resolved to the third of E7 (G#). But, the pattern really breaks when going from A-7 to Eb7. Now, the 7th of A-7 (G) is repeated as the third in Eb7 (G), and all of the other notes in Eb7 (Eb Bb Db) are not in C major. There is also some interesting symmetry in the exceptions. The -iii7 chord in C is E-7, or EGBD. The E7 chord is close, and it sharpens the third EG#BD. Similarly, the Eb7 chord is close, but it keeps the G, and flattens the other notes, EbGBbDb. A kind of chordal call and response in terms of playing with exceptions to the C major scale.\nIt’s also possible to describe the chord changes from other perspectives. For example, instead of 7ths to 3rds, the pattern is also 1sts to 5ths. The root in D-7 becomes the fifth in G7. The root in G7 becomes the fifth in C∆7, and so on. This keeps repeating until the root in A-7 becomes a Bb in Eb7, which I guess is close enough.\nMy younger, and even older self on occasion, would get flustered by the Eb7, and consider questions like, “what music theory concepts make sense of these exceptions?”. It’s a fun question kind of question to ponder, but I’m more aware now of not getting too lost in pondering for too long.\nNow it’s flavor over explanation every time.\n\n\nCocktail music\nMusic is more like mixing cocktails. It should taste good and be interesting. I’m no mixologist, but I’ll mix up a Negroni once in a while with 1 part gin, 1 part vermouth, and 1 part campari. This cocktail is amenable to lots of variations. Switch the gin to bourbon for a boulevardier. Add a twist. Play with the ratios. Add little bits of more stuff for extra fun.\nWith the cocktail metaphor we can have an almost useless generic descriptive theory of cocktails. Cocktails are composed of multiple component parts, usually liquids, but not always, in particular ratios to each other. This kind of theory isn’t useful for making any cocktails. It can be useful to describe a cocktail using the system and then notice elements that might be analogized to other cocktails. For example, a negroni is 3 equal parts with lots of options for substitutions, implying a whole family of negroni-like drinks. So, the system could be used to explore negroni-style drinks by switching out pieces, trying different amaros instead of campari, etc. And, by giving names to components of cocktails, similarities may appear to arise between cocktails based on the collections of components. For example, the Manhattan is 2 parts bourbon 1 part red vermouth. It’s like a boulevardier, but substituting campari for more whiskey. In any case, I don’t need cocktails to make sense, they just need to taste good. And, they often taste exceptional when they contain some random stuff from left field that I never expected.\nSo, with music, the mood is to trod around in places that seem to have nice regular structure, and then throw in the good tasty flavors as much as possible.\nAnd, now to the thing I actually wanted to write about."
  },
  {
    "objectID": "blog/16_1_16_24_transitions/index.html#transitions-and-movement",
    "href": "blog/16_1_16_24_transitions/index.html#transitions-and-movement",
    "title": "Transitions in wonderland",
    "section": "Transitions and movement",
    "text": "Transitions and movement\nThis should probably be a second post, but the above is a preface on transitions. I actually failed to state one of the main points I intended to make in the above discussion—perspective does make things seem different. Even though music theory is more of a descriptive than explanatory theory, the descriptions change perspective, even if they are describing the same thing. For example, a D-7 chord invokes certain concepts for me. It’s the -ii in C major. It’s D Dorian. It sounds a certain way, etc. That same chord in the 1st inversion is FACD, which is also an Fmaj6 chord that invites a different set of musical ideas. As a sidenote, it would be interesting to discuss these perspective shifts a bit further from a cognitive psychology perspective (e.g., in terms of the associative fan effect, and other phenomena).\nNow, onto the main post.\nOn review, much of the exercises I have been working on lately are “noun” focused. I’ve been working on chords and modes mostly in the major scale, and trying to get all of that stuff more accessible to my fingers when I am playing. I could also call this “object” focused, where I’m trying to increase the fluency in my object production, where the objects are chords or scales. I’m getting better, so that’s good.\nBut, a question is looming that I have not been very actively addressing. These are questions about movement and transition. If I am here…where do I go from here. Where is there?\nI need to start shifting my exercise into a verb focus, where I’m taking actions with musical elements, rather than just being a finger factory that produces musical doo-dads with high fluency for no reason.\nEnter dominant chords, piano YouTube, and Barry Harris.\nI’m not sure how organized the next stuff will be. Mostly a scratch pad."
  },
  {
    "objectID": "blog/16_1_16_24_transitions/index.html#fully-diminished-chords-and-more",
    "href": "blog/16_1_16_24_transitions/index.html#fully-diminished-chords-and-more",
    "title": "Transitions in wonderland",
    "section": "Fully diminished chords and more",
    "text": "Fully diminished chords and more\nI feel confident that I learned important things about fully diminished 7th chords when I was younger. But, I completely forget about them until yesterday when I started watching Shan Verma discussing Alice in Wonderland on youtube.\nThis quickly led to a series of rabbit holes about fully diminished 7th chords, Barry Harris and his system, and the major 6th diminished scale.\nBut, before I get to that. I need to go make lunch.\n\nLunch break is over. Now, my goal is to put down some breadcrumbs and then get back to the piano.\n\nBreadcrumb 1 - Fully Diminished 7th chords\nThese are composed of entirely of minor 3rds. So, a fully diminished Cbb7 is CEbGbA.\nRandomly came across this series of observations about using these chords for transitions\nThere are only three different versions of this chord–C, Db and D–as the inversions cover all of the roots.\nThey are very useful for transitions.\nMoving any note down a semitone turns the chord into a dominant 7th chord. Very useful for modulation.\n\n\nBreadcrumb 2 - major 6th diminished scale\nThis scale has 8 notes, adding a flat 6 to the major scale\nC D E F G A Ab B\n\n\nBreadcrumb 3 - Barry Harris’s system\nI haven’t had enough to time to learn what this whole system is. So far, I have just watched one youtube video from Shan Verma on this.\nThe trail of breadcrumbs started at the beginning of his Alice in Wonderland analysis video. In that video he played alternating inversions of maj6 and fully diminished chords, and that immediately clicked something for me.\nThere are four inversions of Cmaj6 (CEGA), starting on each note in chord. These are also four of the notes in the major 6th diminished scale.\nThere are four inversions of Ddim7 (DFAbB), starting on each note in the chord. These are also the four remaining notes in the major 6th diminished scale.\nIt is possible to play each note of that scale as a series of maj6 and dim7 chords.\n\n\n\nC\nD\nE\nF\nG\nA\nAb\nB\n\n\n\n\n1st\n1st\n2nd\n2nd\n3rd\n3rd\n4th\n4th\n\n\nCMaj6\nDdim7\nCMaj6\nDdim7\nCMaj6\nDdim7\nCMaj6\nDdim7\n\n\nCEGA\nDFAbB\nEGAC\nFAbBD\nGACE\nACEG\nAbBDF\nBDFAb\n\n\n\nThis is basically where I am at right. I spent the morning locking my fingers into these inversions so I could play through the scale in chords. Loving the sound and the possibilities. Giving me lots to think about.\nNext up is to practice through the other diminished chords.\nDid a bit of that. Got through C, F, and Bb. Time to make another table for my reference.\nThis shows the notes in every the major 6th diminished scale. I think I fixed all the typos. The scales are ordered in terms of the circle of fifths, going anti-clockwise. The bolded notes are fully diminished 7ths."
  },
  {
    "objectID": "blog/16_1_16_24_transitions/index.html#tables-major-6th-diminished-scale",
    "href": "blog/16_1_16_24_transitions/index.html#tables-major-6th-diminished-scale",
    "title": "Transitions in wonderland",
    "section": "Tables: Major 6th diminished scale",
    "text": "Tables: Major 6th diminished scale\n\n\n\ni\nii\niii\niv\nv\nvi\nvii\nviii\n\n\n\n\nC\nD\nE\nF\nG\nAb\nA\nB\n\n\nF\nG\nA\nBb\nC\nDb\nD\nE\n\n\nBb\nC\nD\nEb\nF\nGb\nG\nA\n\n\nEb\nF\nG\nAb\nBb\nB\nC\nD\n\n\nAb\nBb\nC\nDb\nEb\nE\nF\nG\n\n\nDb\nEb\nF\nGb\nAb\nA\nBb\nC\n\n\nGb\nAb\nBb\nB\nDb\nD\nEb\nF\n\n\nB\nDb\nEb\nE\nGb\nG\nAb\nBb\n\n\nE\nGb\nAb\nA\nB\nC\nDb\nEb\n\n\nA\nB\nDb\nD\nE\nF\nGb\nAb\n\n\nD\nE\nGb\nG\nA\nBb\nB\nDb\n\n\nG\nA\nB\nC\nD\nEb\nE\nGb\n\n\n\nThis is the same table, but the scales are grouped in terms whether they share the same diminished chord.\n\n\n\ni\nii\niii\niv\nv\nvi\nvii\nviii\n\n\n\n\nC\nD\nE\nF\nG\nAb\nA\nB\n\n\nEb\nF\nG\nAb\nBb\nB\nC\nD\n\n\nGb\nAb\nBb\nB\nDb\nD\nEb\nF\n\n\nA\nB\nDb\nD\nE\nF\nGb\nAb\n\n\n–\n–\n–\n–\n–\n–\n–\n–\n\n\nF\nG\nA\nBb\nC\nDb\nD\nE\n\n\nAb\nBb\nC\nDb\nEb\nE\nF\nG\n\n\nB\nDb\nEb\nE\nGb\nG\nAb\nBb\n\n\nD\nE\nGb\nG\nA\nBb\nB\nDb\n\n\n–\n–\n–\n–\n–\n–\n–\n–\n\n\nBb\nC\nD\nEb\nF\nGb\nG\nA\n\n\nDb\nEb\nF\nGb\nAb\nA\nBb\nC\n\n\nE\nGb\nAb\nA\nB\nC\nDb\nEb\n\n\nG\nA\nB\nC\nD\nEb\nE\nGb\n\n\n\nSame table again with some extra stuff. I started playing through these scales and was trying to figure out what aspects would be new to me. For each grouping of four, it is nice that that the diminished chord is the same, it is just expressed as a different inversion. Within each scale, the major chord is also the same, just expressed as a different inversion.\nThe new column simply points out the maj6/min7 relations.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmaj6 = -7\ni\nii\niii\niv\nv\nvi\nvii\nviii\n\n\n\n\nC6 = A-7\nC\nD\nE\nF\nG\nAb\nA\nB\n\n\nEb6 = C-7\nEb\nF\nG\nAb\nBb\nB\nC\nD\n\n\nGb6 = Eb-7\nGb\nAb\nBb\nB\nDb\nD\nEb\nF\n\n\nA6 = Gb-7\nA\nB\nDb\nD\nE\nF\nGb\nAb\n\n\n\n–\n–\n–\n–\n–\n–\n–\n–\n\n\nF6 = D-7\nF\nG\nA\nBb\nC\nDb\nD\nE\n\n\nAb6 = F-7\nAb\nBb\nC\nDb\nEb\nE\nF\nG\n\n\nB6 = Ab-7\nB\nDb\nEb\nE\nGb\nG\nAb\nBb\n\n\nD6 = B-7\nD\nE\nGb\nG\nA\nBb\nB\nDb\n\n\n\n–\n–\n–\n–\n–\n–\n–\n–\n\n\nBb6 = G-7\nBb\nC\nD\nEb\nF\nGb\nG\nA\n\n\nDb6 = Bb-7\nDb\nEb\nF\nGb\nAb\nA\nBb\nC\n\n\nE6 = Db-7\nE\nGb\nAb\nA\nB\nC\nDb\nEb\n\n\nG6 = E-7\nG\nA\nB\nC\nD\nEb\nE\nGb\n\n\n\nThis table could be useful for tapping into things I already know. I can play 6th chords fairly well, but I already know my min7 chords very well. Sometimes thinking about a chord in terms of another helps me play it, and it encourages shifting perspectives on the same thing. The Eb scale got easier to play once I realized the Eb6 was just a 1st inversion C-7 chord waiting to happen…and then I’m like, OMG C-7 is an Eb major 6th 🤯."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homophony",
    "section": "",
    "text": "Streaming on:\n \n\n\n\n\n\n\n\n\n\n\n\n\nNew stuff\n\n\nSome newer tracks\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBasement Tapes\n\n\nsynth explorations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRS\n\n\n2nd album, Fall 2020. Tasting notes: Synthpop, less vocoder\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVO\n\n\n1st album, Fall 2020. Tasting notes: Synthpop, lots of vocoder\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "music/New.html",
    "href": "music/New.html",
    "title": "New stuff",
    "section": "",
    "text": "title\ntrack\n\n\n\n\n240108 - Screaming Modems\n  \n\n\n231230 - Quantum Freeloader\n  \n\n\n231809 - Dolphin Dance\n  \n\n\n231209 - Ambient droney drums reverb crush"
  },
  {
    "objectID": "music/VO.html",
    "href": "music/VO.html",
    "title": "VO",
    "section": "",
    "text": "VO is an album of music. Inspired by synthpop. Occasionally heavy use of vocoder."
  },
  {
    "objectID": "music/VO.html#concept",
    "href": "music/VO.html#concept",
    "title": "VO",
    "section": "",
    "text": "VO is an album of music. Inspired by synthpop. Occasionally heavy use of vocoder."
  },
  {
    "objectID": "music/VO.html#production-notes",
    "href": "music/VO.html#production-notes",
    "title": "VO",
    "section": "Production Notes",
    "text": "Production Notes\nI promise to say more about this, maybe, at some point."
  },
  {
    "objectID": "music/RS.html",
    "href": "music/RS.html",
    "title": "RS",
    "section": "",
    "text": "RS is an album of music. Inspired by synthpop. With much less vocoder, and mostly instrumental."
  },
  {
    "objectID": "music/RS.html#concept",
    "href": "music/RS.html#concept",
    "title": "RS",
    "section": "",
    "text": "RS is an album of music. Inspired by synthpop. With much less vocoder, and mostly instrumental."
  },
  {
    "objectID": "music/RS.html#production-notes",
    "href": "music/RS.html#production-notes",
    "title": "RS",
    "section": "Production Notes",
    "text": "Production Notes\nI promise to say more about this, maybe, at some point."
  },
  {
    "objectID": "music/Basement_Tapes.html",
    "href": "music/Basement_Tapes.html",
    "title": "Basement Tapes",
    "section": "",
    "text": "Some newer tracks, sharing them on soundcloud."
  },
  {
    "objectID": "music/Basement_Tapes.html#concept",
    "href": "music/Basement_Tapes.html#concept",
    "title": "Basement Tapes",
    "section": "",
    "text": "Some newer tracks, sharing them on soundcloud."
  },
  {
    "objectID": "music/Basement_Tapes.html#production-notes",
    "href": "music/Basement_Tapes.html#production-notes",
    "title": "Basement Tapes",
    "section": "Production Notes",
    "text": "Production Notes\nI promise to say more about this, maybe, at some point."
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "Wall of Notes",
    "section": "",
    "text": "Minerva and expectancy from a chord vector space\n\n\n\n\n\n\nchord similarity\n\n\nMINERVA\n\n\n\nScratchpad for messing around with a MINERVA II model in a musical chord context. Notes to self\n\n\n\n\n\nJan 23, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nChord Similarity analysis table\n\n\n\n\n\n\nchord similarity\n\n\n\nUsing a vector space to analyse similarity between chords in an interactive table\n\n\n\n\n\nJan 22, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nExpanding the chord reaction time test\n\n\n\n\n\n\npractice\n\n\nchord reaction time\n\n\n\nUsing a cog psych task to measure how fast I can play various chords on demand.\n\n\n\n\n\nJan 21, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nEstimating practice time needed, and a bit on contextual interference\n\n\n\n\n\n\npractice\n\n\ncogsci\n\n\ncontextual interference\n\n\nestimating practice time\n\n\npractice schedules\n\n\n\nEstimating how long I need to practice a scale with my own learning curve, and questioning how much to mix up practice.\n\n\n\n\n\nJan 19, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nAssessing my 7th chords with a reaction time test\n\n\n\n\n\n\npractice\n\n\n7th chords\n\n\njspsych\n\n\nassessment\n\n\n\nI made a jspsych task to test how fast I can play 7th chords.\n\n\n\n\n\nJan 19, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nSavings in relearning\n\n\n\n\n\n\nrelearning\n\n\npractice\n\n\nscales\n\n\n\nTracking performance improvements over time in learning the maj6 diminished scale\n\n\n\n\n\nJan 18, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nPracticing some Barry Harris methods\n\n\n\n\n\n\nBarry Harris\n\n\npractice\n\n\n\nJust learning about Barry Harris’ system ideas and making notes about what I’m practicing.\n\n\n\n\n\nJan 17, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nTransitions in wonderland\n\n\n\n\n\n\nscales\n\n\nmusic theory\n\n\nmovement\n\n\ndiminished chords\n\n\n\nMusic theory ramblings, diminished chords, movement, Barry Harris, rabbit holes, going from here to there.\n\n\n\n\n\nJan 16, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nModes…sigh\n\n\n\n\n\n\nmodes\n\n\nscales\n\n\nmusic theory\n\n\npractice\n\n\n\nWorking on modes…again\n\n\n\n\n\nJan 13, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nThe VERY Expressive Osmose\n\n\n\n\n\n\ngear\n\n\nosmose\n\n\nMPE\n\n\n\nIt is so fun, and possibly a post that will get longer as I learn more about the osmose.\n\n\n\n\n\nJan 12, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nTurtle TRS-80 variations\n\n\n\n\n\n\ntrack\n\n\n\nMessing around with the EP-133 and Dreamshaper to make a series of cartoons with turtles and TRS-80 computers\n\n\n\n\n\nJan 9, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nD major practice\n\n\n\n\n\n\npractice\n\n\n\npractice notes\n\n\n\n\n\nJan 8, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nScreaming modems\n\n\n\n\n\n\ntrack\n\n\n\nChill vibe and pointless melody gets interrupted by dueling screaming modem solo battle that goes on for too long.\n\n\n\n\n\nJan 8, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nBack in the saddle\n\n\n\n\n\n\npractice\n\n\n\npractice notes\n\n\n\n\n\nJan 6, 2024\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nQuantum Freeloader\n\n\n\n\n\n\npractice\n\n\n\nQuantic/Miles Davis inspired Freddie Freeloader reversion\n\n\n\n\n\nDec 30, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nBreaking out of the 4 bar drum loop\n\n\n\n\n\n\npractice\n\n\n\nForcing myself to program some drum fills.\n\n\n\n\n\nDec 29, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nRecreating a beat from Quantic’s Life in the Rain\n\n\n\n\n\n\npractice\n\n\n\nAn exercise in beat recreation.\n\n\n\n\n\nDec 28, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nBlogging for music motivation\n\n\n\n\n\n\nquarto\n\n\n\nSetting up a quarto blog for taking music notes.\n\n\n\n\n\nDec 27, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nFreddie Freeloader Wynton Kelly solo\n\n\n\n\n\n\npractice\n\n\n\nNotes on learning phrasing from the solo\n\n\n\n\n\nDec 27, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nRootless 9th chords\n\n\n\n\n\n\npractice\n\n\n\nRunning I∆7add9 chords through the circle of fifths.\n\n\n\n\n\nDec 26, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\n7th first II-V-I\n\n\n\n\n\n\npractice\n\n\n\nA piano exercise\n\n\n\n\n\nDec 25, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nScales in 7th chords\n\n\n\n\n\n\npractice\n\n\n\nA piano exercise\n\n\n\n\n\nDec 24, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nCycling through Major 7ths\n\n\n\n\n\n\npractice exercise\n\n\ncircle of fifths\n\n\n\nNotes on a piano exercise.\n\n\n\n\n\nDec 23, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nPractice\n\n\n\n\n\n\nmotivation\n\n\ncircle of fifths\n\n\n\nStarting up a blog about practicing and trying to practice more piano.\n\n\n\n\n\nDec 23, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nDolphin Dance\n\n\n\n\n\n\nquarto\n\n\n\nA synthesized version of Herbie Hancock’s Dolphin Dance.\n\n\n\n\n\nDec 20, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n\n\n\n\n\n\nblog template\n\n\n\n\n\n\npractice\n\n\n\ntemplate files\n\n\n\n\n\nDec 19, 2023\n\n\nMatt Crump\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/9_12_29_23_morethan4/index.html",
    "href": "blog/9_12_29_23_morethan4/index.html",
    "title": "Breaking out of the 4 bar drum loop",
    "section": "",
    "text": "A tape cassette robot playing a drum kit. Massive speakers in the background. Super funky beats - LCM_Dreamshaper_v7\nI have a really lazy habit with drum beats that I need to fix. It goes something like this: make a 4 bar beat, loop it, jam endlessly inside a 4 bar beat that gets boring and has no fills.\nYesterday I had some fun recreating a 4 bar beat from Quantic’s “Life in the Rain”. Today, the plan is to make this into a 12-bar beat with a reasonable amount of variation and some simple fills.\n…Does some things in Ableton that didn’t take that long…Should do this kind of thing more often. Now I have a 12-bar drum part with a decent amount of variation. But, it’s on my upstairs computer and I need to get this into a new project on my downstairs computer. I’ve been using Ableton since forever and I don’t think I’ve ever tried to copy or import a midi track from one project to another. It must be possible. Going to play some music over these drums."
  },
  {
    "objectID": "blog/1_12_27_23_blog/index.html",
    "href": "blog/1_12_27_23_blog/index.html",
    "title": "Blogging for music motivation",
    "section": "",
    "text": "I had some time at the end of my semester to play piano more than usual. This semester that meant I actually played the piano, instead of not playing the piano.\nClearly I need to make time for more piano. I’m hoping this blog will keep me somewhat organized and motivated to stay on target.\nThe blog is built with quarto, and this post is just changing the structure a little bit so that each post is it’s own post, rather than a bunch of posts on a single page."
  },
  {
    "objectID": "blog/18_1_18_24_Relearning/index.html",
    "href": "blog/18_1_18_24_Relearning/index.html",
    "title": "Savings in relearning",
    "section": "",
    "text": "Yesterday I spent some time practicing the maj6 diminished scale across all keys. I also posted about practice ideas in relation to cognitive psychology phenomena.\nFor reference, I can play a C major scale in 7th chords in just under 3 seconds without any warm-up. I’ve had a couple days to put some practice into the C major 6th diminished scale, and I times myself at 12 seconds to play through the chords there.\nI timed myself going through several keys for the first time, and B was the slowest at 104 seconds. Then, just for B maj 6 diminished, I did a focused spurt of practice for 10 minutes on that scale. This involved playing the scale ascending in chords over and over again, and not doing anything else. If I made a mistake I would correct it, and if I couldn’t correct it I would start again. I used a stopwatch on my phone for the timer, and pressed the lap button every time I finished the scale.\nI was interested in measuring a learning curve to track my progress with this scale. The data looked like this:\nThe graph shows that I reduced my time to complete the scale by quite a bit in just 10 minutes of practice, from 104 seconds to 21 seconds.\nThat was yesterday."
  },
  {
    "objectID": "blog/18_1_18_24_Relearning/index.html#retentionsavings-in-re-learning",
    "href": "blog/18_1_18_24_Relearning/index.html#retentionsavings-in-re-learning",
    "title": "Savings in relearning",
    "section": "Retention…Savings in re-learning?",
    "text": "Retention…Savings in re-learning?\nMy question this morning is how much did I retain? I haven’t practiced the B maj6 diminished scaled since yesterday. My plan is to go sit down and play it ascending for the next 10 minutes, record my playing times, and then come back here and graph it.\nOne possibility is that I’ll start off around 21 seconds where I left off, and then maybe get a faster. That would indicate I retained almost all of whatever I learned yesterday. Another possibility is that I start back at the beginning, perhaps having retained not very much at all. Still, if that happened, it’s possible that I would re-learn faster the second time through.\nLet’s find out.\nI just put in 10 minutes of repetitive practice, and here are the results.\n\n\n\n\n\n\n\n\n\nWhat happened? I ended up at about 20 seconds per run at the end of yesterday (last red dot), and today I started way back at about 60 seconds per run. That might look like almost no retention of whatever I “learned” yesterday. Yes, my first data point today was almost twice as fast as the first one from yesterday, but that could be an outlier. I remember making loads of mistakes the first time yesterday and restarting the scale several times.\nAlthough my starting points are similar, it appears there was a decent amount of savings in relearning. Savings in relearning is a concept from Hermann Ebbinghaus and his research on forgetting. Ebbinghaus spent time learning lists of random syllables until he could recite them, and then he waited different amounts of time before trying to recall them from memory. Not surprisingly, he forgot items over time. However, he would also relearn lists a second time, after the delay, and often found savings in his relearning attempt. Even though he had forgotten items from the list, when he tried to relearn the list, it took less time (than the initial learning attempt) before he could recite it perfectly again.\nSomething similar is going on here. One possibility is that I forgot everything I learned since yesterday, and that’s why I was back at the beginning. However, even though the data show I was basically back at the beginning, it seems my practice from yesterday helped me relearn faster than before. The green dots go down faster over practice attempts than the red dots. Yesterday I only got 15 scales completed in 10 minutes, but this time I got through 30 attempts. I also got my time down to 8 or 9 seconds by the end."
  },
  {
    "objectID": "blog/18_1_18_24_Relearning/index.html#rd-attempt",
    "href": "blog/18_1_18_24_Relearning/index.html#rd-attempt",
    "title": "Savings in relearning",
    "section": "3rd attempt",
    "text": "3rd attempt\nFor now I’m not being systematic about any of this. It’s been a few hours since my second attempt at practicing the B maj6 diminished scale. What would happen if tried again, instead of waiting for a longer delay?\nSo, I went and tried again for 10 minutes. Here’s the data:\n\n\n\n\n\n\n\n\n\nOverall, the blue dors are pretty similar to the green dots from this morning. Even though I got down to about 8 seconds this morning, I didn’t start from there when I went back to practice. My first run on the third attempt was a big improvement in some sense, but the second run was way worse.\nI’ll sit back an do a bit of introspective psychology along with some hand-wavy data description about what seems to be happening. For convenience, I’ll split this into three phases.\nPhase 1. Puzzling it out. There is a lot action going on in the first 10 practice attempts. I start out really slow, and then make substantial speed gains across the first few attempts. Introspectively, this a very new scale to me. I can’t readily mentally visualize yet. By comparison say to a C major scale, the elements of which I can very easily bring to mind in terms of visual mental imagery or a mental sense of fingering chord shapes. Sitting here right now, I can think of a B maj6 chord now, but I’m drawing a blank when I think about the next chord. OK, it took at least 15 seconds to reconstruct the Dbdim7 chord in my mind. So, at this point in my B maj6 dim scale practice, when I go sit down to try playing it, I don’t have a great mental visualization of it, and I’m puzzling out each chord as I go through the scale.\nIf I zoom into the production of the scale it goes something like this. - OK, play the first chord…and, I’m practicing the B scale. - Look at B, but thumb on B (think that I should’ve practice B more as a kid). - I’m not slamming that B major triad…a little confused on whether to play E or Eb, or F or Gb. If things get really bad, then I can go back to first principles and work out the intervals in semitones, but I rarely need to do that for basic chords. However, this kind of mental puzzle talk is happening at the same time as important memories might come back. For example, I’m starting to get a nice mental image about the shape Bmaj6, with the B Eb Gb Ab. It’s a palpable kind of embodied knowledge or sense of the chord that is hard to describe, but has a lot to do with how my fingers and keyboard look and feel as they spread across and make contact with those notes. The B is the only white note, and the other three notes are pretty far away. I think the B-Gb perfect fifth might be physically the furthest on the piano. In any case, whatever this chord sense is, if I’m lucky enough for it to be “retrieved”, voila, I can use that memory and then play it (sidenote, this is basically the instance theory of automatization idea from an instrospective perspective). - Waiting for either the puzzling out process to find a solution, or for a memory of B maj6 to pop-up, is followed by playing the chord, ya I got it down. - At this point, I’m on the chord I was trying to play, and having trouble thinking up the next chord. - Another puzzling out process/waiting for a useful memory of the next chord ensues. Sometimes I just go for it and land the next chord not really knowing if it was going to work out. - I usually want to have some confidence that I will play the next chord correctly. So, I will sit on the current chord, stare at my fingers, and try to invoke the next chord. - Sometimes, I’m not particularly verbalizing or instructing myself about what the next chord is. Or, I’m changing the instruction. For example, if I’m on Bmaj6 and trying to play the next chord, I could be saying “play the next chord”, or “play the ii”, or “the next one is going to be the diminished chord, but what diminished chord is it?”, or “play the Db”, or “what is the Dbdim7”, and so on. Othertimes, there seems to be less inner voice, and more a sense of fingering patterns that need to change. - More recently, I’ve been trying to mentally visualize the next chord before I play it. Once I lock in the finger sense of what that chord will be, then I go to it. I find this usually helps with accuracy.\nTaking all of this together I think provides some descriptive context to account for the lengthy inter-chord production times that appear in phase 1 (the first 10 practice attempts). I haven’t automatized these chords yet, and lot’s of different kinds of cognitive processing from active puzzling out a solution, to side conversations not super relevant to my current task, to losing track of what I’m doing, to finding that I do remember a chord— these activities all take some amount of time before the next chord is produced. And, those times can account for some of the time in-between each chord.\nIn my first few practice attempts, I find that some chords come back from memory, and others take some puzzling. And, that these can switch around sometimes, especially after going through the scale. There’s also room for a bunch of interference from other chord knowledge. For example, yesterday I did some focused practice on playing fully diminished 7th chords in every key. Now, this morning when I’m going through the Bmaj6 scale, even though I know that I should be alternating maj6 and dim7 chords across each note, sometimes I’ll be trying to play an Ebmaj6, but the Ebdim7 comes out. So, as I get into practicing the scale, achieving fluency also involves managing interference from other chords.\nPhase 2. Almost getting it. I would say phase 2 is what is happening in between practice attempts 10 and 30. I’m hitting a floor here of about 10-12 seconds. This is not very fast or fluid, but I’m able to consistently play through the scale without making too many errors. Introspectively, there is still a lot of thinking going on before many chords. Sometimes I get a nice fast run of three or four chords in a row, other times I might completely fall apart on a chord and have a very long pause before being able to play it.\nPhase 3. Whispers of fluency. In these very early practice attempts, by the time I get past 30 runs I’m starting to almost feel comfortable. I can begin to sense how the chords would be played in a fluent manner. If I go for it I can play it fast with lots of errors, but with the general feeling close to right.\nAchieving actual fluency. As a piano player, I’m just going to keep practicing this scale, mix it up, and have fun with it. Fluency will come with practice, and I’m not going to sweat about it, or really care too much about optimizing the process.\nAs a cognitive psychologist, I am nevertheless wondering about various practice schedules or approaches that could influence getting an unfamiliar musical concept into series of fluent actions that I don’t have to think about. There are lots of manipulations that could be interesting to try.\nOne approach is for me to go all out and just practice ascending chords in the Bmaj6 scale, as I’ve been doing, but go all day long until I reach some kind of fluency criterion that’s good enough for now. If I could play that scale in 3 seconds I would be very happy with that level of fluency. Could I get to 3 seconds by focused repetitive practice, drilling that puppy until I get there or go to sleep trying, or before piano mush brain sets in? Maybe? If I did get to that criterion, what kind of retention would I have tomorrow?\nIt’s possible that large swathes of the above practice schedule would be practically useless. I could get tired and sloppy. Maybe I need to have a sleep and rely on the magic of memory consolidation. Or perhaps spread out the practice with lots of other intervening stuff.\nIn the first scenario I might actually get to a reasonable level of fluency in this scale sometime today. In the second scenario, it could take days or months depending on how many things I did in between.\nI’m realizing I have a bunch more to write about this, but not in this post. I think it’s time for some cross-posting between my main research blog and this here music blog."
  },
  {
    "objectID": "blog/3_12_23_23_cycling/index.html",
    "href": "blog/3_12_23_23_cycling/index.html",
    "title": "Cycling through Major 7ths",
    "section": "",
    "text": "The basic task is to play Major 7th chords through the circle of fifths.\n\n\nCircle of fifths\nGoing clockwise the next note is a perfect fifth from the previous note.\n\nMajor 7th chords have a I-III-V-maj7 structure. These are the first, third, fifth, and major 7th notes in the major scale of the root key. For example, the key of C has 7 notes in the major scale: C D E F G A B\nThe chord C Maj7 (also notated as C∆7) is C-E-G-B.\nWhere C is the root or first note, E is the III, G is the V, and B is the major VII. The same pattern is applied to make Maj7 chords in all other keys.\nAt the beginning of this practice track I play chords going anti-clockwise through the circle of fifths:\nC∆7 - F∆7 - Bb∆7 - Eb∆7 - Ab∆7 - Db∆7 - Gb∆7 - B∆7 - E∆7 - A∆7 - D∆7 - G∆7 - C∆7\nI can probably play through this a bit faster, but not without making mistakes. One goal is to get the speed up both in both directions (anti-clockwise and clockwise).\nNext, there is a short riff that I got from Nahre Sol’s youtube channel, who has some other great recommendations for playing through maj7th chords.\nThen, I end with playing ∆7th chords in my left hand and messing around with playing through major scales in the right hand. For example, if I’m playing a C∆7th, then I’m playing through the C major scale and so on. I thought I would have a better grasp on all of the major scales, but some of them are way out of practice. Yeesh. Baby steps.\nA random observation about musical relationships that this exercise drew out. When playing anti-clockwise, the next chord remains ambiguous with respect to the tonal center: it could indicate a switch of the root, but maybe not. There isn’t enough evidence to go on based on the notes in the major 7th chords.\nFor example, going from C∆7 to F∆7 involves CEGB and FACE, all of these notes are in the C Major scale. So, the F∆7 chord doesn’t add any new notes, which in my mind allows some ambiguity about whether we are in C major still or have switched to F major. The F major scale has a Bb, which is the one note that makes F major different from C major, but this note is not voiced in the F∆7 chord. However, this “new note”, which would provide evidence that the root had switched from C to F is voiced by the next chord in the circle of fifths, Bb. So, in some sense moving anti-clockwise by one chord sets up a question—has the root changed?—and moving one more chord answers the question—yes—, but also asks the same question again, in a circle of fifths."
  },
  {
    "objectID": "blog/8_12_27_23_quantic_rain/index.html",
    "href": "blog/8_12_27_23_quantic_rain/index.html",
    "title": "Recreating a beat from Quantic’s Life in the Rain",
    "section": "",
    "text": "Album cover - The 5th Exotic by Quantic\n\nRecord this thing into Ableton and grab the beat.\n\nSidenote. Attempting this on a new mac. I was going to record from Apple Music into Ableton, but I wasn’t setup for that. I used to use soundflower to route audio, and now I’m going to try loopback.\nReally annoying to install on my new mac because of the process of allowing kernel extensions. ugh. Will it work? OK, it worked.\n\nHere’s 8 bars from Quantic. The first 4 are a bit of cymabals, and the beat comes in on the last 4. It’s the last 4 that I’m interested.\n\n  \n\nSet up some drums in Ableton and MIDIfy this beat.\n\n\nThis took a little while. Not a huge fan of penciling in midi markers on my computer to make beats.\nSet up a basic drum rack, found some close enough sounds\nUsed the EP-133 as a midi controller to pound in the beats, that was more fun\nNudged things around etc.\ngot close\n\nI ended up with this version of the main beat:\n  \nThen, what’s fun with having everything as a midi note is to play around with note probability, and with adding hits that weren’t there, but now have a small probability of being there. Here’s an example of setting most of the sounds to a 50% probability.\n  \nIt’s more airy, but still carries the groove.\nPractice notes: More or less accomplished the goal for this drum recreation exercise. Did not mix the drum voices to taste.\nTo Do:\n\n[] Use this somehow.\n[] Learn a little bit more about saving midi clips/audio etc. in ableton so that it is easy for me to re-use this later.\n[] See about programming this beat into the Varigate 8+, and or Hermod, so I have a modular version"
  },
  {
    "objectID": "blog/template/index.html",
    "href": "blog/template/index.html",
    "title": "blog template",
    "section": "",
    "text": "“fragments of a dream woven together with little puzzle pieces showing a universe of possibility” - LCM_Dreamshaper_v7\n  \nNothing to see here. This is the template file I use to start posts.\nPost goes here."
  },
  {
    "objectID": "blog/5_12_25_23_7thFirst/index.html",
    "href": "blog/5_12_25_23_7thFirst/index.html",
    "title": "7th first II-V-I",
    "section": "",
    "text": "I’ve been taking practice inspiration from Mark Levine’s Jazz Theory Book. This exercise wasn’t in there specifically, but it’s in the spirit of root-bias deprogramming.\n\n\n\nLevine has these fun quips throughout that I’m trying to follow through on:\n\nRemember, practice all scales and patterns both ascending and descending; on the major, melodic minor, diminished, and whole-tone scales and in all keys\n\n\nYou’ve now learned about all four of the scales you’ll need under your fingers to play over chord changes. The next question is how to practice them. And you don’t just want to practice them, but to internalize them to the point where they become an available pool of notes, on which to improvise.\n\n\n…the goal is to deprogram yourself from years of root-bias conditioning\n\nI learned piano in the classical music tradition and practiced all my scales and chords in a massively root-biased way when I was a kid. So, one of my goals right now is to think about chords from non-root perspectives.\nFor example, in this exercise my goal is to practice leading with the 7th note. This is related to the exercise from yesterday, but I did few things differently. Here’s the idea:\n\n\nPlay II-V-I chords through the circle of fifths\nFor each chord, lead with the 7th note, then bounce between the 7th note and each inversion of the 7th chord.\n\nIn the first bar I have a D-7 chord in the key of C major. The minor 7th note is a C, and instead of thinking C = C major, I’m trying to also think C = D-7 . And, by doing this around the circle of fifths, you end up practicing every kind of 7th chord (maj, dom, min) for every key.\nThis exercise implies some related ones that I’ll get to some other day, such as leading with the 5th, or leading with the 3rd…and then leading with the weirder stuff (sus, b5, b9, #11)."
  },
  {
    "objectID": "blog/19_1_19_24_Contextual_Interference/index.html",
    "href": "blog/19_1_19_24_Contextual_Interference/index.html",
    "title": "Estimating practice time needed, and a bit on contextual interference",
    "section": "",
    "text": "I’ve been having so much fun making time for more music. I so needed this.\nAs my next semester at Brooklyn College is about to begin next week, I’m hoping I can keep up some of this momentum. Coincidentally, this semester I am planning to turn some of my research program in cognitive psychology towards aspects of music cognition, and I ended up posting about that a little bit on my main research blog yesterday. The research won’t necessarily mean playing more music, but it should at least keep me on my fingers, so to speak.\nToday’s post continues in the spirit of intermingling my interests in cognition and piano practice."
  },
  {
    "objectID": "blog/19_1_19_24_Contextual_Interference/index.html#recap",
    "href": "blog/19_1_19_24_Contextual_Interference/index.html#recap",
    "title": "Estimating practice time needed, and a bit on contextual interference",
    "section": "Recap",
    "text": "Recap\nOver the past few posts I’ve been focusing on getting command of the maj6 diminished scale in the key of B. I measured my improvement with practice and found a few things were happening. When I sit down to play the scale (I’m playing it as a series of chords ascending), there is a big start-up cost. On the first go round it took me 104 seconds to play the scale. Then a day later only about 60 seconds. Last night I started up at about 20 seconds. For each practice set, I also continued to produce the scale for 10 minutes, by playing it over and over, in what I might term massed repetitive practice. Within each practice set, my scale completion times decreased with each attempt. I usually got down to about 10 seconds to complete the scale. Still pretty slow, but making progress.\nI can play the 7th chords of a regular major scale in C in about 3 seconds, from a cold start. So, I’m using 3 seconds as a rough achievement criterion. If I can get my B maj6 diminished scale to 3 seconds, then I’ll have achieved that somewhat arbitrary criterion. And, then I would literally be confident that I could play it in my sleep. I was trying to play it going to sleep in my head last night, and it is still slow to visualize.\nI am definitely hitting a floor right now at about 10 seconds, and there could be several problems that I need to sort out. I don’t often play in B, and it might be one of my weakest keys over all. Sometimes I get confused about whether I should be playing an E or F (yikes). The maj6 diminished scales adds a b6, and sometimes I get confused about that note (G). I don’t know why I sometimes want to play A. I conceptually know the correct chords and fingerings, but can’t execute everytime, especially with speed. So, in cognitive psychology terms, I am running up against the speed-accuracy tradeoff. I can go slow and accurate, but errors creep in approaching 10 seconds, and then they really popoff if I push past faster.\nIf I limit my musical goals to getting this one scale down, then I have so many questions about how to go about doing that. Overall, it is clear that I need to practice, practice, practice, and I will meet my fluency criterion eventually. But, there are lots of things to practice. I could practice the chords ascending only, which is how I’m measuring my performance. I could practice up and down, or arpeggios, and all sorts of other stuff. I could practice other scales. I could practice in lentghy repetitive sessions, or takes lots of breaks and practice every other day, or longer. Infinite practice variations here.\nAlmost done with the recap. All of the above is about to connect to a phenomena in cognitive psychology called contextual interference. This phenomena shows that repeatedly practicing a motor sequence versus alternating practice between different motor sequences, can have notable consequences for learning, performance, and retention. And, I’d like to explore that with my own practice this morning.\nBut, because I am full of tangents, I need to attempt an answer to a burning question first.\nHow many practice attempts do I need to get my B maj6 diminished scale under 3 seconds?"
  },
  {
    "objectID": "blog/19_1_19_24_Contextual_Interference/index.html#estimating-how-much-practice-i-need-with-my-own-practice-curve",
    "href": "blog/19_1_19_24_Contextual_Interference/index.html#estimating-how-much-practice-i-need-with-my-own-practice-curve",
    "title": "Estimating practice time needed, and a bit on contextual interference",
    "section": "Estimating how much practice I need with my own practice curve",
    "text": "Estimating how much practice I need with my own practice curve\nThis graph shows my learning curves for three different sets of practice attempts. I start producing the scale slowly, and then as I repeatedly attempt the scale, I pick up speed until I get down to about 10 seconds.\n\n\n\n\n\n\n\n\n\nWhat I can do next is take an average of these three learning curves, which looks like this:\n\n\n\n\n\n\n\n\n\nThere is debate in the cognitive science literature about the functional form of this curve. Maybe it’s a power function, maybe it’s an exponential function. They are both pretty similar looking. Here’s what a power function fit looks like:\n\n\n\nCall:\nlm(formula = log(mean_ft) ~ log(sets), data = df_avg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.46986 -0.09867  0.01724  0.16628  0.31374 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  4.49031    0.10817   41.51   &lt;2e-16 ***\nlog(sets)   -0.63201    0.03874  -16.32   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1983 on 34 degrees of freedom\nMultiple R-squared:  0.8867,    Adjusted R-squared:  0.8834 \nF-statistic: 266.2 on 1 and 34 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\n\n\n\n\nLooks pretty good to me, the line is going right through dots. So, the line can represent a kind of average practice curve. The neat thing is that I can keep drawing the line out following the power function. This allows me to use my existing data to make a prediction about how many practice attempts I need to get down to 3 seconds.\n\n\n\n\n\n\n\n\n\nSo, according to the limited data that I collected, I should be able to get down to 3 seconds in 219 practice attempts. If I add up all of the scale completion times from 1 to 219 (that are implied by this curve), then it will take 1568 seconds to get there, or 26 minutes of repeated practice.\nWow, that surprises me actually, I thought it would take longer. And, this is only an estimate, it could be way off in either direction. For example, I’ve already practiced a total of 30 minutes, over 3 sets of 10 minutes. Maybe I should have tried 26 minutes the first time and just got it over with!\nTBH I kind of want to go try this for 26 minutes as see what happens. Maybe I will set that aside as something I do later and report back. Instead, I will continue with the goal of this post."
  },
  {
    "objectID": "blog/19_1_19_24_Contextual_Interference/index.html#contextual-interference-and-mixed-vs-random-practice",
    "href": "blog/19_1_19_24_Contextual_Interference/index.html#contextual-interference-and-mixed-vs-random-practice",
    "title": "Estimating practice time needed, and a bit on contextual interference",
    "section": "Contextual interference and mixed vs random practice",
    "text": "Contextual interference and mixed vs random practice\n\nShea, J. B., & Morgan, R. L. (1979). Contextual interference effects on the acquisition, retention, and transfer of a motor skill. Journal of Experimental psychology: Human Learning and memory, 5(2), 179.\n\nThe above paper showed a curious effect possibly relevant to practicing music.\n\n\n\nShea & Morgan had people practice sequences of motor movements on an unfamiliar device. The device is shown in the margin.\nOn each practice trial, one of the stimulus lights would turn on. The light indicated one of three movement sequences to perform. For example, one of the movement sequences was to grab the tennis ball in the middle, then strike down the gates in a particular order:\n\nright rear, left middle, right front\nright front, left middle, right rear\nleft front, right middle, left rear\n\nThis is abstractly similar to learning to play a series of notes on a strange instrument.\nThe important manipulation in their experiment involved whether or not people repeatedly practiced a sequence, or had to randomly alternate between sequences.\nOne group received “blocked” practice training. They got practice on each of the three sequences. Each sequence was performed 18 times in a row. So, each sequence was grouped into a “block” of 18 practice attempts. This group got to practice a sequence repeatedly until they ran out of attempts, and then they moved onto the next sequence and practiced it on repeat.\nThe other group received “random” practice training. They practiced each sequence 18 times overall, but the order was totally randomized by the stimulus lights. This involves many more switches between sequences during practice. Let’s take a look at the data from the study:\n\nThe y-axis shows total time in seconds, which measures how fast people were able to produce a sequence. In the acquisition phase (when they were practicing the sequences), both groups got faster with practice. The random group started out the slowest, and made large gains with practice, but they didn’t end up as fast as the blocked group. The blocked group started out pretty fast, made smaller gains with practice, but ended up the fastest.\n+1 for blocked practice right?\nNot so fast. Shea & Morgan also included a retention test. Some subjects waited 10 minutes after the acquisition before attempting the sequences again, others waited 10 whole days before producing the sequence again.\nThe retention graph has several things going on here. I should also mention that the type retention test was counterbalanced. Some participants who received blocked training also received a blocked version of the retention test, but others received a random version of the retention test; and vice versa for the random group.\nThe basic pattern shown in the retention graph is that participants who received random practice retained the more than the participants who received blocked practice. This seems almost paradoxical. The blocked practice group “learned the most”, or “performed the best” during acquisition, but they also forgot the most when trying to redo the sequences later on. The random group appeared to have inferior learning, but they retained what they learned much better than the blocked group, and they even performed better on the retention test than the best scores from the block group.\nAre there implications of this result for music training? A quick search on google scholar shows several papers looking at blocked vs random practice schedules in music learning contexts. I haven’t had time to read them yet, but I assume there are positive findings showing some influence of blocking or randomly varying practice on learning musical skills. In general, this phenomena has been demonstrated across a fairly wide range of tasks, so I would expect it to generalize to motor skills on piano.\n\nI need to interrupt this post. I had ambitions to try blocked vs random practice myself, and I was going to do it. But, then I thought more about how I would do it so that I can measure my performance times, as well as how would I randomly tell myself what scales to play…and, then I realized I had to do something else first.\nBegin the process of building computational assessment methods. Should be fun. This semester I have some plans to get more serious about this using MIDI and jspsych.\nFor now, I’m going to try something as simple as possible. The basic idea is to be able to have my ipad present a target stimulus for practice, like “A major triad”, or “c major scale”, or “C7 chord”, or whatever I want. I’ll set my ipad up on the piano, wait for the stimulus, and the try to play it as fast as possible. I’ll also add a little button on the screen to press when I finish playing the target stimulus. This will be really hacky from a cogsci perspective, but I’ll improve the precision later. For now, this will work to collect some rough personal data on my progress learning the maj6 diminished scale.\nTime to roll up the javascript programming sleeves."
  },
  {
    "objectID": "blog/6_12_26_23_rootless9th/index.html",
    "href": "blog/6_12_26_23_rootless9th/index.html",
    "title": "Rootless 9th chords",
    "section": "",
    "text": "“An underground lair of piano playing rabbits. Above the rabbits are the roots of carrots that have been eaten by rabbits as they play piano.” - LCM_Dreamshaper_v7\nToday’s exercise was running I∆7add9 chords through the circle of fifths.\nThe first row shows the notes of the C major scale with corresponding numbers. The 9th note is the same as the second note in the scale.\nThe second row shows the concept of constructing chords from thirds. From this perspective, you get all of the notes in the scale going up by thirds, but the 9th, 11th, and 13th note are out of their normal order.\nThis exercise focuses on the “rootless” 9th chord on the bottom row. That one has a major 3rd, a perfect fifth, a major 7th, and a 9th.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n\nC\nD\nE\nF\nG\nA\nB\nC\nD\nE\nF\nG\nA\nB\n\n\nC\n\nE\n\nG\n\nB\n\nD\n\nF\n\nA\n\n\n\n\n\nE\n\nG\n\nB\n\nD\n\n\n\n\n\n\n\n\nIn the exercise I played these chords clockwise and anti-clockwise through the circle of fifths. I usually used my left hand for the bass note and to remind myself where I was in the circle. Then I played versions of the 9th chord. They all have a smashing pumpkins kind of vibe.\nOne reason I chose this exercise is to press harder on deprogramming my root conditioning. These chords don’t have the root in them, so they must be good for that (e.g., thinking about doing something in C, but not playing C, or only playing around C).\nAnother musical connection is that these 9th chords are the same as a III-7 chord. So, an E minor 7th is a C major 7th add 9.\nCognitive science connections: As a sidenote, my day job is a cognitive psychology professor who studies skill-learning. I’ve been meaning to do some piano skill research and I even have the keyboards in my lab to do it. So, as I go through these exercises it’s been fun thinking about issues like how does training on some musical ideas transfer to others.\nFor example, I’m already fairly fluid at playing the circle of fifths in different ways. If I’m playing single notes, I can go through the circle very quickly. It’s slower for chords, but still fairly quick. I’ve been practicing my 7th chords through the circle, so I can already go through the circle playing minor 7th chords fairly quickly. However, it turns out I can not do these 9th chords quickly. There should be pretty good transfer here because the 9th chords are exactly the same as the minor 7th chords that I have already practiced.\nIn terms of minor 7th chords I had been practicing these chords, with the root in the bass.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n\nE-7\nB-7\nGb-7\nDb-7\nAb-7\nEb-7\nBb-7\nF-7\nC-7\nG-7\nD-7\nA-7\n\n\nE\nB\nGb\nDb\nAb\nEb\nBb\nF\nC\nG\nD\nA\n\n\n\nBut, I had not been practicing those chords with the following bass notes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n\nE-7\nB-7\nGb-7\nDb-7\nAb-7\nEb-7\nBb-7\nF-7\nC-7\nG-7\nD-7\nA-7\n\n\nC\nG\nD\nA\nE\nB\nGb\nDb\nAb\nEb\nBb\nF\n\n\n\nGeneralization is so fickle sometimes.\nAlso, I have some super-biased thirds. What’s the third of C -&gt; E. No problem, that’s fast. A -&gt; C, G -&gt; B. But, B ———&gt; Eb. That one hurts. Eb seems too far away to be a third. In any case. I need to flatten out this distribution at some point."
  },
  {
    "objectID": "blog/14_1_12_24_osmose/index.html",
    "href": "blog/14_1_12_24_osmose/index.html",
    "title": "The VERY Expressive Osmose",
    "section": "",
    "text": "I’ve been really curious about the Expressive Osmose keyboard for a while now. So, I picked one up yesterday.\nBasically all I have to say is: HOLY WOW.\nI might have more to say later, and I may add notes to this post about the osmose as I go through the 7 stages of osmose ownership.\nFor, now I need to get back to pitch bending every note into a tornado of meowing cats.\nEarly afternoon update. I have been noodling away roughly alphabetically through the 500 presets. I’m just starting the ones that begin with C. It’s easy to get lost in fun for hours doing this. Not that I want to take the fun away, but I should start integrating this a little bit more into my setup. Probably the next step will be recording the noodles.\nHere are some notes so far on playing the osmose. These are notes to self to help me progress through this thing."
  },
  {
    "objectID": "blog/14_1_12_24_osmose/index.html#velocity-and-pressure",
    "href": "blog/14_1_12_24_osmose/index.html#velocity-and-pressure",
    "title": "The VERY Expressive Osmose",
    "section": "Velocity and pressure",
    "text": "Velocity and pressure\nThe osmose has several dimensions of expressive control. Like most standard midi keyboards it has note velocity, but it also has pressure, aftertouch, and pitch bend for each key independently, with 24 voice polyphony!\n\n\n\nA digression into my past life of utterly not liking midi keyboards. I grew up playing a Roland 5600 with a MC-300 (or 500?) and MT-32 (where much was had with the orchestra hit sound). I would go to my piano teacher’s houses for lessons on a real piano, and practice on the midi piano at home. It was fun to make different sounds on the roland, but I always wanted a real piano as a kid.\nI still love the action of a real piano. It turns out I also love the action of my rhodes 88 key electric piano. But, I have never loved the action of any midi keyboard that I have ever owned or played. Not the hammer action ones. Not any of them.\nIn 2019 I got to play a CS-80 one time in Melbourne and I could not believe how much a difference polyphonic aftertouch made. It’s so sad that midi keyboards suck so much for so long.\nMaybe I didn’t spend enough time with the other midi keyboards that I didn’t like. Most recently I brought home a Nord 88 key stage piano to use a controller, and it was just ok…one key broke, and there is an uncurable noisy power supply. Plus, these things never feel like an instrument to me, so they just constantly suck joy.\nI have tried to adjust velocity curves and find something that seems better, but never got there. It’s possible I just don’t like how velocity is usually implemented, or that velocity is missing something for me. In any case, when I play on my acoustic or electric piano, even though both keyboards have very different action, they are both very playable and immediately expressive. I don’t have think about it, the expression is just there.\nThis is what I now adore about the osmose. The expression is right there at my finger tips.\nI really like that they have pressure per key too."
  },
  {
    "objectID": "blog/14_1_12_24_osmose/index.html#squishy-goodness",
    "href": "blog/14_1_12_24_osmose/index.html#squishy-goodness",
    "title": "The VERY Expressive Osmose",
    "section": "Squishy goodness",
    "text": "Squishy goodness\nIt’s hard to describe what the action feels like. There is some initial resistance to the keys, but not too much. This is great for light and/or bouncy tapping and slowly applying pressure to the keys. Many of the presets make sound from pressure alone, and sometimes different sounds from pressure or velocity.\nThe aftertouch is the best feeling aftertouch I’ve ever played. There is a slight difference in resistance when you get to aftertouch land, and way more travel down into the aftertouch than on typical midi keyboards. It feels like the key keeps going down into it’s aftertouch home, where it belongs sometimes.\nSimilarly, the key’s pick up side-to-side wiggling throughout the travel of the key and into aftertouch range. This parameter is usually applied to pitch bend. It get’s a bit easier to wiggle when the key is pressed down a bit, but over all it’s very natural."
  },
  {
    "objectID": "blog/14_1_12_24_osmose/index.html#presets",
    "href": "blog/14_1_12_24_osmose/index.html#presets",
    "title": "The VERY Expressive Osmose",
    "section": "Presets",
    "text": "Presets\nLots of juicy stuff in the presets, all powered by EaganMatrix. It’ll be a while before I go into that thing.\nThere are a few onboard effects like a reverb and delays. The reverb can sound pretty good, especially with extend “on”.\nI don’t like menu diving, and it’s pretty fast to make changes to sounds and to sensitivity parameters of the controller. Very happy with that.\nNeed to go play it some more."
  },
  {
    "objectID": "blog/14_1_12_24_osmose/index.html#mpe-controller",
    "href": "blog/14_1_12_24_osmose/index.html#mpe-controller",
    "title": "The VERY Expressive Osmose",
    "section": "MPE controller",
    "text": "MPE controller\nI’ve got it hooked up to the OB-6 and it works very well. Whenever I need the sound to go to 11, I just back it up with some OB-6. The more the scarier."
  },
  {
    "objectID": "blog/14_1_12_24_osmose/index.html#recording-midi-in-ableton-live",
    "href": "blog/14_1_12_24_osmose/index.html#recording-midi-in-ableton-live",
    "title": "The VERY Expressive Osmose",
    "section": "Recording midi in ableton live",
    "text": "Recording midi in ableton live\nI was recording for a bit with one midi track and one audio track. Things seemed to be going fine, but Ableton started freezing up once in a while, and the midi recordings were sometimes really off. The likely culprit is me trying to record MPE midi for the first time.\nIt seems there are some MPE midi settings that are important, like from this video\nStill crashing ableton a bunch. A problem for another day."
  },
  {
    "objectID": "blog/15_1_13_24_modes/index.html",
    "href": "blog/15_1_13_24_modes/index.html",
    "title": "Modes…sigh",
    "section": "",
    "text": "I’m not friends with modes yet. Barely an acquaintance, even after all these years.\nToday’s practice is focusing on modes, yet again. This morning I am thinking of modes like a Donald Rumsfeld quote. Modes for me are known knowns, known unknowns, and unknown unknowns."
  },
  {
    "objectID": "blog/15_1_13_24_modes/index.html#modes-as-known-knowns",
    "href": "blog/15_1_13_24_modes/index.html#modes-as-known-knowns",
    "title": "Modes…sigh",
    "section": "Modes as known knowns",
    "text": "Modes as known knowns\nI’m not sure when I first learned about modes, but probably some time in middle school. Since then I have– in a definitional sense– known what they were.\nThe way I encoded them as a piano player was in terms of the C major scale. There are 7 modes of the major scale, corresponding to each key of the major scale. Each mode involves playing the major scale from a different root note. This got turned into a heuristic like, play all the white keys from C to C…then play them from D to D, E to E, and so on. Those are the modes. That’s it. Also, the major scale modes have these Greek names:\n\n\n\nMode Name\nStarting Note\nNotes in C Major\n\n\n\n\nIonian\nI\nCDEFGABC\n\n\nDorian\nII\nDEFGACBD\n\n\nPhrygian\nIII\nEFGABCDE\n\n\nLydian\nIV\nFGABCDEF\n\n\nMixolydian\nV\nGABCDEFG\n\n\nAeolian\nVI\nABCDEFGA\n\n\nLocrian\nVII\nBCDEFGAB\n\n\n\nThe mode concept is a descriptive one. Other scales have can be described as having modes using the same principles as above.\nThat’s about as far the known knowns go for me. I don’t really think in terms of modes when I play. Also, that’s why I’m working on thinking in terms of modes again. For the extra flavor and different perspective that they bring."
  },
  {
    "objectID": "blog/15_1_13_24_modes/index.html#modes-as-known-unknowns",
    "href": "blog/15_1_13_24_modes/index.html#modes-as-known-unknowns",
    "title": "Modes…sigh",
    "section": "Modes as known unknowns",
    "text": "Modes as known unknowns\nThere’s lots of other stuff that I in some sense “know” about modes. But, in practice, that conceptual knowledge is not well integrated into my playing.\nThe best example is that I never really bothered to automatize the modes across all of the keys. Oops. Here again is a strange failure of generalization.\nOn the one hand, I have practiced all of the modes across all of the keys. For example, over the past month I’ve been doing a lot of major scale work going up and down the major scale in every key, in every mode. I can play them all reasonably quickly now. So, that’s great. I must know my modes right? Not really.\nOn the other hand, I wasn’t thinking about modes, mode names, or modal relationships as I was playing through those scales. So, for example, I knew it would be hard to play C scales in the different modes. Of course I know C ionian. But, what is C dorian? Mind goes blank. Then slowly, “yes, C is the II of Bb”, so then C dorian is, “play a Bb major scale starting from C.” Then, what is the third mode even? Can’t remember…oh yes, Phrygian. What is C Phrygian? ummm….blah.\nOf course, I can play an Ab major scale, but thinking of C Phygrian as Ab is one of those known unknowns. It’s the kind of missing connections I know are there, but haven’t bothered to glue together.\nMore generally, I’m hoping that working through modes will help me firm up these kinds of relations between notes so that they are within striking distance of my finger tips. For example:\n\nC as a I (Ionian) in C\nC as a II (dorian) in Bb\nC as a III (phrygian) in Ab\nC as a IV (Lydian) in G\nC as a V (Mixolydian) in F\nC as a VI (Aeolian) in Eb\nC as a VII (Locrian) in Db\n\nAnd, then all of those same relationships for every note."
  },
  {
    "objectID": "blog/15_1_13_24_modes/index.html#modes-and-unknown-unknowns",
    "href": "blog/15_1_13_24_modes/index.html#modes-and-unknown-unknowns",
    "title": "Modes…sigh",
    "section": "Modes and unknown unknowns",
    "text": "Modes and unknown unknowns\nI suppose this is the stuff I’ll discover later on when I know my modes better.\nOne example from this morning was noticing patterns of harmonic ambiguity that are mildly interesting. For example, let’s say you play a C and G, which could be described as a perfect fifth in the key of C. What else could it be? Those notes are in the C major scale, so they could imply C Ionian. Those notes are also in the Bb major scale (the II and VI), so they could imply Bb as the tonal center, and in that case playing notes from C dorian would help fill in that implication. The same goes for all of the other modes of C (except for locrian where the G is diminished). And this is a fun little toy to play with, like a jack-in-the-box. Playing Cs and Gs is like turning the gear of the box, building expectations about what kind of jack will pop up, and then OMG, it’s a locrian scale."
  },
  {
    "objectID": "blog/15_1_13_24_modes/index.html#modes-by-accident",
    "href": "blog/15_1_13_24_modes/index.html#modes-by-accident",
    "title": "Modes…sigh",
    "section": "Modes by accident",
    "text": "Modes by accident\nI still can’t remember the names of modes. And, I haven’t encoded them in terms of their accidental values. So, that’s why I am making this table. These are the different modes of C.\n\n\n\n\n\n\n\n\n\nMode Name\nAccidental\nMajor scale\nC scale\n\n\n\n\nIonian I\nnone\nC\nC D E F G A B C\n\n\nDorian II\nbIII, bVII\nBb (C is -ii)\nC D Eb F G A Bb C\n\n\nPhrygian III\nbII, bIII, bVI, bVII\nAb (C is -iii)\nC Db Eb F G Ab Bb C\n\n\nLydian IV\n#IV\nG (C is iv)\nC D E F# G A B C\n\n\nMixolydian V\nbVII\nF (C is v)\nC D E F G A Bb C\n\n\nAeolian VI\nbIII, bVI, bVII\nEb (C is -vi)\nC D Eb F G Ab Bb C\n\n\nLocrian VII\nbII, bIII, bV, bVI, bVII\nDb (C is vii)\nC Db Eb F Gb Ab Bb C\n\n\n\nSo, a new goal will be to play the modes in each key from this point of view.\nThe I (ionian), IV (lydian), and V (mixolydian) modes are “major” flavor, and the II (dorian), III (phrygian), IV (aeolian), and VII (locrian) modes are “minor” flavor.\nI’m going to re-order the modes in terms of the circle of fifths.\n\n\n\n\n\n\n\n\n\nMode Name\nAccidental\nMajor scale\nC scale\n\n\n\n\nLydian IV\n#IV\nG (C is iv)\nC D E F# G A B C\n\n\nIonian I\nnone\nC\nC D E F G A B C\n\n\nMixolydian V\nbVII\nF (C is v)\nC D E F G A Bb C\n\n\nDorian II\nbIII, bVII\nBb (C is -ii)\nC D Eb F G A Bb C\n\n\nAeolian VI\nbIII, bVI, bVII\nEb (C is -vi)\nC D Eb F G Ab Bb C\n\n\nPhrygian III\nbII, bIII, bVI, bVII\nAb (C is -iii)\nC Db Eb F G Ab Bb C\n\n\nLocrian VII\nbII, bIII, bV, bVI, bVII\nDb (C is vii)\nC Db Eb F Gb Ab Bb C\n\n\n\nFrom this point of view there are five increasingly “minor” modes, going from Mixolydian to Locrian. Thinking in terms of what spices are added to the C major, the mixolydian adds a Bb. If you play a C and the dominant 7th (Bb), then there is a kind of question…how many more minor spices are there going to be? When I’m cooking a minor chord, there’s lots of spices to be added. There’s less major spice options, but throw in the tri-tone once in a while I guess.\nMore notes…The same table as above, using arabic numerals, and re-ordering in terms how the flats are added in the circle of fifths.\n\n\n\n\n\n\n\n\n\nMode Name\nAccidental\nMajor scale\nC scale\n\n\n\n\nLydian IV\n#4\nG (C is iv)\nC D E F# G A B C\n\n\nIonian I\nnone\nC\nC D E F G A B C\n\n\nMixolydian V\nb7\nF (C is v)\nC D E F G A Bb C\n\n\nDorian II\nb7, b3\nBb (C is -ii)\nC D Eb F G A Bb C\n\n\nAeolian VI\nb7, b3, b6\nEb (C is -vi)\nC D Eb F G Ab Bb C\n\n\nPhrygian III\nb7, b3, b6, b2\nAb (C is -iii)\nC Db Eb F G Ab Bb C\n\n\nLocrian VII\nb7, b3, b6, b2, b5\nDb (C is vii)\nC Db Eb F Gb Ab Bb C"
  },
  {
    "objectID": "blog/15_1_13_24_modes/index.html#modes-as-slashpolychords",
    "href": "blog/15_1_13_24_modes/index.html#modes-as-slashpolychords",
    "title": "Modes…sigh",
    "section": "Modes as slash/polychords",
    "text": "Modes as slash/polychords\nI’ve seen different definitions of slash and polychords. One definition of a slash chord (say D/F#) is to play the numerator triad (D) with the denominator bass note (F#). And, a polychord would be playing one triad with the right hand (D) and another with the left hand (F#).\nAnother way to think of playing modes is in terms of slash chords or poly chords; or, I guess slash scales or poly scales. For example, consider a G/C. That could indicate a G major scale over a C bass note. Playing the G major scale starting and ending on C is the same as C lydian.\nIn the next table the note in the denominator is the root. The note in the numerator is the major scale to be played over the root (starting and ending on the root). The roman numerals show interval relations between the root and scale. For example, in the lydian column, the root is the fourth note in the corresponding scale (C is the fourth of G, G is the fourth of C). Modifying the major scale in the denominator by the accidental yields the major scale in the numerator (For Bb/C, flattening the 37 in C is B-&gt; Bb and E -&gt; Eb, which then turns the C scale into a Bb scale). The table is arranged in terms of the circle of fifths.\n\n\n\n\n\n\n\n\n\n\n\n\nLydian\nIonian\nMixolydian\nDorian\nAeolian\nPhrygian\nLocrian\n\n\n\n\nMajory\nMajor\nMajorish\nMinor\neven\nmore\nMINOR\n\n\nIV\nI\nV\nII\nVI\nIII\nVII\n\n\n#4\n–\nb7\nb73\nb736\nb7362\nb73625\n\n\nG/C\nC/C\nF/C\nBb/C\nEb/C\nAb/C\nDb/C\n\n\nC/F\nF/F\nBb/F\nEb/F\nAb/F\nDb/F\nGb/F\n\n\nF/Bb\nBb/Bb\nEb/Bb\nAb/Bb\nDb/Bb\nGb/Bb\nB/Bb\n\n\nBb/Eb\nEb/Eb\nAb/Eb\nDb/Eb\nGb/Eb\nB/Eb\nE/Eb\n\n\nEb/Ab\nAb/Ab\nDb/Ab\nGb/Ab\nB/Ab\nE/Ab\nA/Ab\n\n\nAb/Db\nDb/Db\nGb/Db\nB/Db\nE/Db\nA/Db\nD/Db\n\n\nDb/Gb\nGb/Gb\nB/Gb\nE/Gb\nA/Gb\nD/Gb\nG/Gb\n\n\nGb/B\nB/B\nE/B\nA/B\nD/B\nG/B\nC/B\n\n\nB/E\nE/E\nA/E\nD/E\nG/E\nC/E\nF/E\n\n\nE/A\nA/A\nD/A\nG/A\nC/A\nF/A\nBb/A\n\n\nA/D\nD/D\nG/D\nC/D\nF/D\nBb/D\nEb/D\n\n\nD/G\nG/G\nC/G\nF/G\nBb/G\nEb/G\nAb/G\n\n\n\nThinking in terms of the circle of fifths. Playing a slash scale one fifth above the root is Lydian. Playing a scale in the root is Ionian. Playing slash scales down the circle of fifths (anti-clockwise) is Mixolydian, Dorian, Aeolian, Phrygian, Locrian."
  },
  {
    "objectID": "blog/15_1_13_24_modes/index.html#playing-the-sound-of-the-modes",
    "href": "blog/15_1_13_24_modes/index.html#playing-the-sound-of-the-modes",
    "title": "Modes…sigh",
    "section": "Playing the sound of the modes",
    "text": "Playing the sound of the modes\nNote to self to just get into it."
  },
  {
    "objectID": "blog/17_1_17_24_BarryHarris/index.html",
    "href": "blog/17_1_17_24_BarryHarris/index.html",
    "title": "Practicing some Barry Harris methods",
    "section": "",
    "text": "A couple of days ago I stumbled across the Barry Harris system as taught by one of his students Shan Verma, who also runs https://www.jazzskills.com.\nI’ve been randomly watching a few videos from his youtube channel and trying a few things out.\nAll of the practice is around learning the major 6th diminished scale, which has some very interesting properties, and sounds great.\nThese two videos show the two primary ideas for today’s practice."
  },
  {
    "objectID": "blog/17_1_17_24_BarryHarris/index.html#what-i-did-so-far",
    "href": "blog/17_1_17_24_BarryHarris/index.html#what-i-did-so-far",
    "title": "Practicing some Barry Harris methods",
    "section": "What I did so far",
    "text": "What I did so far\nWoke up and played the scale using alternating maj6 and dim7 chords. Played through C, F, and Bb. Also, ran through the building up notes exercise in each key, starting from each note in the scale for each key."
  },
  {
    "objectID": "blog/17_1_17_24_BarryHarris/index.html#practice-notes",
    "href": "blog/17_1_17_24_BarryHarris/index.html#practice-notes",
    "title": "Practicing some Barry Harris methods",
    "section": "Practice notes",
    "text": "Practice notes\nC scale notes. I was playing through this one last night as well. In particular, I was attempting to get the ‘building up notes’ exercise fluid. If I played each step like a new chord it felt chunky. If I played each step like an ascending run in the right hand, and simultaneous descending run in the left hand it was fast. However, when I did those runs I was only playing single notes, and leaving out the internal notes that form the maj6 or dim7 chords. Then, I got into the swing of alternating my fingers properly.\nThe table shows the fingering for thumb to pinky (1-5), for the left and right hands. Start with both thumbs on the same note. Then, the index to pinky (2345) go on every note ascending on the right, and every note descending on the left.\n\n\n\n\n\n\n\n1\n\n1\n\n\n\n\n\n\n\n\n\n2\n\n\n\n2\n\n\n\n\n\n\n\n3\n\n1\n\n1\n\n3\n\n\n\n\n\n4\n\n2\n\n\n\n2\n\n4\n\n\n\n5\n\n3\n\n1\n\n1\n\n3\n\n5\n\n\n\nTook a little while, but once the symmetry hits the fingering locked in pretty easily.\nIn C, starting from the Ab has a particularly nice symmetrical viewpoint.\nF scale notes. Practice went pretty well. This scale uses a different dim7 chord (GBbDdE). Felt like a little bit of interference from C. The Fmaj6 chord has the same shape and fingering as Cmaj6.\nAs I was playing the building up notes exercise through every note, I started to think more about how I could use the exercise. I started asking questions like, where does this movement want to go? For example, starting on the root, and “building up notes” seems to want to resolve on the V.\nBb scale notes. These observations would apply to any of the other scales, but I roughly had these thoughts around this time in practice. So, I’m going to stop organizing notes by scale."
  },
  {
    "objectID": "blog/17_1_17_24_BarryHarris/index.html#scale-practice-checkbox",
    "href": "blog/17_1_17_24_BarryHarris/index.html#scale-practice-checkbox",
    "title": "Practicing some Barry Harris methods",
    "section": "Scale practice checkbox",
    "text": "Scale practice checkbox\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nC\nF\nBb\nEb\nAb\nDb\nGb\nB\nE\nA\nD\nG\n\n\n\n\nx\nx\nx\nx"
  },
  {
    "objectID": "blog/17_1_17_24_BarryHarris/index.html#more-practice-notes",
    "href": "blog/17_1_17_24_BarryHarris/index.html#more-practice-notes",
    "title": "Practicing some Barry Harris methods",
    "section": "More practice notes",
    "text": "More practice notes\n\nWhen/Where to start building up?\nNoodling around in CMaj6…lots of CEGA. I started building up on C.\n\nstep 1, playing a C is kind of redundant with the chord, but it sets the location\nstep 2. playing a BD is nice. It’s not part of CEGA, but it adds the maj7 and 9th. Easy to sprinkle in whenever, even if staying on CMaj6. sprinkles of possible movement.\nstep 3. ACE, restating the center, with minor vii feels\nstep 4. AbBDF, dominant chord, lots of possibilities, wants to go G\n\nStill playing over a Cmaj6, I did a little bit of starting the building up notes on different notes, but not too much. Need to do that more, to get a better sense of the directions.\n\n\nWhat a step in the building up exercise provides\nThe building up notes exercise starts by emphasizing some particular note in the scale. This could be where you are at, say in a melody. Then, it alternates between adding the next notes in a maj6 chord, or a dim7 chord. I should sit down and spell this out for myself at some point after I get the fingering down across keys.\n\nin general, the exercise provides a way to start on a note in the scale, transition between restating aspects of the root (through the maj6), or the diminshed 7th chord, with very harmonious sounding transitions. The transitions already have a bit of movement, and they set up off-ramps into other directions. Especially from a dim7th chord, which can easily end up as four different 7th chords.\n\n\n\nCognitive science notes: proactive interference\nProactive interference is a well-known phenomena in the learning and memory literature. The classic finding is from studies of free recall. Participants are given lists of items to study, like words, and then after a delay they are asked to recall as many as possible from the list. Pro-active interference occurs when your memory for items in the list is impaired by previous exposure and/or learning attempts to memorize other lists.\n\nThe figure shows some recall data from Underwood (1957). The x-axis is number of previous lists. Some subjects were new to these kinds of studies, and they had not tried to memorize lists of items before. Their recall was pretty high. Other subjects had participated in these kinds of studies before, and had tried to memorize many different lists (up to 20 different lists). The more lists one had previously tried to learn, the worse participants did when trying to learn and recall a new list.\nAs I try to learn the maj6th diminished scale across all of the keys I’m wondering about the role of pre-active interference, as well as other kinds of interference. If learning scales was like learning random lists of words, then it is possible that every time I learn one scale, the next scale becomes harder to learn because of this so-called pro-active interference. My general sense is that this isn’t how learning scales works in practice, and that prior experience generally helps with learning new things. Not to say that there isn’t sometimes interference.\nEb practice…got through it, thought a little more about pro-active interference, and “task-switching” or key-switching.\nIt’s not clear to me that findings showing pro-active interference in free recall should neatly generalize to learning scales. One reason is that the free-recall studies usually used arbitrary lists of items with no particular relationships to one another. Part of the pro-active interference is that one accidentally recalls words from a previous list, and those get counted as errors. Also, learning additional lists of random items is like trying to grow a vocabulary of random words with no particular meaning.\nIn contrast to random lists of words, musical scales have many shared elements across keys. There is lots of opportunity for facilitation and interference. For example, learning to play the dim7 in the C major 6th diminished scale could facilitate learning the Eb, Gb, and A versions of that scale, because they use the same dim7 chord. At the same time, there could be associative interference at play based on prior learning attempts. For example, learning to interleave CEGA with DFAbB(dim7) could reinforce those interchord assocations, such as C6-Ddim7-E6. Then, consider moving to learn Eb major 6th diminshed. There is a C6-Ddim7-Eb6, and perhaps here the E6 will interfere with the Eb6? I wonder what a MINERVA process would do here…\n\n\nCogsci notes: Key-switching costs\nAnother classic finding in cognition is called the task-switching cost. This has been demonstrated in diverse task situations. The basic finding is that there are usually costs, in terms of time and accuracy, when switching from one task to another.\nI’ve been practicing the build up exercise in C, F, Bb, and Eb. The fingerings are all different, but similar enough that my fluency is getting better, even as I switch to new keys.\nThese four keys share some notes. For example, C appears in all of C, F, Bb, and Eb scales. I did practice the build up for all four, across all notes of the scale, which means that I did start on C and do the build up for each key. However, I practiced the build up ascending and descending within each scale.\nI am 100% experiencing pretty strong key-switching costs if I start on C alone, and try to then produce a build in the key of F, Bb, or Eb. It’s much easier to start on C major. Need to break out of the switch cost by practicing these more.\nA musical benefit is that a build-up exercise starting say on C, can take you in lots of places, by building up into different keys from that one note. Opening so much opportunity for movement. Wow.\n\n\nCogsci notes: Spacing and repetition during practice\nAnother well-known set of phenomena in learning and memory are spacing and repetition effects. I have been thinking about these phenomena as I’ve been practicing, and I was probably thinking more about these than what I was trying to accomplish in Ab as I was learning the maj6 diminished scale in that key.\nSpacing effects seem to be a common export of cognitive psychology, especially in various apps for ‘optimizing’ learning. For example, flashcard apps and language learning apps will build in a spacing algorithm. The purpose of the algorithm is to space out repetitions during practice, which can facilitate learning and memory (whether or not spacing effects have positive or negative benefits, or no effect can depend).\nRepetition effects are another commonly studied phenomena. In general, repeatedly practicing an action, movement pattern, or series of movements, increases the fluency and “automaticity” of the action. Musician’s know this very well. If you haven’t practiced a Gb scale before, or in a while, your performance will be slow and error-prone. If you repeatedly play the scale up and down and up and down, over and over, it get’s easier, and your performance will become faster and more accurate. Repetitions can also make performance worse sometimes (but I’ll skip over those cogsci things for now).\nStudies of practicing motor skills, like learning scales, typically show that performance gains follow a power or exponential functions (both are very similar looking), like the one below.\n\nThe general outcome is that measures of fluency, like scale speed, increase with more practice. However, the gains that are made with practice decrease. The biggest gains in performance are seen early on in practice, afterwards, it takes a lot of practice to make very tiny gains. There are lots of reasons for this basic curve. On a piano, one issue is that people can only move their fingers up to some limit, so there are hard limits to the floor of the function. And, it may take loads of practice to approach those near floor limits.\nA related concept with repetitive practice is the idea of diminished returns. Repetitive practice will increase fluency for sure, but at some point in practice one becomes fluent enough, and further practice isn’t going to do much. So, the question becomes when to stop repeating and move onto something else? Which leads back to the spacing of repetitions question.\nLet’s say you are trying to practice major scales in all of the keys. What kind of practice schedule should one adopt? There are lots of options, and depending on how you arrange things, the repeated attempts can be massed together or spread out. I’ve got more to say about this kind of stuff, but will get back to practicing Gb. Although, it would be possible to get fancy and use concepts from cognition, I’m just going through the circle of fifths. This has musical benefits, and moving in that direction involves going from one key to another that share many notes. As a result, I think I get a little bit of facilitation from learning one scale to another, and also a little of bit of a discriminative challenge to make sure I’m not playing the previous one. Seems like a productive level of difficulty.\nLunch break\n\n\nTurning up the interference\nAll the above being said, over lunch I was wondering about maximum interference practice schedules. For example, consider this build-up note exercise. I could write a computer program to tell me what note to start on, and what key to build on, and have this be totally random. That would be a great little practice tool (note to self to make some midi javascript stuff later). But, it would be hard. Especially for me right now because I don’t know the build-up patterns in most keys yet.\nSomething more approachable, but still hard, would be for me to do much less repetition as I practice the remaining keys (I think I have about 8 left). Up until this point, I have been doing a lot of varied practice within each key. Something like this for each key:\n\nplay the all the notes of the scale up and down, and all around\nplay them all at the same time to “see the notes all together”\nplay them in sets of 4 or 5, starting on different notes\nplay them up and down starting on different notes\nplay the maj6 inversions as chords, then as arpeggios\nplay the dim7 inversions as chords, then as arpeggios\nput the alternating chords together, play through the scale up and down in chords\nplay through the scale up an down in arpeggios\nStart playing the build-up exercise on each note of the scale. Do this up and down and all around\n\nThat’s a lot of different kinds of repetition, and it seems to work pretty well. My fingers get used to the pattern of notes in the key, and then I’m on my way. Still, playing the scale in terms of chords is slow at first, and I’m not getting very fast, but it does become comfortably slow fairly quickly.\nA different sort of practice schedule would be more painful. For example, I could go immediately to playing the chords of the maj6 diminished scaled in Db, which is the next key I need to practice. This will be new for me, and I know it will take sometimes a few seconds or more of staring and thinking, and getting a bit lost, to press the first chord, and then the second and so on. I will be working it out on the fly. After going up the scale one time, I could decide to stop Db, and switch to Gb (the next one in my anti-clockwise circle of fifths practice cycle). That would be new and somewhat painful too. In other words, the harder, less repetitive, more spaced out practice schedule could be: once up then switch to new key.\nMaybe I will try this next I’m not sure if I have the patience for it…as I like to feel the progress. However, I can imagine some potentially interesting side effects (benefits? or at least potential consequences) of this switchy schedule. One possibility is that this schedule may increase associative linkages between a current musical goal and an intended outcome. One reason this might happen is that when attempting new patterns, the goal may be clear (e.g., play the third chord of the maj6 dim scale in Gb), but the action and corresponding pattern may not be clear. So, one is keeping the goal in mind as an instruction, and trying to work out the pattern, and then execute. As a result, this constitutes a processing episode where the goal was in mind at the same time as a puzzling out process, as well as an action being executed. According some theories of learning and memory the things that happen during an episode of learning are preserved in memory, and later retrieved when similar circumstance are re-encountered. Not sure what the practical consequences would be for learning scales in this manner…maybe I should go try this.\nAlright…not as bad as I thought that would feel. Here’s a practice table with some scale completion time data:\n\n\n\nKey\nFinishing time (minutes)\n\n\n\n\nDb\n1:23\n\n\nGb\n1:00\n\n\nB\n1:44\n\n\nE\n1:30\n\n\nA\n:49\n\n\nD\n1:17\n\n\nG\n:56\n\n\nWell-practiced (C)\n:12\n\n\n\nThis was pretty slow going, and fairly cognitively taxing. Was constantly reminding myself what I was trying to do, while puzzling out what to play. Not too bad though. Perhaps this caused me to make some more deliberate connections than I otherwise would have, not sure. My times were generally getting faster as I moved anti-clockwise, but that could reflect my overall fluency in those keys in general. I hadn’t tried the major 6 dim scale in any of these keys before and all the completion times (to play the chord for each note ascending) are about a minute or longer. By comparison, I went back to the piano and played through the C scale in 12 seconds…still pretty slow. For another comparison, I went back and played a regular C major scale in 7th chords in less than 3 seconds. Presumably with enough practice I get the above scales down under 3 seconds too. In C, I’ve already got down to 12 seconds. Not bad.\nI had the worst time on B. I’m also curious on what kind of fluency gains I would make by just repeating this over and over. I think I should practice this a bunch of times in a row and see what the learning curve looks like. I’m using anything fancy, just the stopwatch on my iphone. I will play the scale in chords ascending, and press the lap button every time I’m finished. Let’s put in 10 minutes of repetitive practice and see where that gets me.\nDone. And, time plot the data in R!\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\n\n\n\n\nIt’s not a pretty power curve, but at least it is generally decreasing. I was hovering around a minute per ascending attempt for the first 7 attempts. Then, a few things started to get easier, and I started speeding up. I cut my time by more than half, yah! Still a long way to go to get faster than 3 seconds. And, I suppose this gives me some perspective on what I got out 10 minutes of this kind of practice.\nI’m going to try one more 10 minute burst for fun. This time I’ll do the scale in E, which was my second slowest time. However, instead of playing the scale ascending over and over for 10 minutes. I’m going to do whatever I want for 10 minutes, and see what happens. More specifically, I’ll take the list of things I mentioned earlier that I was doing, that helped me get my fingers into the key, and all that kind of stuff. Then, in the 9th minute, I’ll start timing my ascending runs. Maybe my more varied practice version of 10 minutes would get that scale into shape faster than just focusing on ascending runs…Or maybe not?\nDid that. At the end I did a run of chords in E in about 20 seconds. But, my second attempt ended around 30 seconds with lots of errors. I was probably getting a bit better at all of the other things I was practicing, rather than being able to specifically do the ascending chords.\nAlso, starting to experience brain melt from too much piano practice. Maybe I should call it a day :)"
  },
  {
    "objectID": "blog/21_1_21_24_chord_reaction_time/index.html",
    "href": "blog/21_1_21_24_chord_reaction_time/index.html",
    "title": "Expanding the chord reaction time test",
    "section": "",
    "text": "cartoon thundercat scientist building a synthesizer. laboratory. science. 80s cartoon. space music.\nI’ve been tinkering with a web-based “Chord Reaction Time” test to measure how fast I can play various chords on demand. The first version of the task had all the keys and three basic 7th chords (7, -7, ∆7). The newer version adds a selection screen, and more chords to practice. I don’t have a demo to share yet, but here’s a figure of what happens:\n\nAt the moment, whenever I play a chord in response to a name, I have to simultaneously press the space bar on a bluetooth keyboard. That keypress records my reaction time to the chord and triggers the next trial. This coming week I’ll look into using the laptop microphone to record reaction time by analyzing amplitude changes (and then later something similar using MIDI).\nYesterday afternoon I tried my hand at all the chords in all the keys. I haven’t looked at the data yet, but I’m sure it will tell me that I’m slow at the chords that I already know I’m slow on.\nThis graph averages over keys and shows mean chord reaction time for each type of tested chord form.\n\n\n\n\n\n\n\n\n\nI should dedicate practice to all of the chords above the 2 second range.\nOne question I have is whether the performance on this kind of test would meaningfully predict my ability to fluently play through chord changes on lead sheets.\nMy experience right now is that I can often get through chord changes on a new song without too much trouble, but I’ll get tripped on the altered chords with flats and sharps. More like fall all over the place. I can’t dead reckon those chords. Instead, I’ll sit there and take 5 seconds or more to puzzle out the chord, which ruins the flow. If I’m feeling diligent I might work out a fingering pattern that makes it easy to play in that context. However, I don’t appear to retain any of that chord knowledge in a general way.\nI assume that if I was able to play all my chords really well in the context of playing lead sheets then my reaction times in the above graph would be faster and more uniform. I could practice this test over and over, and I’m pretty confident that I would get faster on the slower chords. However, one possibility is that that this learning would be somewhat specific to the peculiar demands of this very non-musical chord production task. So, it’s not clear to me that improvements derived from practicing chording in this task would fully generalize to helping me play lead sheets. At the same time, If I can get all the chords down to under 2 seconds in all the keys, that’s gotta help.\nBreakfast time.\n\nI did practice some of the extended chords yesterday. This morning I did a round of practice/testing on the 7b9 chords.\nYesterday, 7b9 were initially excruciatingly slow. I couldn’t play any of them and had to construct them on the fly. As the graph below shows, I took over 12 seconds to produce some of the chords.\nPractice felt very slow and I didn’t feel like I was locking in new patterns at a fingering level. For example, I can visualize a C7 chord immediately, and still can’t visualize a C7b9 (even after all this practice).\nNevertheless, the graph shows some substantial gains in chord production time. There were a few stages in learning to play this chord. Stage 1 was having no clue and working out each chord anew. In stage 2, I settled on a method to get to the 7b9: play the 7th chord in root position, go up 1 inversion, but instead of playing the root at the top, play 1 semitone above the root. Stage 2 was pretty slow also. At some point I realized that I already knew all of these chords as o7 chords. For example C7b9 without the root has E-G-Bb-Db, which are all the notes in Eo7, Go7, Bbo7, and Dbo7. In stage 3, I switched to translating the chord name, “C7b9”, and thinking play the o7 on the third (or, in this case Eo7). That helped a little bit in terms of speed, and I think it makes musical sense to build mental associations between the 7b9 and o7 anyway.\n\n\n\n\n\n\n\n\n\n```"
  },
  {
    "objectID": "blog/22_1_22_24_chord_similarity/index.html",
    "href": "blog/22_1_22_24_chord_similarity/index.html",
    "title": "Chord Similarity analysis table",
    "section": "",
    "text": "This is a quick post with some tools for looking at chord similarity.\nI took all of the chords on this music theory page, and represented them in a chord vector space using one-hot codes.\nEach chord is represented as a vector with 12 features, corresponding to each of the 12 possible notes. If a note is in a chord, then the note feature get’s a 1 in the vector. All other features are set to 0.\nHere’s a few examples of what the vectors look like.\nkey\ntype\nitem\nC\nDb\nD\nEb\nE\nF\nGb\nG\nAb\nA\nBb\nB\n\n\n\n\nC\nkey\nC note\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nC\nscale\nC major scale\n1\n0\n1\n0\n1\n1\n0\n1\n0\n1\n0\n1\n\n\nC\ntriads\nC major triad\n1\n0\n0\n0\n1\n0\n0\n1\n0\n0\n0\n0\n\n\nC\ntriads\nC minor triad\n1\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n\n\nC\ntriads\nC6\n1\n0\n0\n0\n1\n0\n0\n1\n0\n1\n0\n0\nI created vectors for 47 chords across all keys. This results in a matrix with 564 rows (for each chord vector) and 12 columns for each note feature.\nNext, I used the vector cosine to compute the similarity between each chord and every other chords. That results in a 564x564 chord-similarity matrix.\nIn the matrix, similarity ranges from 0 (no similarity) to 1 (perfect similarity). The similarity function basically tracks how many overlapping features there are between two chords. If each chord has zero shared notes, then similarity will be 0. As a chord increases in the number of shared notes, then similarity increases.\nIf I have extra time I may play around with some additional ways to visualize this matrix. For now, I’m using the datatable library to load the matrix into this webpage. It’s a bit clunky and very large.\nThe table should scroll left and right. The columns can be sorted ascending or descending by clicking the little arrows beside a column name. Sorting from the largest value to the smallest value will re-arrange the row-names on the left side. This produces an ordered list of chords from most to least similar to the column name that was clicked."
  },
  {
    "objectID": "blog/22_1_22_24_chord_similarity/index.html#second-order-similarities",
    "href": "blog/22_1_22_24_chord_similarity/index.html#second-order-similarities",
    "title": "Chord Similarity analysis table",
    "section": "Second-order similarities",
    "text": "Second-order similarities\nupdate: this table has been moved to the shiny app\nThis table uses the above cosine similarity vectors for each chord as the basis vectors, and then computes another similarity matrix. The approach has interesting properties in other domains like computational modeling of word semantics. Just curious to look at it in this context.\nOne basic observation is that in the first-order similarity space (above), there are many 0 similarities between pairs. For example, the single note C has 0 similarity to every other single note, because each note only has one feature, and the features never overlap. However, in the second-order matrix, individual notes now have some positive similarity to each other. This is because the whole vector of similarities for C (from above), now has many shared elements with the vectors for the other chords, and a similarity can be computed.\nI suspect this table will have some more musically interesting things going on.\n\nfirst_order &lt;- lsa::cosine(t(chord_matrix))\nsecond_order &lt;- lsa::cosine(first_order)\n\nsecond_order_similarities &lt;- cbind(chord_properties,\n                                   second_order)\nrow.names(second_order_similarities) &lt;- NULL\n\nDT::datatable(\n  second_order_similarities,\n  extensions = \"FixedColumns\",\n  options = list(\n    paging = TRUE,\n    pageLength =  25,\n    fixedColumns = list(leftColumns = 4)\n  )\n)"
  },
  {
    "objectID": "blog/22_1_22_24_chord_similarity/index.html#first-order-chord-similarity",
    "href": "blog/22_1_22_24_chord_similarity/index.html#first-order-chord-similarity",
    "title": "Chord Similarity analysis table",
    "section": "First order chord similarity",
    "text": "First order chord similarity\n\n# import excel sheet\nc_chord_excel &lt;- rio::import(\"chord_vectors.xlsx\")\n\n# grab feature vectors\nc_chord_matrix &lt;- as.matrix(c_chord_excel[,4:15])\n\n# assign row names to the third column containing chord names\nrow.names(c_chord_matrix) &lt;- c_chord_excel[,3]\n\n# define all keys\nkeys &lt;- c(\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\")\n\n\n# the excel sheet only has chords in C\n# loop through the keys, permute the matrix to get the chords in the next key\n# add the permuted matrix to new rows in the overall chord_matrix\nfor (i in 1:length(keys)) {\n  \n  if (i == 1) {\n    # initialize chord_matrix with C matrix\n    chord_matrix &lt;- c_chord_matrix\n    \n  } else {\n    #permute the matrix as a function of iterator\n    new_matrix &lt;- cbind(c_chord_matrix[, (14-i):12],c_chord_matrix[, 1:(13-i)] )\n    \n    # rename the rows with the new key\n    new_names &lt;- gsub(\"C\", keys[i], c_chord_excel[,3])\n    row.names(new_matrix) &lt;- new_names\n    \n    # append the new_matrix to chord_matrix\n    chord_matrix &lt;- rbind(chord_matrix,new_matrix)\n  \n    }\n}\n\n# calculate similarities between keys\nkey_similarities &lt;- lsa::cosine(chord_matrix)\n\n# calculate similarities between keys\nchord_similarities &lt;- lsa::cosine(t(chord_matrix))\n\nchord_properties &lt;- tibble(\n  type = rep(c_chord_excel$type,length(keys)),\n  key = rep(keys, each = dim(c_chord_matrix)[1]),\n  chord_names  = row.names(chord_similarities)\n)\n\nchord_similarities &lt;- cbind(chord_properties,\n                            chord_similarities)\nrow.names(chord_similarities) &lt;- NULL\n\n# print table\n# try datatable options...didn't work as I wanted\n# DT::datatable(\n#   chord_similarities[1:50,1:50],\n#   extensions = c(\"FixedColumns\",\"SearchBuilder\",\"Buttons\"),\n#   options = list(\n#     paging = TRUE,\n#     pageLength =  25,\n#     fixedColumns = list(leftColumns = 4),\n#     dom = \"BQlfrtip\",\n#     searchBuilder = TRUE,\n#     search = list(return = TRUE),\n#     buttons = 'colvis'\n#   )\n# )\n\nDT::datatable(\n  chord_similarities,\n  extensions = \"FixedColumns\",\n  options = list(\n    paging = TRUE,\n    pageLength =  25,\n    fixedColumns = list(leftColumns = 4)\n  )\n)"
  },
  {
    "objectID": "blog/22_1_22_24_chord_similarity/index.html#shiny-app",
    "href": "blog/22_1_22_24_chord_similarity/index.html#shiny-app",
    "title": "Chord Similarity analysis table",
    "section": "Shiny app",
    "text": "Shiny app\nupdate\nThere were originally tables in this post, but they were basically unusable. Ideally, I’d like to search the tables on my ipad while it is sitting on my piano.\nI tried to make a shiny app using webr (that would run without a server), but I couldn’t make it work.\nSo, here is a shiny app that does work:\nhttps://crumplab.shinyapps.io/webr-chord-similarity/"
  },
  {
    "objectID": "blog/23_1_23_24_minerva/index.html",
    "href": "blog/23_1_23_24_minerva/index.html",
    "title": "Minerva and expectancy from a chord vector space",
    "section": "",
    "text": "Show the code\nfrom diffusers import DiffusionPipeline\nfrom transformers import set_seed\nfrom PIL import Image\nimport torch\nimport random\nimport ssl\nimport os\nssl._create_default_https_context = ssl._create_unverified_context\n\n#locate library\n#model_id = \"./stable-diffusion-v1-5\"\nmodel_id = \"dreamshaper-xl-turbo\"\n\npipeline = DiffusionPipeline.from_pretrained(\n    pretrained_model_name_or_path = \"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/\"\n)\n\npipeline = pipeline.to(\"mps\")\n\n# Recommended if your computer has &lt; 64 GB of RAM\npipeline.enable_attention_slicing(\"max\")\n\nprompt = \"Minerva robot of wisdom. binary codes. thundercat cartoon. music. music theory. conceptual. reverberation. resonance. colorful.\"\n\nfor s in range(30):\n  for n in [5,10]:\n    seed = s+21\n    num_steps = n+1\n    set_seed(seed)\n    \n    image = pipeline(prompt,height = 1024,width = 1024,num_images_per_prompt = 1,num_inference_steps=num_steps)\n    \n    image_name = \"images/synth_{}_{}.jpeg\"\n    \n    image_save = image.images[0].save(image_name.format(seed,num_steps))\nThis is a scratchpad post with R code to explore some esoteric computational modeling ideas. I want to get coding, but will put a bit of context around this.\nMy plan is to take the chord vector space I made yesterday (see last post), and put it into the memory of a MINERVA-II model. Then, I’m going to probe the model with various input patterns, and see what comes out.\nI wish I had time to review MINERVA-II in more depth here, but I don’t. Very quickly, MINERVA-II is an instance-based model of human memory processes by Douglas Hintzman (Hintzman 1984). This model was inspired by Richard Semon’s memory theory (Semon 1923), which I find very poetic. Semon made up his own terms so that he could more precisely state his theoretical ideas, including words like engram, engraphic, and homophony.\nThe basic idea is that people store the patterns of individual experiences in memory. And, a current pattern can retrieve old memories by similarity. MINERVA-II uses a resonance metaphor. A pattern is presented to a memory system. The pattern activates all of the traces in memory, in proportion to their similarity to the pattern. In this way, memory is call and response process. The pattern of the present moment resonates with the memory system bringing forth a chorus of activated traces. This memory response is called the echo. The resonance between the structure of the pattern in the present moment and similar traces from the past is what Richard Semon called homophony. I have some lecture material on these concepts in my intro to cognition course.\nNow onto the R code. Memory is the chord vector matrix. I can “probe” the model by giving it any feature vector as an input. The input probe activates every chord in memory by it’s similarity (using the vector cosine). The memory responds as a similarity weighted sum. All of traces are multiplied by their similarity, and then summed up into a single feature vector, called the echo."
  },
  {
    "objectID": "blog/23_1_23_24_minerva/index.html#loading-chord-vector-space",
    "href": "blog/23_1_23_24_minerva/index.html#loading-chord-vector-space",
    "title": "Minerva and expectancy from a chord vector space",
    "section": "Loading chord vector space",
    "text": "Loading chord vector space\n\n\nShow the code\n# pre-processing to get the chord vectors\n\n# load chord vectors\nc_chord_excel &lt;- rio::import(\"chord_vectors.xlsx\")\n\n# grab feature vectors\nc_chord_matrix &lt;- as.matrix(c_chord_excel[,4:15])\n\n# assign row names to the third column containing chord names\nrow.names(c_chord_matrix) &lt;- c_chord_excel[,3]\n\n# define all keys\nkeys &lt;- c(\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\")\n\n\n# the excel sheet only has chords in C\n# loop through the keys, permute the matrix to get the chords in the next key\n# add the permuted matrix to new rows in the overall chord_matrix\nfor (i in 1:length(keys)) {\n  \n  if (i == 1) {\n    # initialize chord_matrix with C matrix\n    chord_matrix &lt;- c_chord_matrix\n    \n  } else {\n    #permute the matrix as a function of iterator\n    new_matrix &lt;- cbind(c_chord_matrix[, (14-i):12],c_chord_matrix[, 1:(13-i)] )\n    \n    # rename the rows with the new key\n    new_names &lt;- gsub(\"C\", keys[i], c_chord_excel[,3])\n    row.names(new_matrix) &lt;- new_names\n    \n    # append the new_matrix to chord_matrix\n    chord_matrix &lt;- rbind(chord_matrix,new_matrix)\n  \n    }\n}"
  },
  {
    "objectID": "blog/23_1_23_24_minerva/index.html#minerva-ii-modeling",
    "href": "blog/23_1_23_24_minerva/index.html#minerva-ii-modeling",
    "title": "Minerva and expectancy from a chord vector space",
    "section": "MINERVA II modeling",
    "text": "MINERVA II modeling\n\nProbe with a C note\nThe following code shows the basic steps in probing the memory with a cue pattern. I used a C note, which is coded as a single 1, followed by 11 zeros.\nThe cosine similarity between the probe and all patterns in memory is computed. There is a possibility of “tuning” the similarities by raising them to an exponent, but I’ll talk about that later.\nThe individual patterns in memory are multiplied by their similarity to the probe. This allows the cue to selectively retrieve memories that contain features in the cue. For example, traces that have 0 similarity to the cue will be multiplied by 0, and thus eliminated from the echo. The echo is produced by summing the similarity weighted traces.\nThe values in the echo are additive and can get very large. In the last step I divide all of the values in the echo by the maximum value to squish them between 0 and 1.\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe with a C\n# Each of the 12 spots is a note, starting on C\nprobe &lt;- c(1,0,0,0,0,0,0,0,0,0,0,0)\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# tuning function: raise similarities to a power \nactivations &lt;- similarities^1\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\n\necho\n\n\n        C        Db         D        Eb         E         F        Gb         G \n1.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 \n       Ab         A        Bb         B \n0.4200609 0.4772587 0.4790949 0.2163667 \n\n\nI like to think of the echo as the reminder values. Given the model hears a C, it is reminded of things that have a C in them. The echo is a similarity weighted sum of all of those things.\n\n\nFull cacophony\nA couple short detours before going in a more musical direction with this.\nThe echo in MINERVA-II is the concept that memory retrieval acts like a chorus of singers, where each singer is an individual memory trace.\nConsider what would happen if memory was totally unselective and everything was retrieved all at once.\nIn the model, this would be like hearing all of the chords in the memory all at once. This can be represented by summing every trace together into one echo. This is the same as summing down the columns of the matrix like so:\n\n\nShow the code\ncolSums(memory)\n\n\n  C  Db   D  Eb   E   F  Gb   G  Ab   A  Bb   B \n338 338 338 338 338 338 338 338 338 338 338 338 \n\n\nEach note appears 338 times across all of the chords in memory. If they were all played at once, the echo would sound like every note played simultaneously with a loudness of 338. If I normalize the echo by dividing by 338, I’d get all 1s, which would be saying play all the notes at 100% amplitude. In other words, if memory reminded you of everything, everywhere, all at once, it sounds like full cacophony.\n\n\nThe sound of unbiased memory from C\nMINERVA-II allows for selective retrieval of prior memories. The primary mechanism is that a probe pattern activates memories by similarity.\nIn this example, I apply the ceiling() function to the similarities and transform any positive value to 1, and leave the 0s at 0.\nI’m using the C probe, so any chord pattern that has a C element in it will get a 1, and any chord pattern that does not have a C in it will get a 0.\nI calculate both the echo and the normalized echo.\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe with a C\n# Each of the 12 spots is a note, starting on C\nprobe &lt;- c(1,0,0,0,0,0,0,0,0,0,0,0)\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# force similarities to 0 or 1\nactivations &lt;- ceiling(similarities)\n\necho &lt;- colSums((memory*c(activations)))\necho\n\n\n  C  Db   D  Eb   E   F  Gb   G  Ab   A  Bb   B \n338  81 172 169 148 191 130 191 148 169 172  81 \n\n\nShow the code\necho &lt;- echo/max(abs(echo))\necho\n\n\n        C        Db         D        Eb         E         F        Gb         G \n1.0000000 0.2396450 0.5088757 0.5000000 0.4378698 0.5650888 0.3846154 0.5650888 \n       Ab         A        Bb         B \n0.4378698 0.5000000 0.5088757 0.2396450 \n\n\nThe first echo is a measure of co-occurrence frequency between C and the other notes, counting across all of the patterns in memory. The second echo is the same information, just in terms of proportion to the largest value.\nC always co-occurs with itself. C co-occurs next most often with G and F, and then Bb and D etc.\nThis echo is not as cacophonous as hearing every single chord in memory played at the same time. However, i’m guessing this would still sound pretty cacophonous, as it is the sound of about 338 patterns that all contain a C played at the same time.\nAt some point, hopefully today, I’d like to synthesize tones using these echo values for note amplitude and hear what they sound like.\n\n\nIncreasingly selective echoes of C\nMINERVA-II has a few options for controlling how many memories get added into the echo. After computing similarities between the probe and memory traces, the similarities can be raised to a power before weighting the traces. As the exponent increases, smaller similarity values get squashed into 0 and become effectively 0. Larger similarity values remain proportionally larger. Perfectly similar traces remain at 1 regardless of the exponent.\nThe bottom line is that as the power is raised, fewer traces (only the most similar) are allowed to contribute to the echo. As a result, the echo becomes much less cacophonous.\nThe code below shows what happens when the probe is a C, and the exponent is raised to 1, 3, 11, and 51.\nWhen the exponent is small, C is the loudest feature in the echo, but many other notes have some loudness too.\nWhen the exponent is increased, the C remains the loudest, but the other notes get softer.\nIn the case of this vector space, driving up the exponent really, really high, essentially causes only the identical patterns in memory to be retrieved. In the extreme, the C retrieves itself, and there are not other sounds of co-occurrence.\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe with a C\n# Each of the 12 spots is a note, starting on C\nprobe &lt;- c(1,0,0,0,0,0,0,0,0,0,0,0)\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\necho &lt;- colSums((memory*c(similarities^1)))\necho/max(abs(echo))\n\n\n        C        Db         D        Eb         E         F        Gb         G \n1.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 \n       Ab         A        Bb         B \n0.4200609 0.4772587 0.4790949 0.2163667 \n\n\nShow the code\necho &lt;- colSums((memory*c(similarities^3)))\necho/max(abs(echo))\n\n\n        C        Db         D        Eb         E         F        Gb         G \n1.0000000 0.1731107 0.4114787 0.4288597 0.3797730 0.4798933 0.3271873 0.4798933 \n       Ab         A        Bb         B \n0.3797730 0.4288597 0.4114787 0.1731107 \n\n\nShow the code\necho &lt;- colSums((memory*c(similarities^11)))\necho/max(abs(echo))\n\n\n          C          Db           D          Eb           E           F \n1.000000000 0.005599951 0.016650339 0.025743877 0.020721170 0.026529044 \n         Gb           G          Ab           A          Bb           B \n0.018535963 0.026529044 0.020721170 0.025743877 0.016650339 0.005599951 \n\n\nShow the code\necho &lt;- colSums((memory*c(similarities^51)))\nround(echo/max(abs(echo)))\n\n\n C Db  D Eb  E  F Gb  G Ab  A Bb  B \n 1  0  0  0  0  0  0  0  0  0  0  0"
  },
  {
    "objectID": "blog/23_1_23_24_minerva/index.html#loading-the-chord-vector-space",
    "href": "blog/23_1_23_24_minerva/index.html#loading-the-chord-vector-space",
    "title": "Minerva and expectancy from a chord vector space",
    "section": "Loading the chord vector space",
    "text": "Loading the chord vector space\nThe excel file for the chord vector space is available from the github repo for this blog.\n\n\nShow the code\nlibrary(tidyverse)\n# pre-processing to get the chord vectors\n\n# load chord vectors\nc_chord_excel &lt;- rio::import(\"chord_vectors.xlsx\")\n\n# grab feature vectors\nc_chord_matrix &lt;- as.matrix(c_chord_excel[,4:15])\n\n# assign row names to the third column containing chord names\nrow.names(c_chord_matrix) &lt;- c_chord_excel[,3]\n\n# define all keys\nkeys &lt;- c(\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\")\n\n\n# the excel sheet only has chords in C\n# loop through the keys, permute the matrix to get the chords in the next key\n# add the permuted matrix to new rows in the overall chord_matrix\nfor (i in 1:length(keys)) {\n  \n  if (i == 1) {\n    # initialize chord_matrix with C matrix\n    chord_matrix &lt;- c_chord_matrix\n    \n  } else {\n    #permute the matrix as a function of iterator\n    new_matrix &lt;- cbind(c_chord_matrix[, (14-i):12],c_chord_matrix[, 1:(13-i)] )\n    \n    # rename the rows with the new key\n    new_names &lt;- gsub(\"C\", keys[i], c_chord_excel[,3])\n    row.names(new_matrix) &lt;- new_names\n    \n    # append the new_matrix to chord_matrix\n    chord_matrix &lt;- rbind(chord_matrix,new_matrix)\n  \n    }\n}\n\n\nEach chord is represented as a vector with 12 features, corresponding to each of the 12 possible notes. If a note is in a chord, then the note feature gets a 1 in the vector. All other features are set to 0.\nThe first 10 rows look like this:\n\n\nShow the code\nknitr::kable(c_chord_excel[1:10,])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nkey\ntype\nitem\nC\nDb\nD\nEb\nE\nF\nGb\nG\nAb\nA\nBb\nB\n\n\n\n\nC\nkey\nC note\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nC\nscale\nC major scale\n1\n0\n1\n0\n1\n1\n0\n1\n0\n1\n0\n1\n\n\nC\ntriads\nC major triad\n1\n0\n0\n0\n1\n0\n0\n1\n0\n0\n0\n0\n\n\nC\ntriads\nC minor triad\n1\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n\n\nC\ntriads\nC6\n1\n0\n0\n0\n1\n0\n0\n1\n0\n1\n0\n0\n\n\nC\ntriads\nCm6\n1\n0\n0\n1\n0\n0\n0\n1\n0\n1\n0\n0\n\n\nC\ntriads\nC (add 9)\n1\n0\n1\n0\n1\n0\n0\n1\n0\n0\n0\n0\n\n\nC\ntriads\nCm (add 9)\n1\n0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n0\n\n\nC\ndominant 7th\nC7\n1\n0\n0\n0\n1\n0\n0\n1\n0\n0\n1\n0\n\n\nC\ndominant 7th\nC9\n1\n0\n1\n0\n1\n0\n0\n1\n0\n0\n1\n0\n\n\n\n\n\nThe vector space includes one feature vector for all of the following chords and scales:\nC note, C major scale, C major triad, C minor triad, C6, Cm6, C (add 9), Cm (add 9), C7, C9, C9(#11), C9 (13), C13 (#11), C∆7, C∆9, C∆9(#11), C∆9(13), C∆7(#5), C∆7(b5), Cm7, Cm9, Cm11, Cm7(11), Cm13, Cm13(#11), Cm7(b5), Cm9(b5), Cm11(b5), Csus, C7sus, C9sus, C13sus, C7susb9, C13susb9, C7(b5), C7(#5), C7(b9), C7#9b5, C7#9#5, C7b9b5, C7b9#5, Cm∆7, Cm∆9, Cdim, Co7, Cdim(∆7), C7#11#9, C chromatic, C whole-tone, C major pentatonic, C minor pentatonic, C Ionian, C Dorian, C Phrygian, C Lydian, C Mixolydian, C Aeolian, C Locrian, C maj 6th diminished, C melodic minor, C half-step/whole-step, C whole-step/half-step, C Blues\nThe above shows everything in the key of C. The matrix contains all of the above in all of the keys. For a total of 756 patterns to be stored in the memory matrix.\nIn the next sections I’ll be giving this model an input pattern as a “reminder cue”, and then computing what the model “remembers” based on the cue. This is a way of asking about associations or expectations between one pattern and a history of other patterns. The answers the model gives back are entirely dependent on the nature of the memory traces.\nThe current set of chord vectors is very unlike my own musical experience. If I tried to capture my own musical experience as a series of individual traces, I would be inputting one feature vector for every chord, note, scale, or let’s say short phrase, that I have ever played in my entire life. That collection of traces would be severely biased in terms key, as I way over played things in CFGDA in my life.\nThe chord vector space I’m using here is more like an uniform agent who played every chord and scale equally frequently in all keys. So, the expectations returned by the model are in relation to that kind of unbiased musical history."
  },
  {
    "objectID": "blog/23_1_23_24_minerva/index.html#messing-around",
    "href": "blog/23_1_23_24_minerva/index.html#messing-around",
    "title": "Minerva and expectancy from a chord vector space",
    "section": "Messing around",
    "text": "Messing around\nI’m using this code block to try different probe patterns and see what happens. In general, the echo contains the elements of the probe, and then partial activation of other elements in approximate orders that seem to make musical sense.\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe using row names\nprobe &lt;- chord_matrix['C major triad',]\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# tuning function: raise similarities to a power \nactivations &lt;- similarities^3\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\n\nsort(echo,decreasing = TRUE)\n\n\n        G         C         E         A         D        Bb         F         B \n1.0000000 0.9648918 0.9283912 0.6326961 0.6308542 0.4828259 0.4436583 0.4141189 \n       Gb        Eb        Db        Ab \n0.3390815 0.3329919 0.3127329 0.3109608 \n\n\n\nAdding probes together\nLet’s say one is playing a Dm7 chord in the left hand, and a G as part of a melody line. A probe could be constructed by adding together the vector for Dm7 and G. I’m also sorting the echo by feature intensity. I wonder if the order of notes in the echo could work for figuring out which scales to play over what chords and situations.\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe using row names\nprobe &lt;- colSums(chord_matrix[c('Dm7','G note'),])\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# tuning function: raise similarities to a power \nactivations &lt;- similarities^3\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\n\nsort(echo,decreasing = TRUE)\n\n\n        C         D         G         F         A         E        Bb        Eb \n1.0000000 0.9970230 0.9948008 0.9326157 0.9326157 0.5419088 0.5419088 0.4465277 \n        B        Ab        Gb        Db \n0.4378429 0.3103659 0.2854669 0.2686588 \n\n\n\n\nDiscrepancy\nThe echo contains partial activations of non-probe features. These in some sense represent an expectation about what elements usually co-occur with the probe features in the stored memory traces.\nIt may be interesting to compute a discrepancy vector, which is a difference between the pattern in the probe and the echo.\nThese differences in expectation might be interesting to think about in terms of musical tension and resolution.\nrandom notes:\n\nsubtraction introduces negative values and negative similarity\nwhich way to subtract? probe-echo or echo-probe\n\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe using row names\nprobe &lt;- chord_matrix['C note',]\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# tuning function: raise similarities to a power \nactivations &lt;- similarities^1\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\necho\n\n\n        C        Db         D        Eb         E         F        Gb         G \n1.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 \n       Ab         A        Bb         B \n0.4200609 0.4772587 0.4790949 0.2163667 \n\n\nShow the code\ndiscrepancy &lt;- echo-probe\ndiscrepancy\n\n\n        C        Db         D        Eb         E         F        Gb         G \n0.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 \n       Ab         A        Bb         B \n0.4200609 0.4772587 0.4790949 0.2163667 \n\n\nIn this case the discrepancy vector has activation across all notes except C. Although the activation is not uniform, this discrepancy vector is similar to the chromatic scale, which is all of the notes.\nSubmitting the discrepancy vector as a probe to memory, and then listing the top 10 most similar traces in memory as a way to interpret the vector in terms of the chord patterns.\n\n\nShow the code\nprobe &lt;- discrepancy\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\ndf &lt;- data.frame(chords = row.names(similarities),\n                 similarities = similarities) %&gt;%\n  arrange(desc(similarities))\ndf[1:10,]\n\n\n                   chords similarities\nC chromatic   C chromatic    0.9274934\nDb chromatic Db chromatic    0.9274934\nD chromatic   D chromatic    0.9274934\nEb chromatic Eb chromatic    0.9274934\nE chromatic   E chromatic    0.9274934\nF chromatic   F chromatic    0.9274934\nGb chromatic Gb chromatic    0.9274934\nG chromatic   G chromatic    0.9274934\nAb chromatic Ab chromatic    0.9274934\nA chromatic   A chromatic    0.9274934\n\n\nAdding the echo to probe. After hearing a note the model retrieves the echo as a response. In this new moment the original note and the retrieved chorus are a new combined probe.\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe using row names\nprobe &lt;- chord_matrix['C note',]\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# tuning function: raise similarities to a power \nactivations &lt;- similarities^1\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\necho\n\n\n        C        Db         D        Eb         E         F        Gb         G \n1.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 \n       Ab         A        Bb         B \n0.4200609 0.4772587 0.4790949 0.2163667 \n\n\nShow the code\n# add echo to probe\nprobe &lt;- probe+echo\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\nactivations &lt;- similarities^1\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\necho\n\n\n        C        Db         D        Eb         E         F        Gb         G \n1.0000000 0.6284936 0.7864139 0.7701819 0.7288598 0.8174667 0.6928161 0.8174667 \n       Ab         A        Bb         B \n0.7288598 0.7701819 0.7864139 0.6284936 \n\n\nThis is like having steps of iterative retrieval. A variation is to get the retrieved echo and then submit the echo as the probe. What happens is that the echo fills up with more general co-occurrence information.\n\n\nEcho meaning\nThe echo is a feature vector in the same space as the chords. In general, the echo will contain more activation across all elements compared to any individual chord. This is because the echo sums over many chords, and typically sums over enough chords that all notes end up in the sum.\nIn this sense, the fact that an echo usually has partial activation across all notes, makes the pattern in the echo similar to the chromatic scale, which has all notes. This is not a particularly interesting or nuanced meaning of the echo. If the echo was all 1s, then it would be the chromatic scale.\nThe activation values in the echo depend on the activation function that raises similarity to a power. A given echo can be interpreted in terms of the original chord vectors by calculating similarity between the echo and all of the chords, and then looking at the chords that are most similar. When the exponent is small, the most similar chords returned are all the chromatic scales (which are identical), and other chords with lots of notes in them.\nAs the exponent is raised higher, the pattern in the echo grows more similar to the probe pattern (with some extra activations), and the echo becomes similar to different patterns of chords, eventually honing in on the same ordering as the probe pattern would have.\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe using row names\nprobe &lt;- chord_matrix['C note',]\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# tuning function: raise similarities to a power \nactivations &lt;- similarities^9\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\necho\n\n\n         C         Db          D         Eb          E          F         Gb \n1.00000000 0.02269835 0.06352622 0.08694634 0.07307524 0.09134910 0.06433469 \n         G         Ab          A         Bb          B \n0.09134910 0.07307524 0.08694634 0.06352622 0.02269835 \n\n\nShow the code\necho_similarities &lt;- RsemanticLibrarian::cosine_x_to_m(echo,memory)\ndf &lt;- data.frame(chords = row.names(echo_similarities),\n                 similarities = echo_similarities) %&gt;%\n  arrange(desc(echo_similarities))\ndf[1:20,]\n\n\n                       chords similarities\nC note                 C note    0.9732485\nCsus                     Csus    0.6645644\nC minor triad   C minor triad    0.6620904\nF major triad   F major triad    0.6620904\nAdim                     Adim    0.6596165\nC major triad   C major triad    0.6542962\nF minor triad   F minor triad    0.6542962\nAb major triad Ab major triad    0.6518223\nA minor triad   A minor triad    0.6518223\nFsus                     Fsus    0.6489305\nGsus                     Gsus    0.6489305\nCdim                     Cdim    0.6469109\nGbdim                   Gbdim    0.6469109\nF (add 9)           F (add 9)    0.6178398\nCm6                       Cm6    0.6156973\nF7                         F7    0.6156973\nAm7(b5)               Am7(b5)    0.6156973\nFm (add 9)         Fm (add 9)    0.6110898\nC6                         C6    0.6089473\nF∆7                       F∆7    0.6089473\n\n\nIn this variation the echo is submitted as the probe to generate a second echo. The first echo is already very general because even a single C note is in many chords. The second echo is extremely general because it has positive similarity to all chords. The values in the second echo can be thought of as reflecting very general expectations about note co-occurrence. The first echo also has some of these very general expectations.\nWhat happens here is some proportion of the second echo, which represents super general features, is subtracted from the first echo. This allows the first echo to reflect more nuanced and specific expectations given the probe.\nIt seems necessary to turn this into a shiny app or something, where the parameters can be wiggled around as a way to explore whether there are interesting things going on.\n\n\nShow the code\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe using row names\nprobe &lt;- chord_matrix['Dm7',]\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# tuning function: raise similarities to a power \nactivations &lt;- similarities^3\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\necho\n\n\n        C        Db         D        Eb         E         F        Gb         G \n0.9918638 0.2479850 1.0000000 0.4178599 0.5037347 0.9766951 0.3491312 0.7242753 \n       Ab         A        Bb         B \n0.3603990 0.9657370 0.4859291 0.4261934 \n\n\nShow the code\n# add echo to probe\nprobe &lt;- echo\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\nactivations &lt;- similarities^3\n\nsecond_echo &lt;- colSums((memory*c(activations)))\nsecond_echo &lt;- second_echo/max(abs(second_echo))\nsecond_echo\n\n\n        C        Db         D        Eb         E         F        Gb         G \n0.9946912 0.5014757 1.0000000 0.6381784 0.7237607 0.9389013 0.5636836 0.9371725 \n       Ab         A        Bb         B \n0.5704482 0.9385442 0.7156892 0.6432196 \n\n\nShow the code\n# subtract a weighted portion of second echo\nmore_specific_echo &lt;- echo-(.8*second_echo)\n\necho_similarities &lt;- RsemanticLibrarian::cosine_x_to_m(more_specific_echo,memory)\ndf &lt;- data.frame(chords = row.names(echo_similarities),\n                 similarities = echo_similarities) %&gt;%\n  arrange(desc(echo_similarities))\ndf[1:20,]\n\n\n                               chords similarities\nDm7                               Dm7    0.8386204\nF6                                 F6    0.8386204\nD minor triad           D minor triad    0.7413557\nF major triad           F major triad    0.7368539\nDm7(11)                       Dm7(11)    0.7272550\nD minor pentatonic D minor pentatonic    0.7272550\nF major pentatonic F major pentatonic    0.7272550\nG9sus                           G9sus    0.7272550\nDm9                               Dm9    0.6825942\nBb∆9                             Bb∆9    0.6724193\nD7#11#9                       D7#11#9    0.6640474\nF (add 9)                   F (add 9)    0.6126096\nDm11                             Dm11    0.6022796\nG13sus                         G13sus    0.6022796\nG7sus                           G7sus    0.5976717\nC13sus                         C13sus    0.5929913\nGm11                             Gm11    0.5929913\nF9 (13)                       F9 (13)    0.5880307\nD7sus                           D7sus    0.5869733\nD Blues                       D Blues    0.5853489\n\n\nLots of breadcrumbs here to follow up on later. Ultimately, I didn’t get close to what I was hoping to accomplish. Making a note here that it would be interesting if this type of analysis could provide insight into chord movement from one to another.\n\nSome code for listening to echoes in terms of complex tones made from sine waves, with sine wave amplitude for each note set by the echo intensity for each note.\nneed to explore this\n\n\nShow the code\nlibrary(tuneR)\n# Function to generate a complex tone\ngenerate_complex_tone &lt;- function(duration, sampling_rate, frequencies, amplitudes) {\n  time_points &lt;- seq(0, duration, 1/sampling_rate)\n  complex_tone &lt;- sapply(seq_along(frequencies), function(i) {\n    amplitudes[i] * sin(2 * pi * frequencies[i] * time_points)\n  })\n  \n  return(rowSums(complex_tone))\n}\n\n# Set parameters\nduration &lt;- 5  # seconds\nsampling_rate &lt;- 44100  # Hz (standard audio sampling rate)\nfrequencies &lt;- c(261.63,\n277.18,\n293.66,\n311.13,\n329.63,\n349.23,\n369.99,\n392,\n415.3,\n440,\n466.16,\n493.88)  # frequencies of sine waves in Hz\n\n# Try minerva\nmemory &lt;- chord_matrix\n\n# probe with a C\n# Each of the 12 spots is a note, starting on C\nprobe &lt;- chord_matrix['C note',]\n\n# compute similarities between probe and all traces\nsimilarities &lt;- RsemanticLibrarian::cosine_x_to_m(probe,memory)\n\n# tuning function: raise similarities to a power \nactivations &lt;- similarities^5\n\necho &lt;- colSums((memory*c(activations)))\necho &lt;- echo/max(abs(echo))\n\namplitudes &lt;- echo   # amplitudes of sine waves\n\n# Generate complex tone\ncomplex_tone &lt;- generate_complex_tone(duration, sampling_rate, frequencies, amplitudes)\ncomplex_tone &lt;- complex_tone/max(abs(complex_tone))\ncomplex_tone &lt;- complex_tone*32767\n\n\nwave &lt;- Wave(left = complex_tone, \n             right = complex_tone,\n             samp.rate = sampling_rate, bit = 16)\nwriteWave(wave,\"test.wav\")"
  }
]