<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Homophony</title>
<link>https://homophony.quest/notes.html</link>
<atom:link href="https://homophony.quest/notes.xml" rel="self" type="application/rss+xml"/>
<description>Music blog for motivation to play more music</description>
<image>
<url>https://homophony.quest/images/notesE_0.jpg</url>
<title>Homophony</title>
<link>https://homophony.quest/notes.html</link>
</image>
<generator>quarto-1.4.549</generator>
<lastBuildDate>Mon, 05 Feb 2024 05:00:00 GMT</lastBuildDate>
<item>
  <title>MIDI analysis, bags of notes, and probabilistic generation</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/37_2_5_24_matrix_analysis/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cartoon musical notes in bags. Scrooge mcduck hoarding bags of musical notes. A huge room with a pile of musical notes. ducktales."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>cartoon musical notes in bags. Scrooge mcduck hoarding bags of musical notes. A huge room with a pile of musical notes. ducktales. - Dreamshaper v7</p>
</div></div><p>Over the past few posts I’ve been exploring probabilistic MIDI generation derived from note probabilities in existing MIDI files, using R.</p>
<p>Aside from having a bit of fun with this, I have a musical interest in finding out whether this approach can be inspiring to my own playing somehow, and in terms of my day job as a cognition researcher, I have an interest in pushing my particular method of choice into this arena as a way to understand the method from a new perspective. This post is mainly notes to self along with some R code.</p>
<section id="bags-of-notes" class="level2">
<h2 class="anchored" data-anchor-id="bags-of-notes">Bags of notes</h2>
<p>I’m representing midi files in one bar increments using a technique borrowed from language processing and semantic cognition research, sometimes called “bags of words” <span class="citation" data-cites="landauer1997">(Landauer and Dumais 1997)</span>. The technique represents chunks of written language as an n-gram frequency vector. For example, take a book and find all of the unique words in the book. Create a matrix with the same number of columns as unique words in the book. Split the book up into “bags”, which is a collection of words of some size. For example, the bag size could be at the sentence level or paragraph level. Let’s say paragraphs. For each paragraph count how many times each word appears in the paragraph. Finally, create a frequency count vector for the paragraph that has zeros for all words not found in the paragraph, and the individual frequency counts for all words in the paragraph. Repeat as necessary for all bags of words. This procedure creates a document x term matrix that represents aspects of how words co-occur with other words in natural language. I’ve been doing something similar with midi files.</p>
<p>As this isn’t an academic paper, I won’t review much more literature, but suffice it to say, several variations on the “bags of words” approach have been used for MIDI representation and analysis, especially to aid MIDI similarity analysis.</p>
<p>My current ’bags of notes” representation is as follows.</p>
<ol type="1">
<li>Split a midi file into bars</li>
<li>Choose a unit for temporal resolution (e.g., quarter notes, eighth notes, down to the smallest possible representation, midi ticks).</li>
<li>Create a note by time matrix. If the midi file has 96 ticks per beat, then the matrix will have 128 rows (for each possible midi note 0-127), and 96 x 4 = 384 columns.</li>
<li>For each note occurrence in a bar, assign a 1 to the “note on” location in the matrix. Otherwise, assign a 0.</li>
</ol>
<p>This allows a midi file to be represented as “bags of notes” in successive note x time frequency matrices. Although I am presently disregarding note length, the resulting matrix contains all of the information necessary to reconstruct the note on messages back into MIDI format.</p>
<p>I have some background modeling aims that involve training theories of learning and memory on patterns from MIDI files, so I’m also choosing representations that would work for those models. In this case, I am most interested in training a MINERVA-II style model on MIDI patterns <span class="citation" data-cites="hintzman1984">(Hintzman 1984)</span>. That model represents patterns in individual memory trace as feature vectors. I’d like to put bars of music as individual patterns into the model, and to do that I concatenate the note x time matrix into a single feature vector.</p>
<p>I’ve decided to proceed by examples instead.</p>
</section>
<section id="mario-example" class="level2">
<h2 class="anchored" data-anchor-id="mario-example">Mario example</h2>
<p>In [this previous post](<a href="https://homophony.quest/blog/35_2_3_24_matrix_midi/" class="uri">https://homophony.quest/blog/35_2_3_24_matrix_midi/</a>) I imported the Super Mario overworld music, represented it in the above matrix format, and then generated probabilistic versions of the music. My plan here is to walk through the example in a little bit more detail, and then consider methods for potentially improving the musicality of generated sequences.</p>
<p>The following code reads in the <code>overworld.mid</code> file, and converts it to a matrix. Let’s take a closer look.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pyramidi)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb3-2">test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all_overworld.mid"</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb3-5">mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all_overworld.mid"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb3-8">dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb3-9">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb3-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##############################################</span></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to matrix</span></span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab track 1</span></span>
<span id="cb3-18">track_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-20">         type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_off"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(time)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24">time_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_time),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb3-25">total_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-26">bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>total_bars,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)</span>
<span id="cb3-27">bar_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,total_bars)</span>
<span id="cb3-28"></span>
<span id="cb3-29">metric_tibble <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_steps =</span> time_steps,</span>
<span id="cb3-30">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bars =</span> bars[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)],</span>
<span id="cb3-31">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bar_steps =</span>bar_steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)])</span>
<span id="cb3-32"></span>
<span id="cb3-33">track_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_markers =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-35">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bars =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-36">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bar_steps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) </span>
<span id="cb3-37"></span>
<span id="cb3-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(track_1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-39">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time_markers[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_time[i])</span>
<span id="cb3-40">}</span>
<span id="cb3-41"></span>
<span id="cb3-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get bar divisions, add them to track_1</span></span>
<span id="cb3-43"></span>
<span id="cb3-44"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(track_1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-45">  get_timestep <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> time_steps[track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time_markers[i]]</span>
<span id="cb3-46">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metric_tibble <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> get_timestep) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-48">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(bars)</span>
<span id="cb3-49">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bar_steps[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metric_tibble <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> get_timestep) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(bar_steps)</span>
<span id="cb3-52">}</span>
<span id="cb3-53"></span>
<span id="cb3-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign intervals to the bars</span></span>
<span id="cb3-55"></span>
<span id="cb3-56">music_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-57">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)),</span>
<span id="cb3-58">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars)</span>
<span id="cb3-59">)</span>
<span id="cb3-60"></span>
<span id="cb3-61"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars)){</span>
<span id="cb3-62">  </span>
<span id="cb3-63">  bar_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-64">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(bars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i)</span>
<span id="cb3-65">  </span>
<span id="cb3-66">  one_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-67">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>midi_defs)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb3-68">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)</span>
<span id="cb3-69">  </span>
<span id="cb3-70">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(j <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(one_bar)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-71">    one_bar[bar_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note[j],bar_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bar_steps[j]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-72">  }</span>
<span id="cb3-73">  </span>
<span id="cb3-74">  </span>
<span id="cb3-75">  pitch_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(one_bar)</span>
<span id="cb3-76">  time_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(one_bar)</span>
<span id="cb3-77">  pitch_by_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(one_bar)</span>
<span id="cb3-78"></span>
<span id="cb3-79">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#concatenate_vector</span></span>
<span id="cb3-80">  music_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pitch_vector,time_vector,pitch_by_time)</span>
<span id="cb3-81">  </span>
<span id="cb3-82">  music_matrix[i,] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> music_vector</span>
<span id="cb3-83">  </span>
<span id="cb3-84">}</span></code></pre></div>
</details>
</div>
<section id="the-first-bar-of-the-midi-file" class="level3">
<h3 class="anchored" data-anchor-id="the-first-bar-of-the-midi-file">The first bar of the midi file</h3>
<p>The table shows a tibble of the first bar. I’ve added a few columns to code which bars the notes are occurring (not represented in a midi file), along with when each note occurs inside the bar. In this case, I’m using 8 ticks as the smallest unit of time inside a bar.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">first_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(bars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-3">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(first_bar)</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<colgroup>
<col style="width: 4%">
<col style="width: 3%">
<col style="width: 4%">
<col style="width: 2%">
<col style="width: 2%">
<col style="width: 5%">
<col style="width: 6%">
<col style="width: 9%">
<col style="width: 15%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 3%">
<col style="width: 2%">
<col style="width: 4%">
<col style="width: 6%">
<col style="width: 7%">
<col style="width: 2%">
<col style="width: 5%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: right;">i_track</th>
<th style="text-align: left;">meta</th>
<th style="text-align: left;">type</th>
<th style="text-align: left;">name</th>
<th style="text-align: right;">time</th>
<th style="text-align: right;">numerator</th>
<th style="text-align: right;">denominator</th>
<th style="text-align: right;">clocks_per_click</th>
<th style="text-align: right;">notated_32nd_notes_per_beat</th>
<th style="text-align: right;">program</th>
<th style="text-align: right;">channel</th>
<th style="text-align: right;">control</th>
<th style="text-align: right;">value</th>
<th style="text-align: right;">note</th>
<th style="text-align: right;">velocity</th>
<th style="text-align: right;">total_time</th>
<th style="text-align: right;">time_markers</th>
<th style="text-align: right;">bars</th>
<th style="text-align: right;">bar_steps</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">50</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">66</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">76</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">8</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">50</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">66</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">76</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">50</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">72</td>
<td style="text-align: right;">10</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">10</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">66</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">72</td>
<td style="text-align: right;">10</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">10</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">76</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">72</td>
<td style="text-align: right;">10</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">10</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">50</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">120</td>
<td style="text-align: right;">16</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">16</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">66</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">120</td>
<td style="text-align: right;">16</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">16</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">72</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">120</td>
<td style="text-align: right;">16</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">16</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">8</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">50</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">144</td>
<td style="text-align: right;">19</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">19</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">66</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">144</td>
<td style="text-align: right;">19</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">19</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">76</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">144</td>
<td style="text-align: right;">19</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">19</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">67</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">192</td>
<td style="text-align: right;">25</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">25</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">71</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">192</td>
<td style="text-align: right;">25</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">25</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">79</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">192</td>
<td style="text-align: right;">25</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">25</td>
</tr>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">80</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">55</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">288</td>
<td style="text-align: right;">37</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">37</td>
</tr>
<tr class="even">
<td style="text-align: right;">0</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: left;">note_on</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">67</td>
<td style="text-align: right;">64</td>
<td style="text-align: right;">288</td>
<td style="text-align: right;">37</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">37</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="bags-of-notes-representation" class="level3">
<h3 class="anchored" data-anchor-id="bags-of-notes-representation">Bags of notes representation</h3>
<p>The big code chunk has a loop that processes all bars into a vector representation. Below, I unpack this and describe each step.</p>
<p>This code chunk takes the notes from a midi tibble that pertain to a single bar (e.g., the table above), creates an empty note by time interval matrix, and then assigns the notes in the bar to their respective intervals.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># take a bar from the tibble</span></span>
<span id="cb5-2">bar_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_bar</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a note by time unit matrix</span></span>
<span id="cb5-5">one_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-6">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>midi_defs)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb5-7">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign 1s to note locations in time</span></span>
<span id="cb5-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(one_bar)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) {</span>
<span id="cb5-11">  one_bar[bar_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note[j], bar_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bar_steps[j]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-12">}</span></code></pre></div>
</details>
</div>
<p>The note x time matrix is 128 rows by 48 columns. There are 0-127 possible notes in MIDI, and I divided one bar (4/4 time) into 48 individual slices of time. The note occurrences in the first bar of mario are coded as 1s in the matrix.</p>
<p>Here is a plot of the matrix showing note locations. It looks like a typical piano roll.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plot.matrix)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(one_bar)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="counting-and-concatenating" class="level3">
<h3 class="anchored" data-anchor-id="counting-and-concatenating">Counting and concatenating</h3>
<p>I create three vectors that will be appended together as the final feature vector for a bar of music.</p>
<p>The first two are frequency summarizers. The pitch vector takes the sum across the rows of the matrix. This yields a single vector with 128 elements corresponding to each note. The values are simply the counts of each note in the bar. The time vector takes the column sums, and provides a count of each temporal unit occurrence in the matrix. These summary representations will be useful later on for conditionalizing sequence generation based on notes and time in general.</p>
<p>The last vector concatenates the matrix into a single vector by starting at the first column, and then appending column after column, until the matrix is one long vector.</p>
<p>Finally, I append the pitch vector, the time vector, and the pitch x time vector into a single vector, called the music vector.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">pitch_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(one_bar)</span>
<span id="cb7-2">time_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(one_bar)</span>
<span id="cb7-3">pitch_by_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(one_bar)</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#concatenate_vector</span></span>
<span id="cb7-6">music_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pitch_vector, time_vector, pitch_by_time)</span></code></pre></div>
</details>
</div>
</section>
<section id="the-music-matrix" class="level3">
<h3 class="anchored" data-anchor-id="the-music-matrix">The music matrix</h3>
<p>The above steps are applied to all of the bars in a midi file, and the resulting music feature vector is added to a matrix. For mario, I get a 37 (bars) by 6320 (features) matrix.</p>
<p>Oooh, and it can be plotted! Hurrah for the <code>plot.matrix</code> library!</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plot.matrix)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(music_matrix, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="1920"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="probabilistic-generation" class="level2">
<h2 class="anchored" data-anchor-id="probabilistic-generation">Probabilistic generation</h2>
<p>The above matrix has a few different properties, but the main one is that it counts how often particular notes occur in particular units of time across all of the bars of music. And, aside from the fact that I threw out the the note off information, this matrix representation is pretty much the same as the original MIDI file, so it is possible to convert back to a MIDI file from this matrix representation.</p>
<p>However, the matrix representation provides interesting opportunities for manipulating MIDI. Today I am focusing on generating sequences from the statistical structure of a musical corpus. I’ll take the above matrix as a small corpus of musical bars.</p>
<section id="note-x-time-probabilities" class="level3">
<h3 class="anchored" data-anchor-id="note-x-time-probabilities">Note x time probabilities</h3>
<p>In previous posts where I generated some “mario-esque” sequences, I only got as far as generating them based on fairly simple, unconditionalized probabilities.</p>
<p>For example, columns 177 to 6320 in the music matrix contain the note x time frequency vectors for each bar. We can compute the total number of occurrences of all individual features by summing that whole part of the matrix. The answer is 901 note x time features occurred across all of mario.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">total_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(music_matrix[,(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(music_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb9-2">total_sum</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 901</code></pre>
</div>
</div>
<p>What about individual note x time features, how often did they occur? We can compute the column sums. This vector has too many numbers to print, but here’s a sense of how it looks (y-axis is frequency counts).</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">note_times_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(music_matrix[,(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(music_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(note_times_sum)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="1920"></p>
</figure>
</div>
</div>
</div>
<p>Dividing the column sums by the total sum gives a vector of proportions that sum to 1.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">note_times_prob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_times_sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>total_sum</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(note_times_prob)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1</code></pre>
</div>
</div>
<p>The vector of proportions can be treated as probabilities and used to generate new notes in time based on this statistical structure. R has a convenient function for this called <code>rbinom()</code>. The goal is to produce a vector with the same length as the probability vector, but populated with 1s and 0s, where the 1 is a note occurrence and a 0 is the absence of a note.</p>
<p>This code chunk generates a new vector of note x time features based on the probabilities, restores the vector to a matrix format, and then plots the matrix of notes as a piano roll.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate new vector based on probabilities</span></span>
<span id="cb14-2">new_sequence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_times_prob),</span>
<span id="cb14-3">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb14-4">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> note_times_prob)</span>
<span id="cb14-5"></span>
<span id="cb14-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ensure any element greater than 1 is set to 1</span></span>
<span id="cb14-7">new_sequence[new_sequence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb14-8"></span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb14-10">new_sequence_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(</span>
<span id="cb14-11">  new_sequence,</span>
<span id="cb14-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,</span>
<span id="cb14-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb14-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> F</span>
<span id="cb14-15">)</span>
<span id="cb14-16"></span>
<span id="cb14-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plot.matrix)</span>
<span id="cb14-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(new_sequence_matrix)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
<p>The new sequence is generated from independent probabilities. Essentially every note is sampled based on the probability that it appeared in a particular time slot across the whole corpus of bars. This creates a sonic mishmash where very global statistics of how notes appear in time across bars determine which notes get sampled and when they are placed in time.</p>
<p>The size parameter of the <code>rbinom()</code> function controls how many trials are simulated by the binomial sampling process, which controls the total number of notes sampled into a new bar.</p>
<p>One option is to set the size parameter to the mean number of notes that are found per bar in the corpus. I get about 24.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(music_matrix[,(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(music_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 24.35135</code></pre>
</div>
</div>
<p>And, using 24 as the size parameter generates new bars that should have some more notes:</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate new vector based on probabilities</span></span>
<span id="cb17-2">new_sequence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_times_prob),</span>
<span id="cb17-3">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>,</span>
<span id="cb17-4">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> note_times_prob)</span>
<span id="cb17-5"></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ensure any element greater than 1 is set to 1</span></span>
<span id="cb17-7">new_sequence[new_sequence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-8"></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb17-10">new_sequence_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(</span>
<span id="cb17-11">  new_sequence,</span>
<span id="cb17-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,</span>
<span id="cb17-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb17-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> F</span>
<span id="cb17-15">)</span>
<span id="cb17-16"></span>
<span id="cb17-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plot.matrix)</span>
<span id="cb17-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(new_sequence_matrix)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
<p>Or, this one has a size of 48, and starts looking even more busy:</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate new vector based on probabilities</span></span>
<span id="cb18-2">new_sequence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_times_prob),</span>
<span id="cb18-3">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,</span>
<span id="cb18-4">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> note_times_prob)</span>
<span id="cb18-5"></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ensure any element greater than 1 is set to 1</span></span>
<span id="cb18-7">new_sequence[new_sequence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb18-8"></span>
<span id="cb18-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb18-10">new_sequence_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(</span>
<span id="cb18-11">  new_sequence,</span>
<span id="cb18-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,</span>
<span id="cb18-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb18-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> F</span>
<span id="cb18-15">)</span>
<span id="cb18-16"></span>
<span id="cb18-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plot.matrix)</span>
<span id="cb18-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(new_sequence_matrix)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="a-eurorack-digression" class="level3">
<h3 class="anchored" data-anchor-id="a-eurorack-digression">A eurorack digression</h3>
<p>As a quick side note, in terms of sonic exploration, it would be so fun to get matrix manipulation of midi for probabilistic sequence generation into a eurorack format.</p>
<p>One of my favorite modules to play with is Marbles by Mutable Instruments.</p>
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/images/mutableinstruments_marbles_01_1_1.jpg" class="img-fluid"></p>
<p>This module is a random CV generator for time and pitch, and it can do some things in the direction I’m headed. For example, you can play in a series of notes, and it will calculate pitch frequencies, and then playback notes based on the sampled frequencies. That’s pretty cool.</p>
<p>The documentation for Marbles even hints at a secret “markov” mode which is more similar to what I’m doing here:</p>
<p><a href="https://pichenettes.github.io/mutable-instruments-documentation/modules/marbles/secrets/" class="uri">https://pichenettes.github.io/mutable-instruments-documentation/modules/marbles/secrets/</a></p>
<p>Once I figure out what I’m doing in R, I wonder how easy it would be to get these algorithms working in a eurorack module…hmmm.</p>
</section>
</section>
<section id="alternative-note-and-time-feature-generation" class="level2">
<h2 class="anchored" data-anchor-id="alternative-note-and-time-feature-generation">Alternative note and time feature generation</h2>
<p>The matrix of bars also has pitch vectors and time vectors that summarize counts within their respective dimensions. These vectors can be turned into probabilistic generators as well.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">pitch_probabilities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(music_matrix[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(music_matrix[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>])</span>
<span id="cb19-2"></span>
<span id="cb19-3">time_probabilities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(music_matrix[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">129</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(music_matrix[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">129</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)])</span>
<span id="cb19-4"></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get new pitches</span></span>
<span id="cb19-6">new_pitches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pitch_probabilities),</span>
<span id="cb19-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>,</span>
<span id="cb19-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> pitch_probabilities)</span>
<span id="cb19-9">new_pitches[new_pitches <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb19-10"></span>
<span id="cb19-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get new times</span></span>
<span id="cb19-12">new_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_probabilities),</span>
<span id="cb19-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>,</span>
<span id="cb19-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> time_probabilities)</span>
<span id="cb19-15">new_times[new_times <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb19-16"></span>
<span id="cb19-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get row column ids</span></span>
<span id="cb19-18">sampled_notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(new_pitches <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb19-19">sampled_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(new_times <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb19-20"></span>
<span id="cb19-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># combine, make sure equal length</span></span>
<span id="cb19-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sampled_notes) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sampled_times)){</span>
<span id="cb19-23">  sampled_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">notes =</span> sampled_notes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sampled_times)],</span>
<span id="cb19-24">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> sampled_times)</span>
<span id="cb19-25">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb19-26">  sampled_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">notes =</span> sampled_notes,</span>
<span id="cb19-27">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> sampled_times[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sampled_notes)])</span>
<span id="cb19-28">}</span>
<span id="cb19-29"></span>
<span id="cb19-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># shuffle the notes across the times so the sampling is uniform</span></span>
<span id="cb19-31">sampled_ids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(sampled_ids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>notes)</span>
<span id="cb19-32"></span>
<span id="cb19-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a note by time unit matrix</span></span>
<span id="cb19-34">one_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb19-35">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>midi_defs)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb19-36">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)</span>
<span id="cb19-37"></span>
<span id="cb19-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign 1s to note locations in time</span></span>
<span id="cb19-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(sampled_ids)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) {</span>
<span id="cb19-40">  one_bar[sampled_ids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>notes[i], sampled_ids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>times[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb19-41">}</span>
<span id="cb19-42"></span>
<span id="cb19-43"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plot.matrix)</span>
<span id="cb19-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(one_bar)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
<p>This should produce sequences that reflect even more general statistical structure from the corpus. I haven’t tried listening to lots of bars generated this way. Something to look forward to :)</p>
</section>
<section id="conditionalized-sampling" class="level2">
<h2 class="anchored" data-anchor-id="conditionalized-sampling">Conditionalized sampling</h2>
<p>So far I’ve looked at fairly global note and time probabilities. It’s possible to conditionalize these probabilities by other events. For example, given that the first note in a bar is in the first time step, and that the first note is MIDI note 50, what are the probabilities of other notes in time?</p>
<p>One way to do this is to first filter the music matrix for only rows containing features to conditionalize on (e.g., only rows where the first note is MIDI note 50 in the first time slot.), and then compute the probabilities based on the filter matrix. In the case of mario, we only have 30+ bars of music, which doesn’t give a great estimate of the probabilities.</p>
<p>At the same time, I could change the size of matrix and ask different questions. Currently, the matrix is set up to ask questions about a whole bar of notes. For example, I could ask the question, given the first note is MIDI 50, what are the probabilities for all of the remaining notes in the whole bar.</p>
<p>The matrix could be re-arranged in larger or smaller collections of time. Let’s try re-arranging the matrix in slices of 1 beat instead of 1 bar. This will produce many more “bags” of notes than we currently have, and should do a better job of capturing local statistics for note-to-note transitions.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this can be improved, but works for now</span></span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(music_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) {</span>
<span id="cb20-4">  extract_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> music_matrix[i, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(music_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb20-5">  </span>
<span id="cb20-6">  bar_to_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(extract_bar,</span>
<span id="cb20-7">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,</span>
<span id="cb20-8">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb20-9">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> F)</span>
<span id="cb20-10">  </span>
<span id="cb20-11">  divisions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb20-12">  </span>
<span id="cb20-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(divisions)) {</span>
<span id="cb20-14">    beat_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bar_to_matrix[, divisions[j]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(divisions[j] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb20-15">    beat_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(beat_vector)</span>
<span id="cb20-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> j <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb20-17">      beat_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(beat_vector))</span>
<span id="cb20-18">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb20-19">      beat_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(beat_matrix, beat_vector)</span>
<span id="cb20-20">    }</span>
<span id="cb20-21">  }</span>
<span id="cb20-22">  </span>
<span id="cb20-23">}</span></code></pre></div>
</details>
</div>
<p>A plot of the new beats matrix, with 4 times as many rows as before.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plot.matrix)</span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(beat_matrix, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
<p>I’d like to contrast probabilistic playback from this matrix in general versus condtionalized on some starting notes.</p>
<section id="general-probabilistic-sampling-from-beat-matrix" class="level3">
<h3 class="anchored" data-anchor-id="general-probabilistic-sampling-from-beat-matrix">General probabilistic sampling from beat matrix</h3>
<p>I’m going to repeat some steps from before. This is where I wish I had some functions to do this quickly. However, this lengthy note-book style approach is also helping me understand what I might functionalize later.</p>
<p>This code chunk should generate a new “beats” worth of notes every time it is run.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">total_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(beat_matrix[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(beat_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb22-2">note_times_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(beat_matrix[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(beat_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb22-3">note_times_prob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_times_sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>total_sum</span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mean(rowSums(beat_matrix[,1:dim(beat_matrix)[2]]))</span></span>
<span id="cb22-6"></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate new vector based on probabilities</span></span>
<span id="cb22-8">new_sequence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_times_prob),</span>
<span id="cb22-9">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb22-10">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> note_times_prob)</span>
<span id="cb22-11"></span>
<span id="cb22-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ensure any element greater than 1 is set to 1</span></span>
<span id="cb22-13">new_sequence[new_sequence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-14"></span>
<span id="cb22-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb22-16">new_sequence_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(</span>
<span id="cb22-17">  new_sequence,</span>
<span id="cb22-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,</span>
<span id="cb22-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb22-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> F</span>
<span id="cb22-21">)</span>
<span id="cb22-22"></span>
<span id="cb22-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(new_sequence_matrix)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="conditionalized-sampling-1" class="level2">
<h2 class="anchored" data-anchor-id="conditionalized-sampling-1">Conditionalized sampling</h2>
<p>This example conditions on some starting notes.</p>
<p>The first three notes in mario overworld are a chord composed of MIDI notes 50, 66, and 70.</p>
<p>The following code grabs only the rows in the beat matrix that have these exact notes in the first time unit. The, new note x time probabilities are calculated from the reduced matrix, and then used to generate a new “beats” worth of notes. This type of sequence should be much more similar to the rows from which it was composed, compared to all rows in general.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create conditional vector</span></span>
<span id="cb23-2">conditional_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(beat_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb23-3">conditional_vector[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">66</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> </span>
<span id="cb23-4"></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute cosine to find same items</span></span>
<span id="cb23-6">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(conditional_vector,beat_matrix)</span>
<span id="cb23-7"></span>
<span id="cb23-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># choose only rows that have the conditional vector in them</span></span>
<span id="cb23-9">conditionalized_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beat_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(similarities <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),]</span>
<span id="cb23-10"></span>
<span id="cb23-11">total_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(conditionalized_matrix[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(conditionalized_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb23-12">note_times_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(conditionalized_matrix[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(conditionalized_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb23-13">note_times_prob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_times_sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>total_sum</span>
<span id="cb23-14"></span>
<span id="cb23-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mean(rowSums(beat_matrix[,1:dim(beat_matrix)[2]]))</span></span>
<span id="cb23-16"></span>
<span id="cb23-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate new vector based on probabilities</span></span>
<span id="cb23-18">new_sequence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_times_prob),</span>
<span id="cb23-19">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb23-20">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> note_times_prob)</span>
<span id="cb23-21"></span>
<span id="cb23-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ensure any element greater than 1 is set to 1</span></span>
<span id="cb23-23">new_sequence[new_sequence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb23-24"></span>
<span id="cb23-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb23-26">new_sequence_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(</span>
<span id="cb23-27">  new_sequence,</span>
<span id="cb23-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,</span>
<span id="cb23-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb23-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> F</span>
<span id="cb23-31">)</span>
<span id="cb23-32"></span>
<span id="cb23-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(new_sequence_matrix)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/37_2_5_24_matrix_analysis/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="the-end" class="level2">
<h2 class="anchored" data-anchor-id="the-end">The end</h2>
<p>I’d like to start listening to these sequences. But, right now the code is pretty clunky to start generating lots of things to listen to. It’s probably time to refactor the code into functions so it’s all more generalizable, clear, and easier to use.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-hintzman1984" class="csl-entry">
Hintzman, Douglas L. 1984. <span>“MINERVA 2: A Simulation Model of Human Memory.”</span> <em>Behavior Research Methods, Instruments, &amp; Computers</em> 16 (2): 96101. <a href="https://doi.org/10.3758/BF03202365">https://doi.org/10.3758/BF03202365</a>.
</div>
<div id="ref-landauer1997" class="csl-entry">
Landauer, Thomas K, and Susan T Dumais. 1997. <span>“A Solution to Plato’s Problem: The Latent Semantic Analysis Theory of Acquisition, Induction, and Representation of Knowledge.”</span> <em>Psychological Review</em> 104: 211–40. <a href="https://doi.org/dcpw35">https://doi.org/dcpw35</a>.
</div>
</div></section></div> ]]></description>
  <category>midi</category>
  <category>nlp</category>
  <category>matrix</category>
  <category>rstats</category>
  <guid>https://homophony.quest/blog/37_2_5_24_matrix_analysis/</guid>
  <pubDate>Mon, 05 Feb 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/37_2_5_24_matrix_analysis/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Messing around with heart and soul</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/36_2_4_24_heart_soul/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"heart and soul piano duet. probabilities. linear algebra. markov chain. thundercats cartoon."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/36_2_4_24_heart_soul/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>heart and soul piano duet. probabilities. linear algebra. markov chain. thundercats cartoon. - Dreamshaper v7</p>
</div></div><p>I’m following similar steps <a href="https://homophony.quest/blog/35_2_3_24_matrix_midi/">from this post</a>, but with my own noodling around playing heart and soul on piano.</p>
<p>Notes:</p>
<ol type="1">
<li>Riff on Heart and Soul on midi piano, BPM 103</li>
<li>Load in midi</li>
</ol>
<ul>
<li>check if i need to quantize it.</li>
</ul>
<ol start="3" type="1">
<li>Turn it into a matrix</li>
<li>Generate notes probabilistically</li>
<li>listen to it</li>
</ol>
<section id="try-stuff" class="level2">
<h2 class="anchored" data-anchor-id="try-stuff">Try stuff</h2>
<ul>
<li>ticks per beat is 96</li>
<li>going with temporal units down to smallest tick (1).</li>
<li>got it working, ya</li>
<li>generate 1 minute of heart and soul nonsense with nintendo synth sound for fun</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pyramidi)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb3-2">test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"heart_soul_103_185b.mid"</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb3-5">mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"heart_soul_103_185b.mid"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb3-8">dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb3-9">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb3-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##############################################</span></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to matrix</span></span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab track 1</span></span>
<span id="cb3-18">track_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-20">         type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_off"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(time)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24">time_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_time),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-25">total_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-26">bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>total_bars,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb3-27">bar_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),total_bars)</span>
<span id="cb3-28"></span>
<span id="cb3-29">metric_tibble <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_steps =</span> time_steps,</span>
<span id="cb3-30">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bars =</span> bars[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)],</span>
<span id="cb3-31">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bar_steps =</span>bar_steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)])</span>
<span id="cb3-32"></span>
<span id="cb3-33">track_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_markers =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-35">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bars =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-36">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bar_steps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) </span>
<span id="cb3-37"></span>
<span id="cb3-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(track_1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-39">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time_markers[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_time[i])</span>
<span id="cb3-40">}</span>
<span id="cb3-41"></span>
<span id="cb3-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get bar divisions, add them to track_1</span></span>
<span id="cb3-43"></span>
<span id="cb3-44"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(track_1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-45">  get_timestep <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> time_steps[track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time_markers[i]]</span>
<span id="cb3-46">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metric_tibble <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> get_timestep) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-48">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(bars)</span>
<span id="cb3-49">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bar_steps[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metric_tibble <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> get_timestep) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(bar_steps)</span>
<span id="cb3-52">}</span>
<span id="cb3-53"></span>
<span id="cb3-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign intervals to the bars</span></span>
<span id="cb3-55"></span>
<span id="cb3-56">music_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-57">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)),</span>
<span id="cb3-58">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars)</span>
<span id="cb3-59">)</span>
<span id="cb3-60"></span>
<span id="cb3-61"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars)){</span>
<span id="cb3-62">  </span>
<span id="cb3-63">  bar_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-64">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(bars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i)</span>
<span id="cb3-65">  </span>
<span id="cb3-66">  one_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-67">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>midi_defs)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb3-68">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb3-69">  </span>
<span id="cb3-70">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(j <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(one_bar)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-71">    one_bar[bar_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note[j],bar_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bar_steps[j]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-72">  }</span>
<span id="cb3-73">  </span>
<span id="cb3-74">  </span>
<span id="cb3-75">  pitch_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(one_bar)</span>
<span id="cb3-76">  time_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(one_bar)</span>
<span id="cb3-77">  pitch_by_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(one_bar)</span>
<span id="cb3-78"></span>
<span id="cb3-79">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#concatenate_vector</span></span>
<span id="cb3-80">  music_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pitch_vector,time_vector,pitch_by_time)</span>
<span id="cb3-81">  </span>
<span id="cb3-82">  music_matrix[i,] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> music_vector</span>
<span id="cb3-83">  </span>
<span id="cb3-84">}</span>
<span id="cb3-85"></span>
<span id="cb3-86"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########################################</span></span>
<span id="cb3-87"></span>
<span id="cb3-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compose midi tibble</span></span>
<span id="cb3-89">all_midi_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]</span>
<span id="cb3-90">all_midi_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> all_midi_bars[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]</span>
<span id="cb3-91"></span>
<span id="cb3-92"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>){</span>
<span id="cb3-93"></span>
<span id="cb3-94">sum_music <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(music_matrix)</span>
<span id="cb3-95">sum_music <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sum_music[((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sum_music)]</span>
<span id="cb3-96">prob_music <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sum_music<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(sum_music)</span>
<span id="cb3-97"></span>
<span id="cb3-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># figure out average number of notes</span></span>
<span id="cb3-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mean(rowSums(music_matrix[,((96*4)+128+1):dim(music_matrix)[2]]))</span></span>
<span id="cb3-100"></span>
<span id="cb3-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># note size parameter controls note density in the bar</span></span>
<span id="cb3-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 16 is about the average from the song</span></span>
<span id="cb3-103">prob_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sum_music),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,prob_music)</span>
<span id="cb3-104">prob_bar[prob_bar <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#sum(prob_bar)</span></span>
<span id="cb3-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#plot(prob_bar)</span></span>
<span id="cb3-107"></span>
<span id="cb3-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#reconstitute matrix</span></span>
<span id="cb3-109">one_bar_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(prob_bar,</span>
<span id="cb3-110">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb3-111">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb3-112">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow=</span>F)</span>
<span id="cb3-113"></span>
<span id="cb3-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#filter for notes and times</span></span>
<span id="cb3-115">note_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(one_bar_matrix <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arr.ind=</span>T)</span>
<span id="cb3-116"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(note_times) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_num"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar_step"</span>)</span>
<span id="cb3-117"></span>
<span id="cb3-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert back to midi time in ticks</span></span>
<span id="cb3-119">note_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(note_times)</span>
<span id="cb3-120">note_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_times <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-121">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks =</span> (bar_step <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-122">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb3-123">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_on =</span> ticks,</span>
<span id="cb3-124">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_off =</span> ticks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-125">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_off"</span>), </span>
<span id="cb3-126">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>,</span>
<span id="cb3-127">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cumulative_ticks"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-128">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(cumulative_ticks) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-129">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> cumulative_ticks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(cumulative_ticks, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">default =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb3-130"></span>
<span id="cb3-131">midi_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]</span>
<span id="cb3-132">midi_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> midi_bar[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]</span>
<span id="cb3-133"></span>
<span id="cb3-134">midi_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> midi_bar <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-135">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> note_times<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,</span>
<span id="cb3-136">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> note_times<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb3-137">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note =</span> note_times<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_num) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-138">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-139">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-140">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-141">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">numerator =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-142">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denominator =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-143">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clocks_per_click =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-144">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">notated_32nd_notes_per_beat =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-145">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-146">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb3-147">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-148">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-149">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">channel =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-150">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">velocity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb3-151">         )</span>
<span id="cb3-152"></span>
<span id="cb3-153">all_midi_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(all_midi_bars,midi_bar)</span>
<span id="cb3-154"></span>
<span id="cb3-155">}</span>
<span id="cb3-156"></span>
<span id="cb3-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get meta messages</span></span>
<span id="cb3-158">meta_midi  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-159">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb3-160">         i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-161">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-162">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(</span>
<span id="cb3-163">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-164">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-165">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb3-166">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"set_tempo"</span>,</span>
<span id="cb3-167">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500000</span>,</span>
<span id="cb3-168">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.before =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-169">  )</span>
<span id="cb3-170"></span>
<span id="cb3-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge bar midi into full midi file</span></span>
<span id="cb3-172">midi_track <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_midi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-173">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(all_midi_bars,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.after =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-174"></span>
<span id="cb3-175"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##########################</span></span>
<span id="cb3-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce</span></span>
<span id="cb3-177"></span>
<span id="cb3-178">mod_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> midi_track</span>
<span id="cb3-179"></span>
<span id="cb3-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb3-181">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(mod_df)</span>
<span id="cb3-182"></span>
<span id="cb3-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb3-184"></span>
<span id="cb3-185">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"heart_soul_A.mid"</span>)</span>
<span id="cb3-186"></span>
<span id="cb3-187"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb3-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb3-189"></span>
<span id="cb3-190">track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"heart_soul_A"</span></span>
<span id="cb3-191"></span>
<span id="cb3-192">wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb3-193">midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb3-194">mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb3-195"></span>
<span id="cb3-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb3-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#miditapyr$write_midi(dfc, ticks_per_beat, midi_name)</span></span>
<span id="cb3-198"></span>
<span id="cb3-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb3-200">system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/nintendo_soundfont.sf2 {midi_name}'</span>)</span>
<span id="cb3-201"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb3-202"></span>
<span id="cb3-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb3-204">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span>
<span id="cb3-205"></span>
<span id="cb3-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb3-207"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb3-208">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb3-209">}</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="heart_soul_A.mp3" type="audio/wav"> </audio></p>
<p>rendered using a nintendo soundfont to increase the ridiculousness of this. It is approaching “modem-connecting-to-the-internet-sounds”, but too melodic.</p>
</section>
<section id="thoughts" class="level2">
<h2 class="anchored" data-anchor-id="thoughts">thoughts</h2>
<p>The main goal for today was to find out how generalizable my previous code would be to a midi file that I recorded myself playing piano.</p>
<p>I learned that ableton produced midi files with no tempo, so I need to set that myself. Ableton’s midi files have 96 ticks per beat, at least mine do, I wonder if I can change that.</p>
<p>I played the piano duet heart and soul to a metronome set at 103 BPM. I was pretty messy with the timing, but played stuff all over the keyboard for about 184 bars.</p>
<p>I did not quantize the midi file. The 96 ticks per bar resolution is not great at all, especially in terms of capturing live music performance, so a lot of the rhythm is really messed up (also sloppy playing, whatever). Nevertheless, I ended up with a matrix of 128 notes by (96x4) ticks, for each bar of music.</p>
<p>This is all very cool in terms of getting some of my own playing into a matrix form.</p>
<p>The mp3 above is generated randomly from the note x tick probabilities that I calculated from my overall corpus of bars of notes that I played. It sounds like clown music, ha. At the present time, what is happening is that every note is treated completely independently from each other in terms of probabilistic sampling. It’s very busy, and not particularly musical, still mildly interesting. I wonder what this would sound like with way more notes, until it approaches something like white noise. hmmm.</p>
<p>There are a whole bunch more things to try to wrestle these probabilities into something more interesting. But, that’s for another day.</p>


</section>

 ]]></description>
  <category>midi</category>
  <category>generative</category>
  <category>matrix</category>
  <category>rstats</category>
  <guid>https://homophony.quest/blog/36_2_4_24_heart_soul/</guid>
  <pubDate>Sun, 04 Feb 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/36_2_4_24_heart_soul/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Midi to matrix representation and probabilistic super mario music with R</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/35_2_3_24_matrix_midi/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"super mario enters the matrix. mario matrix. feature vector encoding. binary representation. pixel art."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/35_2_3_24_matrix_midi/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>super mario enters the matrix. mario matrix. feature vector encoding. binary representation. pixel art. - Dreamshaper v7</p>
</div></div><p>For various reasons I’d like to convert midi into a matrix format and back again. In this example, I represent each bar in the midi file in a note x time step matrix. The matrix for each bar is concatenated into a long vector, and the whole song is represented as a bar x feature vector matrix. I then calculate the column sums, and divide by the total to get probabilities for each note x time cell. These probabilities can be used to generate new bars, by randomly creating notes in time as a function of those probabilities. After making new bars, I work backwards to generate midi files from the matrix representations to listen to everything.</p>
<p>I used the mario overworld midi file, and this yields some probabilistic version of the overworld theme.</p>
<p>Here’s a picture of roughly what’s happening:</p>
<p><img src="https://homophony.quest/blog/35_2_3_24_matrix_midi/images/figure.png" class="img-fluid"></p>
<section id="all-voices" class="level2">
<h2 class="anchored" data-anchor-id="all-voices">all voices</h2>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pyramidi)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb3-2">test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all_overworld.mid"</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb3-5">mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all_overworld.mid"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb3-8">dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb3-9">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb3-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##############################################</span></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to matrix</span></span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab track 1</span></span>
<span id="cb3-18">track_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-20">         type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_off"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(time)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24">time_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_time),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb3-25">total_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-26">bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>total_bars,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)</span>
<span id="cb3-27">bar_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,total_bars)</span>
<span id="cb3-28"></span>
<span id="cb3-29">metric_tibble <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_steps =</span> time_steps,</span>
<span id="cb3-30">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bars =</span> bars[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)],</span>
<span id="cb3-31">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bar_steps =</span>bar_steps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time_steps)])</span>
<span id="cb3-32"></span>
<span id="cb3-33">track_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_markers =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-35">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bars =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-36">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bar_steps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) </span>
<span id="cb3-37"></span>
<span id="cb3-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(track_1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-39">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time_markers[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>total_time[i])</span>
<span id="cb3-40">}</span>
<span id="cb3-41"></span>
<span id="cb3-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get bar divisions, add them to track_1</span></span>
<span id="cb3-43"></span>
<span id="cb3-44"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(track_1)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-45">  get_timestep <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> time_steps[track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time_markers[i]]</span>
<span id="cb3-46">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metric_tibble <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> get_timestep) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-48">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(bars)</span>
<span id="cb3-49">  track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bar_steps[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metric_tibble <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> get_timestep) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(bar_steps)</span>
<span id="cb3-52">}</span>
<span id="cb3-53"></span>
<span id="cb3-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign intervals to the bars</span></span>
<span id="cb3-55"></span>
<span id="cb3-56">music_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-57">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>)),</span>
<span id="cb3-58">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars)</span>
<span id="cb3-59">)</span>
<span id="cb3-60"></span>
<span id="cb3-61"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bars)){</span>
<span id="cb3-62">  </span>
<span id="cb3-63">  bar_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-64">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(bars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i)</span>
<span id="cb3-65">  </span>
<span id="cb3-66">  one_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-67">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>midi_defs)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb3-68">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)</span>
<span id="cb3-69">  </span>
<span id="cb3-70">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(j <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(one_bar)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb3-71">    one_bar[bar_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note[j],bar_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bar_steps[j]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-72">  }</span>
<span id="cb3-73">  </span>
<span id="cb3-74">  </span>
<span id="cb3-75">  pitch_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(one_bar)</span>
<span id="cb3-76">  time_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(one_bar)</span>
<span id="cb3-77">  pitch_by_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(one_bar)</span>
<span id="cb3-78"></span>
<span id="cb3-79">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#concatenate_vector</span></span>
<span id="cb3-80">  music_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pitch_vector,time_vector,pitch_by_time)</span>
<span id="cb3-81">  </span>
<span id="cb3-82">  music_matrix[i,] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> music_vector</span>
<span id="cb3-83">  </span>
<span id="cb3-84">}</span>
<span id="cb3-85"></span>
<span id="cb3-86"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########################################</span></span>
<span id="cb3-87"></span>
<span id="cb3-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compose midi tibble</span></span>
<span id="cb3-89">all_midi_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]</span>
<span id="cb3-90">all_midi_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> all_midi_bars[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]</span>
<span id="cb3-91"></span>
<span id="cb3-92"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>){</span>
<span id="cb3-93"></span>
<span id="cb3-94">sum_music <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(music_matrix)</span>
<span id="cb3-95">sum_music <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sum_music[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sum_music)]</span>
<span id="cb3-96">prob_music <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sum_music<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(sum_music)</span>
<span id="cb3-97"></span>
<span id="cb3-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># figure out average number of notes</span></span>
<span id="cb3-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mean(rowSums(music_matrix[,(48+128+1):dim(music_matrix)[2]]))</span></span>
<span id="cb3-100"></span>
<span id="cb3-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># note size parameter controls note density in the bar</span></span>
<span id="cb3-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 24 is about the average from the song</span></span>
<span id="cb3-103">prob_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sum_music),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,prob_music)</span>
<span id="cb3-104">prob_bar[prob_bar <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#sum(prob_bar)</span></span>
<span id="cb3-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#plot(prob_bar)</span></span>
<span id="cb3-107"></span>
<span id="cb3-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#reconstitute matrix</span></span>
<span id="cb3-109">one_bar_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(prob_bar,</span>
<span id="cb3-110">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb3-111">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>,</span>
<span id="cb3-112">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow=</span>F)</span>
<span id="cb3-113"></span>
<span id="cb3-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#filter for notes and times</span></span>
<span id="cb3-115">note_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(one_bar_matrix <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arr.ind=</span>T)</span>
<span id="cb3-116"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(note_times) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_num"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar_step"</span>)</span>
<span id="cb3-117"></span>
<span id="cb3-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert back to midi time in ticks</span></span>
<span id="cb3-119">note_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(note_times)</span>
<span id="cb3-120">note_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_times <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-121">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks =</span> (bar_step <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb3-122">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb3-123">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_on =</span> ticks,</span>
<span id="cb3-124">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_off =</span> ticks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-125">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_off"</span>), </span>
<span id="cb3-126">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>,</span>
<span id="cb3-127">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cumulative_ticks"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-128">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(cumulative_ticks) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-129">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> cumulative_ticks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(cumulative_ticks, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">default =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb3-130"></span>
<span id="cb3-131">midi_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]</span>
<span id="cb3-132">midi_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> midi_bar[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]</span>
<span id="cb3-133"></span>
<span id="cb3-134">midi_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> midi_bar <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-135">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> note_times<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,</span>
<span id="cb3-136">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> note_times<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb3-137">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note =</span> note_times<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_num) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-138">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-139">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-140">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-141">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">numerator =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-142">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denominator =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-143">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clocks_per_click =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-144">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">notated_32nd_notes_per_beat =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-145">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-146">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb3-147">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-148">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-149">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">channel =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-150">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">program =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,</span>
<span id="cb3-151">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">velocity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb3-152">         )</span>
<span id="cb3-153"></span>
<span id="cb3-154">all_midi_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(all_midi_bars,midi_bar)</span>
<span id="cb3-155"></span>
<span id="cb3-156">}</span>
<span id="cb3-157"></span>
<span id="cb3-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get meta messages</span></span>
<span id="cb3-159">meta_midi  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-160">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb3-161">         i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-162">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-163">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(</span>
<span id="cb3-164">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-165">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-166">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb3-167">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"set_tempo"</span>,</span>
<span id="cb3-168">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500000</span>,</span>
<span id="cb3-169">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.before =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-170">  )</span>
<span id="cb3-171"></span>
<span id="cb3-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge bar midi into full midi file</span></span>
<span id="cb3-173">midi_track <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_midi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-174">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(all_midi_bars,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.after =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-175"></span>
<span id="cb3-176"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##########################</span></span>
<span id="cb3-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce</span></span>
<span id="cb3-178"></span>
<span id="cb3-179">mod_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> midi_track</span>
<span id="cb3-180"></span>
<span id="cb3-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb3-182">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(mod_df)</span>
<span id="cb3-183"></span>
<span id="cb3-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb3-185"></span>
<span id="cb3-186">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario_P48_allbar.mid"</span>)</span>
<span id="cb3-187"></span>
<span id="cb3-188"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb3-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb3-190"></span>
<span id="cb3-191">track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario_P48_allbar"</span></span>
<span id="cb3-192"></span>
<span id="cb3-193">wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb3-194">midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb3-195">mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb3-196"></span>
<span id="cb3-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb3-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#miditapyr$write_midi(dfc, ticks_per_beat, midi_name)</span></span>
<span id="cb3-199"></span>
<span id="cb3-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb3-201">system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/nintendo_soundfont.sf2 {midi_name}'</span>)</span>
<span id="cb3-202"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb3-203"></span>
<span id="cb3-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb3-205">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span>
<span id="cb3-206"></span>
<span id="cb3-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb3-208"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb3-209">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb3-210">}</span></code></pre></div>
</details>
</div>
<p>I used the <code>rbinom()</code> function to randomly generate notes based on estimates of note x time feature probabilities. It’s possible to control the amount of notes generated using the <code>size</code> parameter. The following examples have three levels of note density, from sparse to thick.</p>
<p>About 12 notes/bar: <audio controls=""> <source src="mario_P12_allbar.mp3" type="audio/wav"> </audio></p>
<p>About 24 notes/bar: <audio controls=""> <source src="mario_P24_allbar.mp3" type="audio/wav"> </audio></p>
<p>About 48 notes/bar: <audio controls=""> <source src="mario_P48_allbar.mp3" type="audio/wav"> </audio></p>
</section>
<section id="to-do" class="level2">
<h2 class="anchored" data-anchor-id="to-do">to do</h2>
<p>lots of stuff to clean up here. currently bespoke.</p>
<hr>
<!--

## Adding more midi files

The above worked for one midi file. Working on some code to process multiple midi files into a larger matrix. It would be nice to end up with some functions, we'll see what happens.


::: {.cell}

```{.r .cell-code}
# get list of midi file names
f_names <- list.files("midi", full.names =  T)

#####################################
# IMPORT
#####################################

#import midi using miditapyr
test_midi <- pyramidi::miditapyr$MidiFrames(f_names[1])

#import using mido
mido_import <- pyramidi::mido$MidiFile(f_names[1])

# to R dataframe
dfc <- pyramidi::miditapyr$frame_midi(mido_import)
ticks_per_beat <- mido_import$ticks_per_beat

# unnest the dataframe
df <- pyramidi::miditapyr$unnest_midi(dfc)
```
:::


1. Load in a midi file
2. Which tracks should be converted?
  - some tracks are only used for meta messages
  - some are used for drums etc.
3. Quick function to choose tracks that have more than 50 rows, and are not drums (channel 9 in the midi file)


::: {.cell}

```{.r .cell-code}
choose_tracks <- function(df) {
  
  df %>%
    filter(channel != 9) %>%
    group_by(i_track) %>%
    count()
  
}

tracks_to_convert <- choose_tracks(df)
```
:::

::: {.cell}

```{.r .cell-code}
####################################
# CONVERT TO MATRIX
####################################

# grab track 1
track_1 <- df %>%
  filter(i_track == tracks_to_convert$i_track[1],
         type %in% c("note_on","note_off") ==TRUE) %>%
  mutate(total_time = cumsum(time)) %>%
  filter(type == "note_on")

time_steps <- seq(0,max(track_1$total_time),8)
total_bars <- round(length(time_steps)/48)+1
bars <- rep(1:total_bars,each=48)
bar_steps <- rep(1:48,total_bars)

metric_tibble <- tibble(time_steps = time_steps,
                        bars = bars[1:length(time_steps)],
                        bar_steps =bar_steps[1:length(time_steps)])

track_1 <- track_1 %>%
  mutate(time_markers = 0,
         bars = 0,
         bar_steps = 0) 

for(i in 1:dim(track_1)[1]){
  track_1$time_markers[i] <- which(time_steps %in% track_1$total_time[i])
}

# get bar divisions, add them to track_1

for(i in 1:dim(track_1)[1]){
  get_timestep <- time_steps[track_1$time_markers[i]]
  track_1$bars[i] <- metric_tibble %>%
    filter(time_steps == get_timestep) %>%
    pull(bars)
  track_1$bar_steps[i] <- metric_tibble %>%
    filter(time_steps == get_timestep) %>%
    pull(bar_steps)
}

# assign intervals to the bars

music_matrix <- matrix(0,
                       ncol = (48+128+(48*128)),
                       nrow = max(track_1$bars)
)

for(i in 1:max(track_1$bars)){
  
  bar_midi <- track_1%>%
    filter(bars == i)
  
  one_bar <- matrix(0,
                  nrow=dim(pyramidi::midi_defs)[1],
                  ncol=48)
  
  for(j in 1:dim(one_bar)[1]){
    one_bar[bar_midi$note[j],bar_midi$bar_steps[j]] <- 1
  }
  
  
  pitch_vector <- rowSums(one_bar)
  time_vector <- colSums(one_bar)
  pitch_by_time <- c(one_bar)

  #concatenate_vector
  music_vector <- c(pitch_vector,time_vector,pitch_by_time)
  
  music_matrix[i,] <- music_vector
  
}
```
:::



-->


</section>

 ]]></description>
  <category>midi</category>
  <category>generative</category>
  <category>mario</category>
  <category>matrix</category>
  <category>rstats</category>
  <guid>https://homophony.quest/blog/35_2_3_24_matrix_midi/</guid>
  <pubDate>Sat, 03 Feb 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/35_2_3_24_matrix_midi/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Systematically randomizing Super Mario brothers with R</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/33_2_1_24_rand_mario/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Super mario brothers. Random, random pixels. pixel art. chaos."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/33_2_1_24_rand_mario/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Super mario brothers. Random, random pixels. pixel art. chaos. - Dreamshaper v7</p>
</div></div><p>NOTE: I took some of the mp3s off because the page was loading really slowly with too many.</p>
<p>In the pursuit of MIDI knowledge I have achieved my goal of randomizing the overworld music from Super Mario Brothers.</p>
<p>This one randomly shuffles 50% of the note ON messages.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pyramidi)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb2-7">test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb2-10">mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb2-13">dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb2-14">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb2-17">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># achieve master plan to systematically randomize mario brothers</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modify midi file</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get ids for note on messages</span></span>
<span id="cb2-22">ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add_row_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(df)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb2-25">         type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note_on"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(add_row_id)</span>
<span id="cb2-27"></span>
<span id="cb2-28">all_notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(ids)</span>
<span id="cb2-29">rand_proportion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-30">ids_to_swap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(all_notes,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(all_notes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>rand_proportion))</span>
<span id="cb2-31"></span>
<span id="cb2-32">from_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ids[ids_to_swap]</span>
<span id="cb2-33">to_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(from_id)</span>
<span id="cb2-34"></span>
<span id="cb2-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># swap the notes</span></span>
<span id="cb2-36">df[from_id,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[to_id,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note</span>
<span id="cb2-37"></span>
<span id="cb2-38">mod_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df</span>
<span id="cb2-39"></span>
<span id="cb2-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb2-41">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(mod_df)</span>
<span id="cb2-42"></span>
<span id="cb2-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb2-44"></span>
<span id="cb2-45">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario.mid"</span>)</span>
<span id="cb2-46"></span>
<span id="cb2-47"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb2-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb2-49"></span>
<span id="cb2-50">track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario"</span></span>
<span id="cb2-51"></span>
<span id="cb2-52">wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb2-53">midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb2-54">mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb2-55"></span>
<span id="cb2-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb2-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#miditapyr$write_midi(dfc, ticks_per_beat, midi_name)</span></span>
<span id="cb2-58"></span>
<span id="cb2-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb2-60">system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/FluidR3_GM.sf2 {midi_name}'</span>)</span>
<span id="cb2-61"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb2-62"></span>
<span id="cb2-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb2-64">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span>
<span id="cb2-65"></span>
<span id="cb2-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb2-67"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb2-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb2-69">}</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="mario.mp3" type="audio/wav"> </audio></p>
<p>Now I just need to get a nintendo soundfont and do even more weird stuff.</p>
<section id="note-on-and-off" class="level2">
<h2 class="anchored" data-anchor-id="note-on-and-off">Note on and off</h2>
<p>Rows in the midi file either contain note on or note off messages. There is no grouping variable for a particular note’s ON and OFF message. In the above, I only shuffled the note numbers for Note ON messages. This results in some notes having a long sustain because they are not turned OFF. Some of the notes may never be turned off, OMG that poor midi file.</p>
<p>Next goal is, can I pair up the on and off messages, and re-randomize to make everything sound tighter.</p>
<p>New Function to assign a unique id to each note</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A function to create unique ids for each note</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this helps group note on and off messages</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">get_unique_note_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(note_column){</span>
<span id="cb3-5">  </span>
<span id="cb3-6">  unique_note_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_column))</span>
<span id="cb3-7">  unique_counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-8">  </span>
<span id="cb3-9">  notes_that_are_on <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_number =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb3-10">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb3-11">  </span>
<span id="cb3-12">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_column)){</span>
<span id="cb3-13">    </span>
<span id="cb3-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.nan</span>(note_column[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T) {</span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># catch NaNs don't modify  </span></span>
<span id="cb3-16">    }</span>
<span id="cb3-17">    </span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.nan</span>(note_column[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> F) {</span>
<span id="cb3-19">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get current note</span></span>
<span id="cb3-20">      current_note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_column[i]</span>
<span id="cb3-21">      </span>
<span id="cb3-22">      do_once_toggle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-23">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if current note is in the note_on buffer, remove it</span></span>
<span id="cb3-24">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(current_note <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> notes_that_are_on<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_number <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>){</span>
<span id="cb3-25">        </span>
<span id="cb3-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign id to column vector</span></span>
<span id="cb3-27">        unique_note_id[i]<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> notes_that_are_on <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-28">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(note_number <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> current_note) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-29">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(note_id)</span>
<span id="cb3-30">        </span>
<span id="cb3-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove note from buffer</span></span>
<span id="cb3-32">        notes_that_are_on <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> notes_that_are_on <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-33">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(note_number <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> current_note)</span>
<span id="cb3-34">        </span>
<span id="cb3-35">        do_once_toggle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-36">      }</span>
<span id="cb3-37">      </span>
<span id="cb3-38">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if it isn't in the note_on buffer, put it in there</span></span>
<span id="cb3-39">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(do_once_toggle <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb3-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(current_note <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> notes_that_are_on<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_number <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb3-41">          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># increment unique note counter</span></span>
<span id="cb3-42">          unique_counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> unique_counter<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-43">          </span>
<span id="cb3-44">          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add note on info to a new row in the buffer</span></span>
<span id="cb3-45">          notes_that_are_on <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> notes_that_are_on <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-46">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_number =</span> current_note,</span>
<span id="cb3-47">                                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_id =</span> unique_counter)</span>
<span id="cb3-48">          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign id to column vector</span></span>
<span id="cb3-49">          unique_note_id[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> unique_counter</span>
<span id="cb3-50">        }</span>
<span id="cb3-51">      }</span>
<span id="cb3-52">      </span>
<span id="cb3-53">    }</span>
<span id="cb3-54">  </span>
<span id="cb3-55">  }</span>
<span id="cb3-56">  </span>
<span id="cb3-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(unique_note_id)</span>
<span id="cb3-58">  </span>
<span id="cb3-59">}</span></code></pre></div>
</details>
</div>
<p>That works and assigns a new column (to be removed later)</p>
<p>Now, I should be able to shuffle note objects, including their on and off messages. This should get rid of those sustained notes from the first randomization.</p>
<p>The midi file has four tracks. The fourth track is the drum track. The first three parts are essentially mono-voice harmony. The code below takes 50% of the notes in the first track and randomly shuffles them around so they appear in different random spots in the song. It still sounds very recognizable.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb4-2">test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb4-5">mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb4-8">dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb4-9">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb4-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># isolate track 1 and add the unique note id vector</span></span>
<span id="cb4-15">track_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_unique_note_id</span>(note))</span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get all unique notes</span></span>
<span id="cb4-21">possible_notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.nan</span>(track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> F])</span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># randomly select some proportion to shuffle</span></span>
<span id="cb4-24">rand_proportion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-25">shuffled_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(possible_notes, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(possible_notes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>rand_proportion))</span>
<span id="cb4-26"></span>
<span id="cb4-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the note names that will be shuffled</span></span>
<span id="cb4-28">note_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1[track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb4-29">          track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_on'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note</span>
<span id="cb4-30"></span>
<span id="cb4-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># shuffle</span></span>
<span id="cb4-32">note_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(note_names)</span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign shuffled notes back to df for note and note off messages</span></span>
<span id="cb4-35">track_1[track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb4-36">          track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_on'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_names</span>
<span id="cb4-37"></span>
<span id="cb4-38">track_1[track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb4-39">          track_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_off'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_names</span>
<span id="cb4-40"></span>
<span id="cb4-41">track_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>row_id,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>note_id)</span>
<span id="cb4-43"></span>
<span id="cb4-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put track 1 back into df</span></span>
<span id="cb4-45"></span>
<span id="cb4-46">df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track_1</span>
<span id="cb4-47"></span>
<span id="cb4-48">mod_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df</span>
<span id="cb4-49"></span>
<span id="cb4-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb4-51">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(mod_df)</span>
<span id="cb4-52"></span>
<span id="cb4-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb4-54"></span>
<span id="cb4-55">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario_B.mid"</span>)</span>
<span id="cb4-56"></span>
<span id="cb4-57"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb4-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb4-59"></span>
<span id="cb4-60">track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario_B"</span></span>
<span id="cb4-61"></span>
<span id="cb4-62">wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb4-63">midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb4-64">mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb4-65"></span>
<span id="cb4-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb4-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#miditapyr$write_midi(dfc, ticks_per_beat, midi_name)</span></span>
<span id="cb4-68"></span>
<span id="cb4-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb4-70">system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/FluidR3_GM.sf2 {midi_name}'</span>)</span>
<span id="cb4-71"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb4-72"></span>
<span id="cb4-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb4-74">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span>
<span id="cb4-75"></span>
<span id="cb4-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb4-77"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb4-78">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb4-79">}</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="mario_B.mp3" type="audio/wav"> </audio></p>
</section>
<section id="randomizing-mario-even-more" class="level2">
<h2 class="anchored" data-anchor-id="randomizing-mario-even-more">Randomizing Mario even more</h2>
<p>It would only be fair to randomize the song in steps of equal proportion from .1 to 1.</p>
<p>I’m only randomizing the note numbers within voices, which preserves the timing of all of the notes. As the shuffling proportion increases the song becomes stranger. Still sounds like mario, even with full entropy.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(p <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)){</span>
<span id="cb5-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb5-3">  test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb5-4">  </span>
<span id="cb5-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb5-6">  mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb5-7">  </span>
<span id="cb5-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb5-9">  dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb5-10">  ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb5-11">  </span>
<span id="cb5-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb5-13">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb5-14">  </span>
<span id="cb5-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do shuffling for all tracks</span></span>
<span id="cb5-16">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(t <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)){</span>
<span id="cb5-17">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># isolate track 1 and add the unique note id vector</span></span>
<span id="cb5-18">    track <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> t) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_unique_note_id</span>(note))</span>
<span id="cb5-22">    </span>
<span id="cb5-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get all unique notes</span></span>
<span id="cb5-24">    possible_notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.nan</span>(track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> F])</span>
<span id="cb5-25">    </span>
<span id="cb5-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># randomly select some proportion to shuffle</span></span>
<span id="cb5-27">    rand_proportion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p</span>
<span id="cb5-28">    shuffled_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(possible_notes, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(possible_notes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>rand_proportion))</span>
<span id="cb5-29">    </span>
<span id="cb5-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the note names that will be shuffled</span></span>
<span id="cb5-31">    note_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb5-32">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_on'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note</span>
<span id="cb5-33">    </span>
<span id="cb5-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># shuffle</span></span>
<span id="cb5-35">    note_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(note_names)</span>
<span id="cb5-36">    </span>
<span id="cb5-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign shuffled notes back to df for note and note off messages</span></span>
<span id="cb5-38">    track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb5-39">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_on'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_names</span>
<span id="cb5-40">    </span>
<span id="cb5-41">    track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb5-42">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_off'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_names</span>
<span id="cb5-43">    </span>
<span id="cb5-44">    track <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-45">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>row_id,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>note_id)</span>
<span id="cb5-46">    </span>
<span id="cb5-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put track 1 back into df</span></span>
<span id="cb5-48">    </span>
<span id="cb5-49">    df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> t,] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track</span>
<span id="cb5-50">  }</span>
<span id="cb5-51">  </span>
<span id="cb5-52">  </span>
<span id="cb5-53">  mod_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df</span>
<span id="cb5-54">  </span>
<span id="cb5-55">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb5-56">  test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(mod_df)</span>
<span id="cb5-57">  </span>
<span id="cb5-58">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb5-59">  iter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb5-60"> </span>
<span id="cb5-61">  track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario_"</span>,iter)</span>
<span id="cb5-62">  midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb5-63">   </span>
<span id="cb5-64">  test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(midi_name)</span>
<span id="cb5-65">  </span>
<span id="cb5-66">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb5-67">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb5-68">  </span>
<span id="cb5-69"> </span>
<span id="cb5-70">  </span>
<span id="cb5-71">  wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb5-72">  mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb5-73">  </span>
<span id="cb5-74">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb5-75">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#miditapyr$write_midi(dfc, ticks_per_beat, midi_name)</span></span>
<span id="cb5-76">  </span>
<span id="cb5-77">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb5-78">  system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/FluidR3_GM.sf2 {midi_name}'</span>)</span>
<span id="cb5-79">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb5-80">  </span>
<span id="cb5-81">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb5-82">  av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span>
<span id="cb5-83">  </span>
<span id="cb5-84">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb5-85">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb5-86">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb5-87">  }</span>
<span id="cb5-88">}</span></code></pre></div>
</details>
</div>
<p>10% shuffled notes <audio controls=""> <source src="mario_1.mp3" type="audio/wav"> </audio></p>
<p>50% shuffled notes <audio controls=""> <source src="mario_5.mp3" type="audio/wav"> </audio></p>
<p>100% shuffled notes <audio controls=""> <source src="mario_10.mp3" type="audio/wav"> </audio></p>
</section>
<section id="really-really-random" class="level2">
<h2 class="anchored" data-anchor-id="really-really-random">Really Really Random</h2>
<p>Let’s go a bit further into that green pipe of entropy. Now, instead of shuffling notes within each track by some proportion, let’s just choose any random note (not necessarily from the song or the key). I used the note range 30 - 90 (midi notes), and sampled from this distribution uniformly. Mario get’s even more weird now. Still even at 100% it’s still recognizably Mario…as if Mario was trying to dial into the internet from a landline.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(p <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)){</span>
<span id="cb6-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb6-3">  test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb6-4">  </span>
<span id="cb6-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb6-6">  mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb6-7">  </span>
<span id="cb6-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb6-9">  dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb6-10">  ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb6-11">  </span>
<span id="cb6-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb6-13">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb6-14">  </span>
<span id="cb6-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do shuffling for all tracks</span></span>
<span id="cb6-16">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(t <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)){</span>
<span id="cb6-17">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># isolate track 1 and add the unique note id vector</span></span>
<span id="cb6-18">    track <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> t) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_unique_note_id</span>(note))</span>
<span id="cb6-22">    </span>
<span id="cb6-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get all unique notes</span></span>
<span id="cb6-24">    possible_notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.nan</span>(track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> F])</span>
<span id="cb6-25">    </span>
<span id="cb6-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># randomly select some proportion to shuffle</span></span>
<span id="cb6-27">    rand_proportion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p</span>
<span id="cb6-28">    shuffled_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(possible_notes, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(possible_notes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>rand_proportion))</span>
<span id="cb6-29">    </span>
<span id="cb6-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the note names that will be shuffled</span></span>
<span id="cb6-31">    note_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb6-32">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_on'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note</span>
<span id="cb6-33">    </span>
<span id="cb6-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># shuffle</span></span>
<span id="cb6-35">    note_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_names), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T)</span>
<span id="cb6-36">    </span>
<span id="cb6-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign shuffled notes back to df for note and note off messages</span></span>
<span id="cb6-38">    track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb6-39">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_on'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_names</span>
<span id="cb6-40">    </span>
<span id="cb6-41">    track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb6-42">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_off'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_names</span>
<span id="cb6-43">    </span>
<span id="cb6-44">    track <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-45">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>row_id,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>note_id)</span>
<span id="cb6-46">    </span>
<span id="cb6-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put track 1 back into df</span></span>
<span id="cb6-48">    </span>
<span id="cb6-49">    df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> t,] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track</span>
<span id="cb6-50">  }</span>
<span id="cb6-51">  </span>
<span id="cb6-52">  </span>
<span id="cb6-53">  mod_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df</span>
<span id="cb6-54">  </span>
<span id="cb6-55">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb6-56">  test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(mod_df)</span>
<span id="cb6-57">  </span>
<span id="cb6-58">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb6-59">  iter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb6-60"> </span>
<span id="cb6-61">  track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario_R"</span>,iter)</span>
<span id="cb6-62">  midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb6-63">   </span>
<span id="cb6-64">  test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(midi_name)</span>
<span id="cb6-65">  </span>
<span id="cb6-66">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb6-67">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb6-68">  </span>
<span id="cb6-69"> </span>
<span id="cb6-70">  </span>
<span id="cb6-71">  wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb6-72">  mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb6-73">  </span>
<span id="cb6-74">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb6-75">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#miditapyr$write_midi(dfc, ticks_per_beat, midi_name)</span></span>
<span id="cb6-76">  </span>
<span id="cb6-77">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb6-78">  system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/FluidR3_GM.sf2 {midi_name}'</span>)</span>
<span id="cb6-79">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb6-80">  </span>
<span id="cb6-81">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb6-82">  av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span>
<span id="cb6-83">  </span>
<span id="cb6-84">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb6-85">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb6-86">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb6-87">  }</span>
<span id="cb6-88">}</span></code></pre></div>
</details>
</div>
<p>10% random notes <audio controls=""> <source src="mario_R1.mp3" type="audio/wav"> </audio></p>
<p>50% random notes <audio controls=""> <source src="mario_R5.mp3" type="audio/wav"> </audio></p>
<p>100% random notes <audio controls=""> <source src="mario_R10.mp3" type="audio/wav"> </audio></p>
</section>
<section id="trying-another-soundfont" class="level2">
<h2 class="anchored" data-anchor-id="trying-another-soundfont">Trying another soundfont</h2>
<p>So far I have only used a general style soundfont. Let’s see how easy it is to get a nintendo sound.</p>
<p><a href="https://musical-artifacts.com/artifacts/610" class="uri">https://musical-artifacts.com/artifacts/610</a></p>
<p>Pretty easy, nice.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">  track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld"</span></span>
<span id="cb7-2">  midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb7-3">   </span>
<span id="cb7-4">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb7-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb7-6"></span>
<span id="cb7-7">  wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb7-8">  mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb7-9">  </span>
<span id="cb7-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb7-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#miditapyr$write_midi(dfc, ticks_per_beat, midi_name)</span></span>
<span id="cb7-12">  </span>
<span id="cb7-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb7-14">  system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/nintendo_soundfont.sf2 {midi_name}'</span>)</span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb7-16">  </span>
<span id="cb7-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb7-18">  av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span>
<span id="cb7-19">  </span>
<span id="cb7-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb7-21">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb7-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb7-23">  }</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="overworld.mp3" type="audio/wav"> </audio></p>
</section>
<section id="more-random-notes-with-the-mario-sound" class="level2">
<h2 class="anchored" data-anchor-id="more-random-notes-with-the-mario-sound">More random notes with the mario sound</h2>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(p <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)){</span>
<span id="cb8-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb8-3">  test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb8-4">  </span>
<span id="cb8-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb8-6">  mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"overworld.mid"</span>)</span>
<span id="cb8-7">  </span>
<span id="cb8-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb8-9">  dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb8-10">  ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb8-11">  </span>
<span id="cb8-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb8-13">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb8-14">  </span>
<span id="cb8-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do shuffling for all tracks</span></span>
<span id="cb8-16">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(t <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)){</span>
<span id="cb8-17">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># isolate track 1 and add the unique note id vector</span></span>
<span id="cb8-18">    track <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> t) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_unique_note_id</span>(note))</span>
<span id="cb8-22">    </span>
<span id="cb8-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get all unique notes</span></span>
<span id="cb8-24">    possible_notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.nan</span>(track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> F])</span>
<span id="cb8-25">    </span>
<span id="cb8-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># randomly select some proportion to shuffle</span></span>
<span id="cb8-27">    rand_proportion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p</span>
<span id="cb8-28">    shuffled_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(possible_notes, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(possible_notes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>rand_proportion))</span>
<span id="cb8-29">    </span>
<span id="cb8-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the note names that will be shuffled</span></span>
<span id="cb8-31">    note_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb8-32">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_on'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note</span>
<span id="cb8-33">    </span>
<span id="cb8-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># shuffle</span></span>
<span id="cb8-35">    note_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(note_names), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T)</span>
<span id="cb8-36">    </span>
<span id="cb8-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign shuffled notes back to df for note and note off messages</span></span>
<span id="cb8-38">    track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb8-39">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_on'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_names</span>
<span id="cb8-40">    </span>
<span id="cb8-41">    track[track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shuffled_ids <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb8-42">              track<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'note_off'</span>,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> note_names</span>
<span id="cb8-43">    </span>
<span id="cb8-44">    track <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-45">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>row_id,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>note_id)</span>
<span id="cb8-46">    </span>
<span id="cb8-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put track 1 back into df</span></span>
<span id="cb8-48">    </span>
<span id="cb8-49">    df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> t,] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> track</span>
<span id="cb8-50">  }</span>
<span id="cb8-51">  </span>
<span id="cb8-52">  </span>
<span id="cb8-53">  mod_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df</span>
<span id="cb8-54">  </span>
<span id="cb8-55">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb8-56">  test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(mod_df)</span>
<span id="cb8-57">  </span>
<span id="cb8-58">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb8-59">  iter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb8-60"> </span>
<span id="cb8-61">  track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mario_NES"</span>,iter)</span>
<span id="cb8-62">  midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb8-63">   </span>
<span id="cb8-64">  test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(midi_name)</span>
<span id="cb8-65">  </span>
<span id="cb8-66">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb8-67">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb8-68">  </span>
<span id="cb8-69"> </span>
<span id="cb8-70">  </span>
<span id="cb8-71">  wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb8-72">  mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb8-73">  </span>
<span id="cb8-74">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb8-75">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#miditapyr$write_midi(dfc, ticks_per_beat, midi_name)</span></span>
<span id="cb8-76">  </span>
<span id="cb8-77">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb8-78">  system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/nintendo_soundfont.sf2 {midi_name}'</span>)</span>
<span id="cb8-79">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb8-80">  </span>
<span id="cb8-81">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb8-82">  av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span>
<span id="cb8-83">  </span>
<span id="cb8-84">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb8-85">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb8-86">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb8-87">  }</span>
<span id="cb8-88">}</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="mario_NES1.mp3" type="audio/wav"> </audio></p>
<p><audio controls=""> <source src="mario_NES5.mp3" type="audio/wav"> </audio></p>
<p><audio controls=""> <source src="mario_NES10.mp3" type="audio/wav"> </audio></p>
<p>Now my princess really is in another castle.</p>


</section>

 ]]></description>
  <category>midi</category>
  <category>fluidsynth</category>
  <category>rstats</category>
  <guid>https://homophony.quest/blog/33_2_1_24_rand_mario/</guid>
  <pubDate>Thu, 01 Feb 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/33_2_1_24_rand_mario/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Charting out chordal spin</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/30_1_30_24_spinning_chords/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piano chord. spinning circles. spinning piano. retro. 80s cartoon."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/30_1_30_24_spinning_chords/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>piano chord. spinning circles. spinning piano. retro. 80s cartoon. - Dreamshaper v7</p>
</div></div><p>In recent past posts, I’ve been representing chords as vectors and plotting them in 2-dimensional space to visualize similarity relationships. Yesterday, I made some charts to look at <a href="https://homophony.quest/blog/29_1_29_24_cmajor/">basic triads in the C scale</a>, and did a little bit of analysis on the <a href="https://homophony.quest/blog/29_1_29_24_cmajor/#bar-blues-analysis">12-bar blues progression</a>. I’m mostly doing this stuff out of general interest, and with some hope that I can learn something to inform my own playing.</p>
<p>This morning I’ll continue in the same direction by making the same kind of graphs for more chord types besides triads.</p>
<p>The basic idea is to plot a chord as a compound vector inside the circle of fifths. Each of the notes in the chord are vectors that point at their respective notes in the circle of fifths. The chord vector is the average direction of all the note vectors, and it points somewhere in the circle of fifths. Finally, yesterday I added a “spinning” force to some chords that I thought had natural rotational motion with respect to a key center. This last part had potential musical implications in terms of chord progressions that I might find useful when I’m playing.</p>
<p>I’d like to know how other chords “spin”, so I’m making these here graphs.</p>
<section id="example-spinning-chord-chart" class="level2">
<h2 class="anchored" data-anchor-id="example-spinning-chord-chart">Example spinning chord chart</h2>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-processing to get the chord vectors</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load chord vectors</span></span>
<span id="cb2-5">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb2-8">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb2-14">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb2-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb2-21"></span>
<span id="cb2-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb2-24">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb2-25"></span>
<span id="cb2-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb2-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb2-28">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb2-29"></span>
<span id="cb2-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb2-31">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb2-33"></span>
<span id="cb2-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb2-35">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb2-36"></span>
<span id="cb2-37">  }</span>
<span id="cb2-38">}</span>
<span id="cb2-39"></span>
<span id="cb2-40">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(c_chord_excel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)),</span>
<span id="cb2-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(keys, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(c_chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb2-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix),</span>
<span id="cb2-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb2-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">database_chord =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-46">)</span>
<span id="cb2-47"></span>
<span id="cb2-48">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb2-49"></span>
<span id="cb2-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find repeats and build synonym list</span></span>
<span id="cb2-51">repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-52"></span>
<span id="cb2-53">first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-54"></span>
<span id="cb2-55"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb2-56">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the current row</span></span>
<span id="cb2-57">  evaluate_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order[i,]</span>
<span id="cb2-58"></span>
<span id="cb2-59">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't count the current item as a repeat</span></span>
<span id="cb2-60">  evaluate_row[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-61"></span>
<span id="cb2-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeats are the ids for any other 1s found</span></span>
<span id="cb2-63">  repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(evaluate_row <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> )</span>
<span id="cb2-64"></span>
<span id="cb2-65">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-66">  }</span>
<span id="cb2-67"></span>
<span id="cb2-68">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#add to list of repeat items</span></span>
<span id="cb2-70">    repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(repeat_indices,repeats)</span>
<span id="cb2-71"></span>
<span id="cb2-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add synonyms</span></span>
<span id="cb2-73">    chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>synonyms[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix)[repeats])</span>
<span id="cb2-74">  }</span>
<span id="cb2-75"></span>
<span id="cb2-76">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> first_occurrence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> repeat_indices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-78">      first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(first_occurrence,i)</span>
<span id="cb2-79">      chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>database_chord[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-80">    }</span>
<span id="cb2-81">  }</span>
<span id="cb2-82">}</span>
<span id="cb2-83"></span>
<span id="cb2-84">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-85">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_notes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(chord_matrix),</span>
<span id="cb2-86">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-87"></span>
<span id="cb2-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep only unique chord, recompute similarities</span></span>
<span id="cb2-89">chord_matrix_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[first_occurrence,]</span>
<span id="cb2-90">first_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix_no_repeats))</span>
<span id="cb2-91">second_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order_no_repeats)</span>
<span id="cb2-92"></span>
<span id="cb2-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove scales and individual notes</span></span>
<span id="cb2-94">only_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-95">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,</span>
<span id="cb2-96">         type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span>,</span>
<span id="cb2-97">         database_chord <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-98"></span>
<span id="cb2-99">first_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-100">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span>
<span id="cb2-101">second_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> second_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-102">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb3-3">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdscale</span>((first_order<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))</span>
<span id="cb3-4">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(mds_first_order) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties)</span>
<span id="cb3-6"></span>
<span id="cb3-7">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mds_first_order <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(key,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bold_me =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(key <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-10">                             key <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>,</span>
<span id="cb3-12">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>,</span>
<span id="cb3-13">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>,</span>
<span id="cb3-14">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>,</span>
<span id="cb3-15">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>,</span>
<span id="cb3-16">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>,</span>
<span id="cb3-17">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>,</span>
<span id="cb3-18">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major scale"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">V1 =</span> V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-20">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">V2 =</span> V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line_V1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>,</span>
<span id="cb3-22">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>,</span>
<span id="cb3-23">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>,</span>
<span id="cb3-24">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>,</span>
<span id="cb3-25">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>,</span>
<span id="cb3-26">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>,</span>
<span id="cb3-27">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>,</span>
<span id="cb3-28">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major scale"</span>,</span>
<span id="cb3-29">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>,</span>
<span id="cb3-30">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>,</span>
<span id="cb3-31">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>,</span>
<span id="cb3-32">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>,</span>
<span id="cb3-33">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>,</span>
<span id="cb3-34">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>,</span>
<span id="cb3-35">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> V1),</span>
<span id="cb3-36">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line_V2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>,</span>
<span id="cb3-37">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>,</span>
<span id="cb3-38">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>,</span>
<span id="cb3-39">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>,</span>
<span id="cb3-40">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>,</span>
<span id="cb3-41">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>,</span>
<span id="cb3-42">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>,</span>
<span id="cb3-43">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major scale"</span>,</span>
<span id="cb3-44">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>,</span>
<span id="cb3-45">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>,</span>
<span id="cb3-46">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>,</span>
<span id="cb3-47">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>,</span>
<span id="cb3-48">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>,</span>
<span id="cb3-49">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>,</span>
<span id="cb3-50">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> V2))</span>
<span id="cb3-51"></span>
<span id="cb3-52">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb3-53">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb3-57">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-58">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-59">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> line_V1,</span>
<span id="cb3-60">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> line_V2,</span>
<span id="cb3-61">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> type))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-62">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major scale"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb3-64"></span>
<span id="cb3-65">Cmajor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb3-66">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb3-70">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-71">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-72">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb3-73">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb3-75">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-76">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-77">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb3-78">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-79">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb3-80">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-81">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-82">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb3-83">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-84">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb3-85">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-86">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-87">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb3-88">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2,</span>
<span id="cb3-89">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-90">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb3-91">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb3-92">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-93">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-94">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb3-95">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-96">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb3-97">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb3-98">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-99">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-100">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-101">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb3-102">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-103">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-104">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-105">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb3-106"></span>
<span id="cb3-107"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb3-108"></span>
<span id="cb3-109">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Cmajor</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/30_1_30_24_spinning_chords/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="1920"></p>
</figure>
</div>
</div>
</div>
<p>These are repeat graphs from yesterday. I have coded a whole bunch of chords as feature vectors, calculated cosine similarities between all chords, and then used multi-dimensional scaling to render the chords in a compressed 2-dimensional similarity space. This procedure puts each note into a circle of fifths relationship, as shown in the graph.</p>
<p>The C major scale graph draws lines from the origin to each note in the C scale. The graph also has compound vectors showing the direction of each triad, and the direction of the whole scale. The C major scale is symmetrical about the D note, and it points in the direction of the D note. So, I take D as the center.</p>
<p>The C major triad graph shows lines for the notes C, E, and G, and a red line for the compound vector, which indicates the direction of the chord. It’s going somewhere between the G note and D note in chord space. The red line is the center of C major triad. If this was a physical object, like an unusual fork with three tines (for C, E, and G), it should balance on its point by tilting it so the red line points up at 90 degrees. From this perspective, the triad does not a have any spin. It wants to go straight ahead, and does not want to spin around the circle.</p>
<p>However, from the perspective of the key center, which is indicated by the dotted line, the chord does have a spin. If the object was tilted so that the dotted line was at 90 degrees, the chord would fall to the left because it is unbalanced. In recognition of this potential for spin, I put a little curvy arrow on the C major triad pointing in the anti-clockwise direction, which is the direction it would “fall”, or spin on the circle.</p>
</section>
<section id="where-is-the-center" class="level2">
<h2 class="anchored" data-anchor-id="where-is-the-center">Where is the center?</h2>
<p>In the above I use the D note as center, seems pretty obvious based on how the C major scale spreads across the circle of fifths. However, I just realized that in the graphs I made yesterday, I didn’t use the key center to compute spin. In the case of the C major triad, the D note direction is also the bisecting line for the largest angle (CE) in the chord. I had used the bisecting line to compute spin for the other chords.</p>
<p>Using the bisecting line as center, major triads spin anti-clockwise and minor triads spin clockwise. The one diminished chord doesn’t spin. I’m not sure that assigning spin this way is a reasonable thing to do or not?</p>
<p>If I keep pursuing a physical object analogy, let’s think about welding a little ringlet onto the point of the chordal fork, and then placing the chord object tines up on a nail. The C major triad object should balance when the notional red line points at 90 degrees. But it will fall over to the left, or to the right depending on the starting angle. Yesterday, I had the G major triad spinning anti-clockwise. It would do this in the G major scale. However, if I take the D note as the center, there is a rationale for having the G major chord spin clockwise.</p>
<p>In short, if I try to use the key center to compute spin, things could get complicated, especially if it’s not clear what the key center is. I’ll leave that for another day.</p>
<p>Today, I guess I will use the bisecting line from the largest angle.</p>
</section>
<section id="th-chords-in-c-major" class="level2">
<h2 class="anchored" data-anchor-id="th-chords-in-c-major">7th chords in C major</h2>
<p>The chord charts I made yesterday were done in ggplot2. It would be nice to functionalize the code so I could enter some chord names and get the charts without having to hand code everything. I’m having some indecision on whether or not to spend time writing those functions, or just make the graphs.</p>
<p>I’ll do four by hand to see what I’m dealing with.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdscale</span>((first_order<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))</span>
<span id="cb4-2">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(mds_first_order) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties)</span>
<span id="cb4-4"></span>
<span id="cb4-5">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mds_first_order <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(key,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bold_me =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(key <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-8">                             key <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C∆7"</span>,</span>
<span id="cb4-10">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dm7"</span>,</span>
<span id="cb4-11">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>,</span>
<span id="cb4-12">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bm7(b5)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">V1 =</span> V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-14">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">V2 =</span> V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line_V1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C∆7"</span>,</span>
<span id="cb4-16">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dm7"</span>,</span>
<span id="cb4-17">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>,</span>
<span id="cb4-18">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bm7(b5)"</span>,</span>
<span id="cb4-19">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>,</span>
<span id="cb4-20">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>,</span>
<span id="cb4-21">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>,</span>
<span id="cb4-22">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>,</span>
<span id="cb4-23">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>,</span>
<span id="cb4-24">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>,</span>
<span id="cb4-25">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> V1),</span>
<span id="cb4-26">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line_V2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C∆7"</span>,</span>
<span id="cb4-27">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dm7"</span>,</span>
<span id="cb4-28">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>,</span>
<span id="cb4-29">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bm7(b5)"</span>,</span>
<span id="cb4-30">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>,</span>
<span id="cb4-31">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>,</span>
<span id="cb4-32">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>,</span>
<span id="cb4-33">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>,</span>
<span id="cb4-34">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>,</span>
<span id="cb4-35">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>,</span>
<span id="cb4-36">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> V2))</span>
<span id="cb4-37"></span>
<span id="cb4-38">Cmajor7 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb4-39">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-43">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-44">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-45">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-46">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-48">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-49">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-50">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-51">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-53">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-54">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-55">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-56">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-58">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-59">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-60">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-61">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-62">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb4-63">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-64">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-65">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-66">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2,</span>
<span id="cb4-67">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-69">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb4-70">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-71">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-72">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C∆7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-73">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C∆7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-75">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb4-76">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-77">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-78">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-79">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C∆7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb4-80">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C∆7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-81">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-82">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C∆7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-83">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-84"></span>
<span id="cb4-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Cmajor7</span></span>
<span id="cb4-86"></span>
<span id="cb4-87">Dminor7 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb4-88">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-90">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-91">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-92">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-93">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-94">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-95">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-96">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-97">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-98">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-99">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-100">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-101">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-102">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-103">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-104">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-105">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-106">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-107">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-108">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-109">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-110">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-111">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb4-112">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-113">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-114">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-115">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2,</span>
<span id="cb4-116">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-117">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-118">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb4-119">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-120">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-121">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dm7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-122">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dm7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-123">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-124">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb4-125">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-126">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-127">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-128">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dm7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb4-129">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dm7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-130">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-131">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dm7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-132">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-133"></span>
<span id="cb4-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Dminor7</span></span>
<span id="cb4-135"></span>
<span id="cb4-136">G7 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb4-137">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-138">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-139">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-140">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-141">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-142">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-143">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-144">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-145">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-146">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-147">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-148">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-149">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-150">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-151">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-152">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-153">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-154">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-155">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-156">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-157">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-158">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-159">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-160">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb4-161">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-162">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-163">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-164">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2,</span>
<span id="cb4-165">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-166">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-167">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb4-168">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-169">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-170">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-171">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-172">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-173">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb4-174">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-175">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-176">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-177">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb4-178">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-179">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-180">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-181">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-182"></span>
<span id="cb4-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#G7</span></span>
<span id="cb4-184"></span>
<span id="cb4-185">Bm7b5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb4-186">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-187">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-188">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-189">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-190">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-191">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-192">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-193">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-194">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-195">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-196">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-197">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-198">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-199">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-200">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-201">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-202">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-203">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-204">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-205">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-206">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-207">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-208">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-209">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb4-210">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-211">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-212">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-213">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2,</span>
<span id="cb4-214">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-215">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-216">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb4-217">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-218">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-219">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bm7(b5)"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-220">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bm7(b5)"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-221">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-222">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb4-223">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-224">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-225">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-226">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bm7(b5)"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb4-227">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bm7(b5)"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-228">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-229">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bm7(b5)"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-230">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-231"></span>
<span id="cb4-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Bm7b5</span></span>
<span id="cb4-233"></span>
<span id="cb4-234"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb4-235">(Cmajor7 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Dminor7) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (G7 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Bm7b5)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/30_1_30_24_spinning_chords/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="1920"></p>
</figure>
</div>
</div>
</div>
<p>In the C∆7 graph I kept the dotted line to the D note as a reference for the key center in C major scale. For all of the chords I used the bisecting line between the largest angle to compute spin.</p>
<p>C∆7 is a symmetrical chord that points in between D and A. It has no spin. Similarly, Dm7 is a symmetrical chord centered on G that has no spin.</p>
<p>G7 is not a symmetrical chord and spins anti-clockwise. Bm7(b5) is not symmetrical and spins clockwise–it also points in the same direction as C7.</p>
<p>I need to call it a morning on this side adventure very soon. But, before I go, I’m thinking again about chord progressions and this spin concept.</p>
<p>ii-V-I is very common in jazz, and I talked about this <a href="https://homophony.quest/blog/29_1_29_24_cmajor/#ii-v-i">progression in relation to triads and their spin yesterday</a>. Is there a different story with these seventh chords?</p>
<p>Dm7 is ii, and it doesn’t have a spin. It’s off anti-clockwise from the key center. It is close to G7 (V). Perhaps there is some similarity based gravitational force making Dm7 want to go to G7. Based on spin, it’s more like G7 wants to go to Dm7. Both Dm7 and G7 are on the anti-clockwise side of the key center (D note), so to remain in the key center balance needs to be restored after playing II and V, hence the C∆7.</p>
<p>In terms of voicing chords, the spin could change depending on how much weight a given note is given. For example, if C∆7 was played as four notes it would not have a spin. But, if some of the notes were duplicated, then the vector for those notes would get longer and carry more weight. For example, playing a C∆7 chord in the right hand on piano, and with an E bass note would tip the chord to spinning clockwise. Emphasizing a C on the bass would spin it anti-clockwise.</p>


</section>

 ]]></description>
  <category>chord similarity</category>
  <category>datavis</category>
  <category>circle of fifths</category>
  <category>music theory</category>
  <category>rstats</category>
  <guid>https://homophony.quest/blog/30_1_30_24_spinning_chords/</guid>
  <pubDate>Tue, 30 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/30_1_30_24_spinning_chords/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Midi and synthesis in R</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/32_1_30_24_R_synth/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"computer music. musical computer. music represented as bits going into the fabric of the universe. 80s cartoon retro."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/32_1_30_24_R_synth/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>computer music. musical computer. music represented as bits going into the fabric of the universe. 80s cartoon retro. - Dreamshaper v7</p>
</div></div><p>I’m going to be running a cognition experiment or two this semester that will involve creating musical stimuli. I would like programmatic control over that, so I’m delighted to learn that there are existing R packages that will help me with a few things.</p>
<p>I’m just testing a few things out here, which means this page will be a loose collection of notes and scraps of code.</p>
<section id="reading-in-midi-with-pyramidi" class="level2">
<h2 class="anchored" data-anchor-id="reading-in-midi-with-pyramidi">Reading in MIDI with pyramidi</h2>
<p>It looks like I can read in MIDI data to a dataframe with <a href="https://urswilke.github.io/pyramidi/">pyramidi</a>.</p>
<p>Requires some python stuff, but it is working. Kudos to Urs Wilke for developing <code>pyramidi</code>! It uses <a href="https://adv-r.hadley.nz/r6.html">R6</a>, which I don’t use very often.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pyramidi)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(purrr)</span>
<span id="cb2-5"></span>
<span id="cb2-6">midifile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MidiFramer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top Gun Theme.mid"</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(midifile<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_notes_wide[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,])</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<colgroup>
<col style="width: 8%">
<col style="width: 6%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 6%">
<col style="width: 5%">
<col style="width: 7%">
<col style="width: 17%">
<col style="width: 14%">
<col style="width: 10%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: right;">i_track</th>
<th style="text-align: left;">meta</th>
<th style="text-align: right;">program</th>
<th style="text-align: right;">channel</th>
<th style="text-align: right;">control</th>
<th style="text-align: right;">value</th>
<th style="text-align: right;">note</th>
<th style="text-align: right;">i_note</th>
<th style="text-align: right;">velocity_note_on</th>
<th style="text-align: right;">ticks_note_on</th>
<th style="text-align: right;">b_note_on</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">2304</td>
<td style="text-align: right;">48</td>
</tr>
<tr class="even">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3792</td>
<td style="text-align: right;">79</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">3840</td>
<td style="text-align: right;">80</td>
</tr>
<tr class="even">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">5328</td>
<td style="text-align: right;">111</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">5</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">5376</td>
<td style="text-align: right;">112</td>
</tr>
<tr class="even">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">36</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">5376</td>
<td style="text-align: right;">112</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">6096</td>
<td style="text-align: right;">127</td>
</tr>
<tr class="even">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">36</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">6096</td>
<td style="text-align: right;">127</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">6144</td>
<td style="text-align: right;">128</td>
</tr>
<tr class="even">
<td style="text-align: right;">1</td>
<td style="text-align: left;">FALSE</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">NaN</td>
<td style="text-align: right;">41</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">6144</td>
<td style="text-align: right;">128</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="synthesizing-midi-to-wav-and-mp3" class="level2">
<h2 class="anchored" data-anchor-id="synthesizing-midi-to-wav-and-mp3">Synthesizing midi to wav and mp3</h2>
<p><a href="https://urswilke.github.io/raudiomate/">raudiomate</a></p>
<p>also need <a href="https://www.fluidsynth.org">fluid synth</a></p>
<p>And, apparently fluid synth needs sound fonts. Got this one <a href="https://member.keymusician.com/Member/FluidR3_GM/index.html" class="uri">https://member.keymusician.com/Member/FluidR3_GM/index.html</a></p>
<p>I could also try timidity, but I haven’t gone there yet.</p>
<p>I could not get <code>raudiomate</code> helper functions to work. The <code>processx::run</code> command kept putting quotes where they didn’t belong</p>
<ul>
<li>used the system command to run fluidsynth</li>
<li>used the <code>av</code> package to turn the wav into an mp3</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fluidsynth -F out.wav ~/Library/Audio/Sounds/Banks/FluidR3_GM.sf2 'Top Gun Theme.mid'"</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"out.wav"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"out.mp3"</span>)</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="out.mp3" type="audio/wav"> </audio></p>
<p>This all took way longer than I expected. Mostly fiddling with python packages and paths to things. But, I declare victory because it made the Top Gun theme song into an mp3.</p>
<hr>
<p>Very happy that it is possible to import, manipulate, and render midi files using R as a central command language. Although I have been messing with midi stuff for since the 80s, I have not tried to programmatically mess with it, or dug into midi file convention and structure.</p>
<p>I have some work ahead if I want to compose “computer music” with R. That would be fun though. I would probably glitch out until everything descends into modem sounds. Actually, I’m secretly extremely excited about some possibilities that I’ve wanted to explore.</p>
<p>Anyway, below is scraps of code trying out various things and making notes to my future self.</p>
</section>
<section id="writing-some-random-notes" class="level2">
<h2 class="anchored" data-anchor-id="writing-some-random-notes">Writing some random notes</h2>
<p>I’ve only got 30 minutes right now, can I make this thing randomize notes?</p>
<p>Strategy: Read the pyramidi docs, borrow some code from there, and try to play some random notes.</p>
<p>Answer: yes, close enough for now.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># trying stuff from the pyramidi docs</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in a basic midi file</span></span>
<span id="cb4-4">midi_file_string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"extdata"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_midi_file.mid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pyramidi"</span>)</span>
<span id="cb4-5"></span>
<span id="cb4-6">mfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MidiFramer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span>(midi_file_string)</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mfr has a bunch of midi dataframes in it</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mfr$df_notes_wide[1:10]</span></span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># helper function</span></span>
<span id="cb4-12">beats_to_ticks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(notes_wide) {</span>
<span id="cb4-13">  notes_wide <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb4-15">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks_note_on  =</span> b_note_on  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ticks_per_beat,</span>
<span id="cb4-16">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks_note_off =</span> b_note_off <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ticks_per_beat</span>
<span id="cb4-17">    )</span>
<span id="cb4-18">}</span>
<span id="cb4-19"></span>
<span id="cb4-20">n_beats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb4-21">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">960</span>L</span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#(b_note_on = (0:(n_beats-1) %/% 4) * 4)</span></span>
<span id="cb4-24"></span>
<span id="cb4-25">b_note_on <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(n_beats<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)</span>
<span id="cb4-26"></span>
<span id="cb4-27"></span>
<span id="cb4-28">notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb4-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb4-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">67</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace=</span>T),</span>
<span id="cb4-32">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">channel =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-33">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_note =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_beats,</span>
<span id="cb4-34">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">velocity_note_on =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb4-35">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">velocity_note_off =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-36">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_note_on =</span> b_note_on,</span>
<span id="cb4-37">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_note_off =</span> b_note_on <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-38">)</span>
<span id="cb4-39"></span>
<span id="cb4-40">mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_notes_wide</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">beats_to_ticks</span>(notes))</span>
<span id="cb4-41"></span>
<span id="cb4-42">df_notes_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_long_notes</span>(mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_notes_wide)</span>
<span id="cb4-43">df_midi_out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge_midi_frames</span>(mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_meta, mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_notes_long, mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_not_notes)</span>
<span id="cb4-44"></span>
<span id="cb4-45">dfc2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_midi_out <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-46">        miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest_midi</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repair_reticulate_conversion =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-47"></span>
<span id="cb4-48">miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_midi</span>(dfc2, ticks_per_beat, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test.mid"</span>)</span>
<span id="cb4-49"></span>
<span id="cb4-50"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fluidsynth -F test.wav ~/Library/Audio/Sounds/Banks/FluidR3_GM.sf2 'test.mid'"</span>)</span>
<span id="cb4-51"></span>
<span id="cb4-52">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test.wav"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test.mp3"</span>)</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="test.mp3" type="audio/wav"> </audio></p>
</section>
<section id="midi-specs" class="level2">
<h2 class="anchored" data-anchor-id="midi-specs">Midi specs</h2>
<p>Don’t have time to read through this today, but here it is.</p>
<ul>
<li><a href="https://www.midi.org/specifications" class="uri">https://www.midi.org/specifications</a></li>
</ul>
</section>
<section id="drums" class="level2">
<h2 class="anchored" data-anchor-id="drums">Drums</h2>
<p>On BPM, tempo, and midi ticks</p>
<ul>
<li><a href="https://majicdesigns.github.io/MD_MIDIFile/page_timing.html" class="uri">https://majicdesigns.github.io/MD_MIDIFile/page_timing.html</a></li>
</ul>
<p>The next bit is straight from <a href="https://urswilke.github.io/pyramidi/articles/compose.html" class="uri">https://urswilke.github.io/pyramidi/articles/compose.html</a>, with a few minor modifications to get things working on my machine.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load system midi file to start</span></span>
<span id="cb5-2">midi_file_string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"extdata"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_midi_file.mid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pyramidi"</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4">mfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MidiFramer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span>(midi_file_string)</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set some timing params</span></span>
<span id="cb5-7">n_beats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb5-8">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">960</span>L</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># construct a tibble</span></span>
<span id="cb5-11">drum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb5-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb5-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is just a repetition of a classical rock beat:</span></span>
<span id="cb5-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>), n_beats <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb5-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">channel =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,</span>
<span id="cb5-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_note =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_beats,</span>
<span id="cb5-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">velocity_note_on =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb5-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">velocity_note_off =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_note_on =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(n_beats <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb5-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_note_off =</span> b_note_on <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb5-22">)</span>
<span id="cb5-23"></span>
<span id="cb5-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># helper function</span></span>
<span id="cb5-25">beats_to_ticks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(notes_wide) {</span>
<span id="cb5-26">  notes_wide <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-27">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-28">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks_note_on  =</span> b_note_on  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ticks_per_beat,</span>
<span id="cb5-29">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks_note_off =</span> b_note_off <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ticks_per_beat</span>
<span id="cb5-30">    )</span>
<span id="cb5-31">}</span>
<span id="cb5-32"></span>
<span id="cb5-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pass the tibble back to the midi df</span></span>
<span id="cb5-34">mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_notes_wide</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">beats_to_ticks</span>(drum))</span>
<span id="cb5-35"></span>
<span id="cb5-36">mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"testagain.mid"</span>)</span>
<span id="cb5-37"></span>
<span id="cb5-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do pyramidi stuff to get the tibble back into the format it needs to be</span></span>
<span id="cb5-39">df_notes_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_long_notes</span>(mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_notes_wide)</span>
<span id="cb5-40">df_midi_out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge_midi_frames</span>(mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_meta, mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_notes_long, mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_not_notes)</span>
<span id="cb5-41"></span>
<span id="cb5-42">dfc2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_midi_out <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-43">        miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest_midi</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repair_reticulate_conversion =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb5-44"></span>
<span id="cb5-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb5-46">miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_midi</span>(dfc2, ticks_per_beat, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_drums.mid"</span>)</span>
<span id="cb5-47"></span>
<span id="cb5-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb5-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fluidsynth -F test_drums.wav ~/Library/Audio/Sounds/Banks/FluidR3_GM.sf2 'test_drums.mid'"</span>)</span>
<span id="cb5-50"></span>
<span id="cb5-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb5-52">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_drums.wav"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_drums.mp3"</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "/Users/mattcrump/Github/homophony.github.io/blog/32_1_30_24_R_synth/test_drums.mp3"</code></pre>
</div>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb7-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_drums.wav"</span>)){</span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_drums.wav"</span>)</span>
<span id="cb7-4">}</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p><audio controls=""> <source src="test_drums.mp3" type="audio/wav"> </audio></p>
<p>Cool, a basic rock beat.</p>
<hr>
<p>Attempting to add hi-hats, change tempo, and generally mess about.</p>
<p>hopefully this percussion midi map helps <a href="https://usermanuals.finalemusic.com/SongWriter2012Win/Content/PercussionMaps.htm" class="uri">https://usermanuals.finalemusic.com/SongWriter2012Win/Content/PercussionMaps.htm</a></p>
<p>Got the hihats, changed the tempo. I’m missing something about timing, the resulting wav file is playing with silence at the end, and that seems wrong. Need to tinker some more.</p>
<p><a href="https://mido.readthedocs.io/en/latest/files/midi.html?highlight=set_tempo#about-the-time-attribute" class="uri">https://mido.readthedocs.io/en/latest/files/midi.html?highlight=set_tempo#about-the-time-attribute</a></p>
<p>There seems to be some issues with <code>merge_midi_frames()</code>. The merged dataframe may contain some out of order rows.</p>
<ul>
<li>arranging by ticks gets screwed up when there are 0 ticks in meta and note dfs</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add additional sorting by i_note, seems to solve the curent problem</span></span>
<span id="cb9-2">merge_midi_frames_matt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb9-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df_meta, df_notes_long, df_not_notes) {</span>
<span id="cb9-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(df_meta) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb9-5">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(df_notes_long) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(df_not_notes)) {</span>
<span id="cb9-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb9-7">    }</span>
<span id="cb9-8">    cols_to_remove <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"i_note"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ticks"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>)</span>
<span id="cb9-9">    </span>
<span id="cb9-10">    res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_notes_long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-11">      dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(df_meta) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-12">      dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(df_not_notes)</span>
<span id="cb9-13">    </span>
<span id="cb9-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if in tab_measures() there weren't all columns built, we have to remove them here:</span></span>
<span id="cb9-15">    cols_to_remove <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(cols_to_remove, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(res))</span>
<span id="cb9-16">    res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-17">      dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>i_track, .data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks, .data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>i_note) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-18">      dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>i_track) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-19">      dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> .data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> {</span>
<span id="cb9-20">        .[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb9-21">        .</span>
<span id="cb9-22">      }) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-23">      dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-24">      dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-!!</span>cols_to_remove)</span>
<span id="cb9-25">  }</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load system midi file to start</span></span>
<span id="cb10-2">midi_file_string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"extdata"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_midi_file.mid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pyramidi"</span>)</span>
<span id="cb10-3"></span>
<span id="cb10-4">mfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MidiFramer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span>(midi_file_string)</span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set tempo</span></span>
<span id="cb10-7">BPM_to_microsecond_tempo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(BPM) {</span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>BPM)</span>
<span id="cb10-9">}</span>
<span id="cb10-10"></span>
<span id="cb10-11">midi_tempo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BPM_to_microsecond_tempo</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>)</span>
<span id="cb10-12"></span>
<span id="cb10-13">mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"set_tempo"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> midi_tempo),</span>
<span id="cb10-15">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clocks_per_click =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_signature"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>),</span>
<span id="cb10-16">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#keep the first track</span></span>
<span id="cb10-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(i_track <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-19"></span>
<span id="cb10-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#View(mfr$df_meta)</span></span>
<span id="cb10-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mfr$ticks_per_beat</span></span>
<span id="cb10-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#View(mfr$df_notes_wide)</span></span>
<span id="cb10-23"></span>
<span id="cb10-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set some timing params</span></span>
<span id="cb10-25">num_bars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-26">n_beats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> num_bars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb10-27">smallest_note_per_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb10-28">max_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> num_bars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>smallest_note_per_bar</span>
<span id="cb10-29"></span>
<span id="cb10-30">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">960</span>L</span>
<span id="cb10-31">mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">960</span>L</span>
<span id="cb10-32"></span>
<span id="cb10-33"></span>
<span id="cb10-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct a beat with hihats</span></span>
<span id="cb10-35">drum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb10-36">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb10-37">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_note =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>max_steps,</span>
<span id="cb10-38">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kick =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb10-39">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">snare =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb10-40">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hihat_closed =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb10-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb10-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">channel =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,</span>
<span id="cb10-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">velocity_note_on =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb10-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">velocity_note_off =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb10-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_note_on =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(max_steps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb10-46">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_note_off =</span> b_note_on <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb10-47">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kick =</span> kick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>,</span>
<span id="cb10-49">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">snare =</span> snare<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>,</span>
<span id="cb10-50">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hihat_closed =</span> hihat_closed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kick"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snare"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hihat_closed"</span>), </span>
<span id="cb10-52">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"note"</span>,</span>
<span id="cb10-53">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_drop_na =</span> T) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_note_on =</span> b_note_on<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb10-55">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b_note_off =</span> b_note_off<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb10-56"></span>
<span id="cb10-57">drum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>i_note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(drum)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb10-58"></span>
<span id="cb10-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># helper function</span></span>
<span id="cb10-60">beats_to_ticks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(notes_wide) {</span>
<span id="cb10-61">  notes_wide <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-62">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb10-63">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks_note_on  =</span> b_note_on  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ticks_per_beat,</span>
<span id="cb10-64">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks_note_off =</span> b_note_off <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ticks_per_beat</span>
<span id="cb10-65">    )</span>
<span id="cb10-66">}</span>
<span id="cb10-67"></span>
<span id="cb10-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pass the tibble back to the midi df</span></span>
<span id="cb10-69">mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_notes_wide</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">beats_to_ticks</span>(drum))</span>
<span id="cb10-70"></span>
<span id="cb10-71">df_notes_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_long_notes</span>(mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_notes_wide)</span>
<span id="cb10-72">df_not_notes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_not_notes</span>
<span id="cb10-73"></span>
<span id="cb10-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do pyramidi stuff to get the tibble back into the format it needs to be</span></span>
<span id="cb10-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mfr$df_notes_long &lt;- pivot_long_notes(mfr$df_notes_wide)</span></span>
<span id="cb10-76"></span>
<span id="cb10-77">df_meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-78">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_of_track"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df_notes_long<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>ticks_per_beat),</span>
<span id="cb10-79">                           type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_of_track"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb10-80"></span>
<span id="cb10-81"></span>
<span id="cb10-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mfr$df_meta &lt;- mfr$df_meta %&gt;%</span></span>
<span id="cb10-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  mutate(ticks = case_when(type == "end_of_track" ~ (max(mfr$df_notes_long$ticks)+ticks_per_beat)))</span></span>
<span id="cb10-84"></span>
<span id="cb10-85">df_midi_out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge_midi_frames_matt</span>(df_meta, df_notes_long, df_not_notes)</span>
<span id="cb10-86"></span>
<span id="cb10-87">dfc2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_midi_out <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-88">        miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest_midi</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repair_reticulate_conversion =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb10-89"></span>
<span id="cb10-90"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#########</span></span>
<span id="cb10-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounce </span></span>
<span id="cb10-92"></span>
<span id="cb10-93">track_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"try_Write"</span></span>
<span id="cb10-94"></span>
<span id="cb10-95">wav_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>)</span>
<span id="cb10-96">midi_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mid"</span>)</span>
<span id="cb10-97">mp3_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(track_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>)</span>
<span id="cb10-98"></span>
<span id="cb10-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write the midi file to disk</span></span>
<span id="cb10-100">miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_midi</span>(dfc2, ticks_per_beat, midi_name)</span>
<span id="cb10-101"></span>
<span id="cb10-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># synthesize midi file to wav with fluid synth</span></span>
<span id="cb10-103">system_command <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fluidsynth -F {wav_name} ~/Library/Audio/Sounds/Banks/FluidR3_GM.sf2 {midi_name}'</span>)</span>
<span id="cb10-104"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(system_command)</span>
<span id="cb10-105"></span>
<span id="cb10-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert wav to mp3</span></span>
<span id="cb10-107">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(wav_name,mp3_name)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "/Users/mattcrump/Github/homophony.github.io/blog/32_1_30_24_R_synth/try_Write.mp3"</code></pre>
</div>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean up and delete wav</span></span>
<span id="cb12-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(wav_name)){</span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(wav_name)</span>
<span id="cb12-4">}</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p><audio controls=""> <source src="try_Write.mp3" type="audio/wav"> </audio></p>
<p>This works sort of. MIDI fried my brain here. For some reason the file has extra bars of silence, can’t figure out why right now. I’m missing something here about how midi time works.</p>
<ul>
<li>loaded better in musescore.</li>
<li>musescore shows two bars, but it plays through 4 bars…not sure what is going on.</li>
</ul>
</section>
<section id="piano-keyboard-plot-with-ggplot2" class="level2">
<h2 class="anchored" data-anchor-id="piano-keyboard-plot-with-ggplot2">Piano keyboard plot with ggplot2</h2>
<p>Neat, this is from <a href="https://urswilke.github.io/pyramidi/reference/piano_keys_coordinates.html">pyramidi</a>.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb14-2"></span>
<span id="cb14-3">piano_keys_coordinates <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot white keys first that they don't cover half of the black keys:</span></span>
<span id="cb14-5">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(layer) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb14-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> ymin,</span>
<span id="cb14-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> ymax,</span>
<span id="cb14-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> xmin,</span>
<span id="cb14-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> xmax,</span>
<span id="cb14-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(layer)</span>
<span id="cb14-12">  )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffffdd"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#113300"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/32_1_30_24_R_synth/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Let’s try plotting a chord, C7. Cool!</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get midi notes from table look up</span></span>
<span id="cb15-2">note_numbers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> midi_defs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(note_name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb4"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(note)</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb15-7">piano_keys_coordinates <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make black keys 3rd order for printing</span></span>
<span id="cb15-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(layer <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb15-10">                           layer <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set played keys to layer 2</span></span>
<span id="cb15-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(midi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> note_numbers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb15-13">                           midi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> note_numbers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> layer)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot white keys first that they don't cover half of the black keys:</span></span>
<span id="cb15-15">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(layer) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb15-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> ymin,</span>
<span id="cb15-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> ymax,</span>
<span id="cb15-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> xmin,</span>
<span id="cb15-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> xmax,</span>
<span id="cb15-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(layer)</span>
<span id="cb15-22">  )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffffdd"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#113300"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/32_1_30_24_R_synth/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="miditapyr" class="level2">
<h2 class="anchored" data-anchor-id="miditapyr">miditapyr</h2>
<p><a href="https://miditapyr.readthedocs.io/en/latest/notebooks/midi_frame_usage.html" class="uri">https://miditapyr.readthedocs.io/en/latest/notebooks/midi_frame_usage.html</a></p>
<p>Learning more about the miditapyr workflow.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb16-2">test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ableton.mid"</span>)</span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#View(test_midi$midi_frame_unnested$df)</span></span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modify something</span></span>
<span id="cb16-7">mod_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">note =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(note <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span>,</span>
<span id="cb16-9">                          <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> note))</span>
<span id="cb16-10"></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb16-12">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(mod_df)</span>
<span id="cb16-13"></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb16-15"></span>
<span id="cb16-16">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ableton2.mid"</span>)</span></code></pre></div>
</details>
</div>
<p>I made a 1 bar drum loop in ableton, using the clip view. Apparently this kind of midi file does not contain the meta set_tempo message…</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import midi using miditapyr</span></span>
<span id="cb17-2">test_midi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFrames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ableton.mid"</span>)</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import using mido</span></span>
<span id="cb17-5">mido_import <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mido<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MidiFile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ableton.mid"</span>)</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to R dataframe</span></span>
<span id="cb17-8">dfc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frame_midi</span>(mido_import)</span>
<span id="cb17-9">ticks_per_beat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mido_import<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ticks_per_beat</span>
<span id="cb17-10"></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest the dataframe</span></span>
<span id="cb17-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb17-13"></span>
<span id="cb17-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add set_tempo message</span></span>
<span id="cb17-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># missing from ableton midi clip</span></span>
<span id="cb17-16"></span>
<span id="cb17-17">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(</span>
<span id="cb17-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb17-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb17-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb17-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"set_tempo"</span>,</span>
<span id="cb17-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500000</span>,</span>
<span id="cb17-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.before =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb17-26">  )</span></code></pre></div>
</details>
</div>
<p>Before I go on, I need to do some timing tests to make sure I understand a few things.</p>
<p>The beat is 1 bar. There are 4 beats per bar. The hi hats are in 16th notes, and there are 16 hi hats. The tempo is set to 120. What happens if I play with the time column.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reload df</span></span>
<span id="cb18-2">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pyramidi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>miditapyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_midi</span>(dfc)</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add set_tempo message</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># missing from ableton midi clip</span></span>
<span id="cb18-6"></span>
<span id="cb18-7">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NaN</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_row</span>(</span>
<span id="cb18-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">i_track =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb18-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb18-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb18-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"set_tempo"</span>,</span>
<span id="cb18-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tempo =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500000</span>,</span>
<span id="cb18-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.before =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb18-16">  )</span>
<span id="cb18-17"></span>
<span id="cb18-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># futz with the time column</span></span>
<span id="cb18-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># behaves as expected, yah!</span></span>
<span id="cb18-20">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb18-22"></span>
<span id="cb18-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update df</span></span>
<span id="cb18-24">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>midi_frame_unnested<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_unnested_mf</span>(df)</span>
<span id="cb18-25"></span>
<span id="cb18-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write midi file</span></span>
<span id="cb18-27"></span>
<span id="cb18-28">test_midi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ableton2.mid"</span>)</span></code></pre></div>
</details>
</div>
<p>The pyramidi package has a <code>tab_measures()</code> function that adds additional timing information, for later use in composition and modification.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add more time info</span></span>
<span id="cb19-2"></span>
<span id="cb19-3">dfm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tab_measures</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks_per_beat =</span> ticks_per_beat)</span></code></pre></div>
</details>
</div>


</section>

 ]]></description>
  <category>midi</category>
  <category>fluidsynth</category>
  <category>rstats</category>
  <guid>https://homophony.quest/blog/32_1_30_24_R_synth/</guid>
  <pubDate>Tue, 30 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/32_1_30_24_R_synth/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>A sphere of fifths</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/31_1_30_24_sphere/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"piano chord. 3d sphere. piano sphere. retro. 80s cartoon."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/31_1_30_24_sphere/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>piano chord. 3d sphere. piano sphere. retro. 80s cartoon. - Dreamshaper v7</p>
</div></div><p>My previous graphs of chord space have been 2-dimensional. I haven’t looked at the eigendecomposition of the similarity matrix, so I’m not sure how many “meaningful” dimensions there are here. Nevertheless, there are more dimensions than implied by the 2d graph. I’ve been meaning to use MDS to create a 3d plot, and that’s what I’m doing here, hopefully with plotly so it can be spun around interactively in the browser.</p>
<section id="chord-sphere" class="level2">
<h2 class="anchored" data-anchor-id="chord-sphere">Chord sphere</h2>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-processing to get the chord vectors</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load chord vectors</span></span>
<span id="cb2-5">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb2-8">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb2-14">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb2-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb2-21"></span>
<span id="cb2-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb2-24">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb2-25"></span>
<span id="cb2-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb2-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb2-28">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb2-29"></span>
<span id="cb2-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb2-31">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb2-33"></span>
<span id="cb2-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb2-35">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb2-36"></span>
<span id="cb2-37">  }</span>
<span id="cb2-38">}</span>
<span id="cb2-39"></span>
<span id="cb2-40">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(c_chord_excel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)),</span>
<span id="cb2-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(keys, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(c_chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb2-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix),</span>
<span id="cb2-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb2-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">database_chord =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-46">)</span>
<span id="cb2-47"></span>
<span id="cb2-48">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb2-49"></span>
<span id="cb2-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find repeats and build synonym list</span></span>
<span id="cb2-51">repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-52"></span>
<span id="cb2-53">first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-54"></span>
<span id="cb2-55"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb2-56">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the current row</span></span>
<span id="cb2-57">  evaluate_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order[i,]</span>
<span id="cb2-58"></span>
<span id="cb2-59">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't count the current item as a repeat</span></span>
<span id="cb2-60">  evaluate_row[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-61"></span>
<span id="cb2-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeats are the ids for any other 1s found</span></span>
<span id="cb2-63">  repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(evaluate_row <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> )</span>
<span id="cb2-64"></span>
<span id="cb2-65">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-66">  }</span>
<span id="cb2-67"></span>
<span id="cb2-68">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#add to list of repeat items</span></span>
<span id="cb2-70">    repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(repeat_indices,repeats)</span>
<span id="cb2-71"></span>
<span id="cb2-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add synonyms</span></span>
<span id="cb2-73">    chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>synonyms[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix)[repeats])</span>
<span id="cb2-74">  }</span>
<span id="cb2-75"></span>
<span id="cb2-76">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> first_occurrence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> repeat_indices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-78">      first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(first_occurrence,i)</span>
<span id="cb2-79">      chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>database_chord[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-80">    }</span>
<span id="cb2-81">  }</span>
<span id="cb2-82">}</span>
<span id="cb2-83"></span>
<span id="cb2-84">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-85">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_notes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(chord_matrix),</span>
<span id="cb2-86">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-87"></span>
<span id="cb2-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep only unique chord, recompute similarities</span></span>
<span id="cb2-89">chord_matrix_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[first_occurrence,]</span>
<span id="cb2-90">first_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix_no_repeats))</span>
<span id="cb2-91">second_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order_no_repeats)</span>
<span id="cb2-92"></span>
<span id="cb2-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove scales and individual notes</span></span>
<span id="cb2-94">only_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-95">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,</span>
<span id="cb2-96">         type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span>,</span>
<span id="cb2-97">         database_chord <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-98"></span>
<span id="cb2-99">first_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-100">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span>
<span id="cb2-101">second_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> second_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-102">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly)</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(bslib)</span>
<span id="cb3-5"></span>
<span id="cb3-6">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdscale</span>((first_order<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-7">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(mds_first_order) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bold_me =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb3-10">                             type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-12">         num_notes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb3-13"></span>
<span id="cb3-14">fig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_ly</span>(mds_first_order, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>V1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>V2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>V3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>chord_names)</span>
<span id="cb3-15"></span>
<span id="cb3-16">fig <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-17">  bslib<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="card bslib-card bslib-mb-spacing html-fill-item html-fill-container" data-bslib-card-init="" data-full-screen="false" data-require-bs-caller="card()" data-require-bs-version="5">
<div class="card-body bslib-gap-spacing html-fill-item html-fill-container" style="margin-top:auto;margin-bottom:auto;flex:1 1 auto;">
<div class="plotly html-widget html-fill-item" id="htmlwidget-de33912c0fdf5ec41a96" style="width:100%;height:400px;"></div>
<script type="application/json" data-for="htmlwidget-de33912c0fdf5ec41a96">{"x":{"visdat":{"54061a76edf":["function () ","plotlyVisDat"]},"cur_data":"54061a76edf","attrs":{"54061a76edf":{"x":{},"y":{},"z":{},"mode":"text","text":{},"color":{},"alpha_stroke":1,"sizes":[10,100],"spans":[1,20]}},"layout":{"margin":{"b":40,"l":60,"t":25,"r":10},"scene":{"xaxis":{"title":"V1"},"yaxis":{"title":"V2"},"zaxis":{"title":"V3"}},"hovermode":"closest","showlegend":true},"source":"A","config":{"modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"data":[{"x":[3.6754507151208757e-17,0.14708745491499944,2.310398288195577e-16,-0.083329950699634697,-2.5015665961959773e-16,-0.0027557465110215188,-2.5927987832278584e-16,0.088103043669505512,1.4228623316157677e-16,-0.14984320142602062,1.0348382775257895e-16,0.17143299436914008,-4.6382732792241629e-17,-0.14708745491499894,3.2676534732010637e-16,0.083329950699635405,-2.9634973568447298e-16,0.0027557465110213258,-1.7391605169407509e-16,-0.088103043669504902,8.1947981723480366e-17,0.14984320142602078,4.1344338698695019e-17,-0.17143299436914014],"y":[2.5395671229765589e-16,-0.088103043669504694,-4.0743653974158643e-16,0.14984320142602048,1.9426178019816452e-16,-0.17143299436913959,3.5712314645985099e-17,0.14708745491499917,1.467384387851145e-16,-0.083329950699634753,-6.3248341696875314e-17,-0.0027557465110216515,2.5761640932521498e-16,0.088103043669505388,-3.628327072793328e-16,-0.14984320142602092,2.5653519637629417e-16,0.17143299436914058,-1.1749243843012779e-17,-0.14708745491499944,2.4998326408140813e-16,0.083329950699635544,-6.5631401592026472e-17,0.0027557465110214269],"z":[-0.46660535885451754,-0.46676964763402995,0.46660535885452337,0.46676964763403483,-0.46660535885451943,-0.46676964763403728,0.46660535885451138,0.46676964763403606,-0.46660535885450705,-0.46676964763403045,0.46660535885450966,0.46676964763402906,-0.46660535885451793,-0.46676964763403139,0.46660535885452314,0.46676964763403478,-0.46660535885451948,-0.46676964763403556,0.46660535885451127,0.4667696476340355,-0.46660535885450721,-0.46676964763403217,0.46660535885450993,0.46676964763402862],"mode":"text","text":["C7(b5)","C7(#5)","Db7(b5)","Db7(#5)","D7(b5)","D7(#5)","Eb7(b5)","Eb7(#5)","E7(b5)","E7(#5)","F7(b5)","F7(#5)","Gb7(b5)","Gb7(#5)","G7(b5)","G7(#5)","Ab7(b5)","Ab7(#5)","A7(b5)","A7(#5)","Bb7(b5)","Bb7(#5)","B7(b5)","B7(#5)"],"type":"scatter3d","name":"altered","marker":{"color":"rgba(102,194,165,1)","line":{"color":"rgba(102,194,165,1)"}},"textfont":{"color":"rgba(102,194,165,1)"},"error_y":{"color":"rgba(102,194,165,1)"},"error_x":{"color":"rgba(102,194,165,1)"},"line":{"color":"rgba(102,194,165,1)"},"frame":null},{"x":[-0.078756296866261968,0.22539282331616053,-0.31163552477872297,0.31437573904397703,-0.2328792279124608,0.088982915727817108,0.078756296866261899,-0.22539282331616003,0.31163552477872214,-0.31437573904397709,0.2328792279124608,-0.088982915727817372],"y":[-0.31437573904397714,0.23287922791246071,-0.088982915727816886,-0.07875629686626183,0.22539282331616048,-0.31163552477872275,0.31437573904397764,-0.23287922791246132,0.088982915727817413,0.078756296866261899,-0.22539282331616034,0.31163552477872303],"z":[-0.23533744406158788,0.23533744406160165,-0.23533744406160445,0.23533744406159637,-0.23533744406158597,0.23533744406158388,-0.23533744406159107,0.23533744406160073,-0.23533744406160312,0.23533744406159759,-0.23533744406158744,0.23533744406158286],"mode":"text","text":["C7","Db7","D7","Eb7","E7","F7","Gb7","G7","Ab7","A7","Bb7","B7"],"type":"scatter3d","name":"dominant 7th","marker":{"color":"rgba(252,141,98,1)","line":{"color":"rgba(252,141,98,1)"}},"textfont":{"color":"rgba(252,141,98,1)"},"error_y":{"color":"rgba(252,141,98,1)"},"error_x":{"color":"rgba(252,141,98,1)"},"line":{"color":"rgba(252,141,98,1)"},"frame":null},{"x":[0.30710991329191267,-0.22524002982548255,0.083017262264152514,0.081449913678699665,-0.22409265102776021,0.30668994350418277,-0.30710991329191273,0.22524002982548233,-0.083017262264152333,-0.0814499136787004,0.22409265102776021,-0.30668994350418216],"y":[-0.081449913678699748,0.2240926510277603,-0.30668994350418255,0.30710991329191295,-0.22524002982548266,0.083017262264152306,0.081449913678700331,-0.22409265102776058,0.30668994350418288,-0.30710991329191228,0.22524002982548288,-0.083017262264152625],"z":[-0.23126791479293088,0.23126791479293066,-0.23126791479292003,0.23126791479291117,-0.23126791479291284,0.23126791479292214,-0.23126791479292957,0.23126791479292957,-0.23126791479292078,0.231267914792912,-0.23126791479291223,0.23126791479292128],"mode":"text","text":["Cm7(b5)","Dbm7(b5)","Dm7(b5)","Ebm7(b5)","Em7(b5)","Fm7(b5)","Gbm7(b5)","Gm7(b5)","Abm7(b5)","Am7(b5)","Bbm7(b5)","Bm7(b5)"],"type":"scatter3d","name":"half-diminished 7th","marker":{"color":"rgba(141,160,203,1)","line":{"color":"rgba(141,160,203,1)"}},"textfont":{"color":"rgba(141,160,203,1)"},"error_y":{"color":"rgba(141,160,203,1)"},"error_x":{"color":"rgba(141,160,203,1)"},"line":{"color":"rgba(141,160,203,1)"},"frame":null},{"x":[0.0025821171599286416,0.20724033647752346,-0.36153290931667098,0.41895303106714138,-0.36411502647659971,0.211712694589617,-0.0025821171599297878,-0.20724033647752477,0.36153290931667176,-0.41895303106714143,0.36411502647660071,-0.21171269458961775],"y":[-0.41895303106714094,0.36411502647659982,-0.21171269458961658,0.0025821171599286351,0.20724033647752516,-0.36153290931667226,0.41895303106714205,-0.36411502647660055,0.21171269458961686,-0.0025821171599284803,-0.20724033647752474,0.36153290931667159],"z":[-0.28720274933164269,0.28720274933164047,-0.28720274933163148,0.28720274933162504,-0.28720274933162726,0.28720274933163892,-0.28720274933164402,0.28720274933164086,-0.28720274933162876,0.28720274933162465,-0.28720274933162937,0.28720274933163858],"mode":"text","text":["C note","Db note","D note","Eb note","E note","F note","Gb note","G note","Ab note","A note","Bb note","B note"],"type":"scatter3d","name":"key","marker":{"color":"rgba(231,138,195,1)","line":{"color":"rgba(231,138,195,1)"}},"textfont":{"color":"rgba(231,138,195,1)"},"error_y":{"color":"rgba(231,138,195,1)"},"error_x":{"color":"rgba(231,138,195,1)"},"line":{"color":"rgba(231,138,195,1)"},"frame":null},{"x":[-0.30612647646942281,-0.083452237587452294,-0.22476966460753986,0.31013171716858356,0.0019189792473506509,0.082787309036964032,-0.23103741470514574,0.080128468032368783,0.081377839133621122,0.090036823550089573,-0.14070555701207141,-0.22373786102656273,0.075089061764276696,0.16358070561981872,0.30614750374117033,-0.22009489361849363,-0.14262453625942229,-0.30652517006352648,0.30612647646942198,0.083452237587449796,0.22476966460754849,-0.31013171716858318,-0.0019189792473504751,-0.082787309036963824,0.23103741470514519,-0.080128468032368824,-0.081377839133620955,-0.090036823550089184,0.14070555701207177,0.22373786102656248,-0.075089061764276821,-0.16358070561981902,-0.3061475037411695,0.22009489361849369,0.1426245362594224,0.30652517006352692],"y":[-0.090036823550089726,0.14070555701207196,0.22373786102656271,-0.075089061764276765,-0.16358070561981922,-0.30614750374117011,0.22009489361849394,0.1426245362594224,0.3065251700635267,-0.30612647646942209,-0.083452237587450184,-0.22476966460754869,0.31013171716858362,0.0019189792473506039,0.082787309036964227,-0.23103741470514552,0.080128468032368727,0.081377839133620969,0.090036823550089462,-0.14070555701207163,-0.22373786102656215,0.075089061764276516,0.16358070561981891,0.30614750374116967,-0.22009489361849421,-0.1426245362594224,-0.30652517006352648,0.30612647646942209,0.083452237587450059,0.22476966460754896,-0.31013171716858368,-0.001918979247350188,-0.082787309036963699,0.23103741470514574,-0.080128468032368769,-0.081377839133621024],"z":[-0.0031765082125666646,-0.22858206717021129,-0.23366338815770893,0.0031765082125735063,0.22858206717021057,0.23366338815770929,-0.0031765082125747865,-0.22858206717021282,-0.23366338815770452,0.0031765082125716874,0.22858206717021498,0.23366338815770099,-0.0031765082125685684,-0.2285820671702169,-0.23366338815770377,0.0031765082125674651,0.22858206717021695,0.23366338815770837,-0.0031765082125688507,-0.2285820671702139,-0.23366338815770998,0.0031765082125716519,0.22858206717020974,0.23366338815770854,-0.0031765082125732075,-0.22858206717021004,-0.23366338815770363,0.0031765082125735935,0.22858206717021598,0.23366338815770238,-0.0031765082125709749,-0.22858206717021967,-0.23366338815770507,0.0031765082125657061,0.22858206717021598,0.23366338815770737],"mode":"text","text":["C∆7","C∆7(#5)","C∆7(b5)","Db∆7","Db∆7(#5)","Db∆7(b5)","D∆7","D∆7(#5)","D∆7(b5)","Eb∆7","Eb∆7(#5)","Eb∆7(b5)","E∆7","E∆7(#5)","E∆7(b5)","F∆7","F∆7(#5)","F∆7(b5)","Gb∆7","Gb∆7(#5)","Gb∆7(b5)","G∆7","G∆7(#5)","G∆7(b5)","Ab∆7","Ab∆7(#5)","Ab∆7(b5)","A∆7","A∆7(#5)","A∆7(b5)","Bb∆7","Bb∆7(#5)","Bb∆7(b5)","B∆7","B∆7(#5)","B∆7(b5)"],"type":"scatter3d","name":"major 7th","marker":{"color":"rgba(166,216,84,1)","line":{"color":"rgba(166,216,84,1)"}},"textfont":{"color":"rgba(166,216,84,1)"},"error_y":{"color":"rgba(166,216,84,1)"},"error_x":{"color":"rgba(166,216,84,1)"},"line":{"color":"rgba(166,216,84,1)"},"frame":null},{"x":[0.23063972089546339,-0.0043168916970113486,-0.22316264514546763,0.3908459314404259,-0.45380236604093199,0.39516282313743734,-0.23063972089546408,0.0043168916970110442,0.22316264514546821,-0.39084593144042545,0.45380236604093188,-0.39516282313743761],"y":[-0.39084593144042601,0.45380236604093194,-0.39516282313743756,0.23063972089546425,-0.0043168916970114822,-0.22316264514546777,0.3908459314404264,-0.4538023660409321,0.39516282313743795,-0.23063972089546386,0.0043168916970115767,0.22316264514546838],"z":[-0.0060266446147988102,0.0060266446148050917,-0.0060266446148009994,0.0060266446147916701,-0.0060266446147871173,0.0060266446147923649,-0.0060266446147985474,0.006026644614802578,-0.0060266446148004174,0.0060266446147934334,-0.0060266446147873619,0.0060266446147905313],"mode":"text","text":["Cm7","Dbm7","Dm7","Ebm7","Em7","Fm7","Gbm7","Gm7","Abm7","Am7","Bbm7","Bm7"],"type":"scatter3d","name":"minor 7th","marker":{"color":"rgba(255,217,47,1)","line":{"color":"rgba(255,217,47,1)"}},"textfont":{"color":"rgba(255,217,47,1)"},"error_y":{"color":"rgba(255,217,47,1)"},"error_x":{"color":"rgba(255,217,47,1)"},"line":{"color":"rgba(255,217,47,1)"},"frame":null},{"x":[-9.5643600089025745e-05,0.14388321796360926,0.28143481252864944,0.14432714586746706,-0.48736375071815358,-0.39386516751746647,0.56270396548252577,0.53786733560441236,-0.48726810711806434,-0.53774838548107629,0.28126915295387689,0.39354018973694532,9.5643600089042103e-05,-0.14388321796360948,-0.28143481252864938,-0.14432714586746689,0.48736375071815374,0.39386516751746653,-0.56270396548252544,-0.53786733560441213,0.48726810711806456,0.53774838548107617,-0.28126915295387672,-0.39354018973694549],"y":[-0.56270396548252677,-0.5378673356044128,0.48726810711806418,0.53774838548107595,-0.28126915295387639,-0.3935401897369451,-9.5643600089010322e-05,0.14388321796360945,0.28143481252864977,0.14432714586746709,-0.48736375071815402,-0.39386516751746631,0.56270396548252555,0.53786733560441224,-0.48726810711806556,-0.53774838548107595,0.28126915295387606,0.39354018973694538,9.5643600089340353e-05,-0.14388321796360934,-0.2814348125286496,-0.14432714586746698,0.48736375071815369,0.39386516751746675],"z":[0.14921488075522094,-0.0032884944208844791,-0.1492148807552198,0.0032884944208891793,0.14921488075521963,-0.0032884944208912358,-0.14921488075522038,0.0032884944208895106,0.14921488075522099,-0.0032884944208853256,-0.14921488075522008,0.0032884944208836763,0.14921488075522016,-0.0032884944208843069,-0.14921488075522046,0.0032884944208888354,0.14921488075522085,-0.003288494420891032,-0.14921488075522046,0.0032884944208897019,0.1492148807552198,-0.00328849442088547,-0.14921488075522019,0.0032884944208837891],"mode":"text","text":["Csus","C7sus","Dbsus","Db7sus","Dsus","D7sus","Ebsus","Eb7sus","Esus","E7sus","Fsus","F7sus","Gbsus","Gb7sus","Gsus","G7sus","Absus","Ab7sus","Asus","A7sus","Bbsus","Bb7sus","Bsus","B7sus"],"type":"scatter3d","name":"sus","marker":{"color":"rgba(229,196,148,1)","line":{"color":"rgba(229,196,148,1)"}},"textfont":{"color":"rgba(229,196,148,1)"},"error_y":{"color":"rgba(229,196,148,1)"},"error_x":{"color":"rgba(229,196,148,1)"},"line":{"color":"rgba(229,196,148,1)"},"frame":null},{"x":[-0.27748894596514906,0.10834808111969139,-0.39084593144042612,-0.0814499136787004,-0.37271792436994988,-0.057068476058306707,0.38250873715620487,0.095688501213411284,0.45380236604093144,0.22409265102776035,0.47839263083880434,0.24420999832557497,-0.38503562112840756,-0.27408542692143634,-0.39516282313743722,-0.30668994350418233,-0.45588241820939968,-0.36591564875789861,0.28439252136203697,0.3790413838287236,0.23063972089546395,0.30710991329191267,0.31121887977723922,0.3895744966076346,-0.10754667516325851,-0.38243350804112858,-0.0043168916970113295,-0.22524002982548236,-0.083164493839448766,-0.30884717269959255,-0.098116215794167655,0.28335288261531189,-0.22316264514546763,0.083017262264152514,-0.1671737510615649,0.14536449828205938,0.27748894596514889,-0.10834808111969232,0.39084593144042579,0.081449913678699581,0.37271792436995094,0.057068476058306616,-0.38250873715620459,-0.095688501213411353,-0.4538023660409321,-0.22409265102776035,-0.47839263083880429,-0.24420999832557455,0.38503562112840722,0.27408542692143667,0.39516282313743778,0.30668994350418277,0.45588241820939956,0.36591564875789923,-0.28439252136203691,-0.37904138382872271,-0.230639720895464,-0.30710991329191262,-0.311218879777239,-0.3895744966076341,0.10754667516325826,0.38243350804112802,0.0043168916970110381,0.22524002982548241,0.08316449383944903,0.30884717269959289,0.098116215794167683,-0.28335288261531233,0.22316264514546819,-0.0830172622641525,0.16717375106156507,-0.145364498282059],"y":[-0.28439252136203486,-0.3790413838287241,-0.23063972089546378,-0.30710991329191262,-0.31121887977723917,-0.38957449660763371,0.10754667516325812,0.38243350804112874,0.0043168916970113417,0.22524002982548297,0.083164493839448683,0.30884717269959244,0.098116215794168182,-0.28335288261531216,0.2231626451454681,-0.083017262264152569,0.16717375106156546,-0.14536449828205944,-0.27748894596514917,0.10834808111969238,-0.3908459314404259,-0.08144991367869979,-0.37271792436995127,-0.057068476058306367,0.3825087371562052,0.095688501213411062,0.45380236604093199,0.2240926510277601,0.47839263083880457,0.24420999832557422,-0.3850356211284075,-0.2740854269214365,-0.39516282313743711,-0.30668994350418272,-0.45588241820939984,-0.36591564875789917,0.28439252136203741,0.37904138382872321,0.2306397208954642,0.30710991329191284,0.3112188797772395,0.38957449660763399,-0.10754667516325857,-0.38243350804112858,-0.0043168916970116131,-0.22524002982548261,-0.083164493839448864,-0.30884717269959272,-0.098116215794167794,0.28335288261531211,-0.22316264514546791,0.083017262264152292,-0.16717375106156498,0.14536449828205955,0.27748894596514934,-0.10834808111969196,0.39084593144042645,0.081449913678700372,0.37271792436995099,0.057068476058306471,-0.38250873715620509,-0.095688501213411339,-0.45380236604093238,-0.22409265102776024,-0.47839263083880457,-0.24420999832557469,0.38503562112840761,0.27408542692143645,0.39516282313743795,0.30668994350418316,0.45588241820940023,0.36591564875789934],"z":[-0.14222073439920491,0.14013797480510698,0.0060266446147942453,0.23126791479291442,-0.23823988303501742,-0.0044122060977982124,0.14222073439921457,-0.14013797480510332,-0.0060266446147872951,-0.23126791479291187,0.23823988303502286,0.0044122060977991899,-0.14222073439921509,0.14013797480510984,0.0060266446147904332,0.23126791479292094,-0.2382398830350245,-0.0044122060977948427,0.14222073439920702,-0.14013797480511986,-0.0060266446147987304,-0.23126791479293077,0.2382398830350225,0.0044122060977915423,-0.14222073439919866,0.14013797480512094,0.0060266446148049138,0.23126791479293066,-0.23823988303501828,-0.0044122060977934054,0.14222073439919952,-0.14013797480511128,-0.0060266446148008945,-0.23126791479291997,0.23823988303501673,0.0044122060977991838,-0.14222073439920668,0.14013797480510509,0.0060266446147916085,0.23126791479291106,-0.23823988303501845,-0.0044122060978000147,0.14222073439921348,-0.14013797480510548,-0.00602664461478708,-0.23126791479291275,0.238239883035022,0.0044122060977971368,-0.14222073439921293,0.14013797480511131,0.0060266446147923215,0.23126791479292208,-0.23823988303502369,-0.0044122060977946648,0.14222073439920807,-0.14013797480511772,-0.0060266446147984815,-0.23126791479292955,0.23823988303502358,0.0044122060977935269,-0.14222073439920127,0.14013797480511947,0.0060266446148024211,0.2312679147929293,-0.23823988303501947,-0.0044122060977935338,0.1422207343991983,-0.14013797480511381,-0.0060266446148005423,-0.23126791479292069,0.23823988303501642,0.0044122060977980536],"mode":"text","text":["C major triad","C minor triad","C6","Cm6","C (add 9)","Cm (add 9)","Db major triad","Db minor triad","Db6","Dbm6","Db (add 9)","Dbm (add 9)","D major triad","D minor triad","D6","Dm6","D (add 9)","Dm (add 9)","Eb major triad","Eb minor triad","Eb6","Ebm6","Eb (add 9)","Ebm (add 9)","E major triad","E minor triad","E6","Em6","E (add 9)","Em (add 9)","F major triad","F minor triad","F6","Fm6","F (add 9)","Fm (add 9)","Gb major triad","Gb minor triad","Gb6","Gbm6","Gb (add 9)","Gbm (add 9)","G major triad","G minor triad","G6","Gm6","G (add 9)","Gm (add 9)","Ab major triad","Ab minor triad","Ab6","Abm6","Ab (add 9)","Abm (add 9)","A major triad","A minor triad","A6","Am6","A (add 9)","Am (add 9)","Bb major triad","Bb minor triad","Bb6","Bbm6","Bb (add 9)","Bbm (add 9)","B major triad","B minor triad","B6","Bm6","B (add 9)","Bm (add 9)"],"type":"scatter3d","name":"triads","marker":{"color":"rgba(179,179,179,1)","line":{"color":"rgba(179,179,179,1)"}},"textfont":{"color":"rgba(179,179,179,1)"},"error_y":{"color":"rgba(179,179,179,1)"},"error_x":{"color":"rgba(179,179,179,1)"},"line":{"color":"rgba(179,179,179,1)"},"frame":null}],"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
<bslib-tooltip placement="auto" bsoptions="[]" data-require-bs-version="5" data-require-bs-caller="tooltip()">
<template>Expand</template>
<span class="bslib-full-screen-enter badge rounded-pill"></span>
</bslib-tooltip>
<script data-bslib-card-init="">bslib.Card.initializeAllCards();</script>
</div>
</div>
</div>
<p>I took out a bunch of chords so this was easier to look at. The plotly graph should go full screen and has some controls for spinning the sphere around and zooming in etc. If you click the names in the legend you can hide or show the corresponding chords, which can make it easier to see how things shake out.</p>
<p>In terms of the circle of fifths, the new z dimension puts 6 of them up top, and 6 of them down below. Within the X-Y plane, there are two alternating circles of fifths (CDEGbAbBb, and FGABDbEb).</p>
<p>Neat to poke around here.</p>


</section>

 ]]></description>
  <category>chord similarity</category>
  <category>datavis</category>
  <category>circle of fifths</category>
  <category>music theory</category>
  <category>rstats</category>
  <guid>https://homophony.quest/blog/31_1_30_24_sphere/</guid>
  <pubDate>Tue, 30 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/31_1_30_24_sphere/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>C major scale analysis</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/29_1_29_24_cmajor/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Letter C. Brought to you by the letter C. C. Sesame Street. Muppets."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Letter C. Brought to you by the letter C. C. Sesame Street. Muppets. - Dreamshaper v7</p>
</div></div><p>I’ve been representing chords as vectors and plotting them in 2-dimensional space to visualize similarity relationships.</p>
<p>Some of the graphs in previous posts are very busy to look at, and it is difficult for me to appreciate what is going on. This post is about interpreting something very familiar, the C major scale, in terms of that similarity space.</p>
<p>In two dimensions, the multi-dimensional scaling algorithm positions notes in terms of the circle of fifths. So, this analysis is similar to what you would get thinking about the C major scale using the circle of fifths. The major difference is the idea of “vectors” that go in a particular direction.</p>
<p>Without further ado, here is a plot of all the notes, all of the notes in the C major scale, and the triad chords from the C major scale.</p>
<section id="c-major-scale-components-in-vector-space" class="level2">
<h2 class="anchored" data-anchor-id="c-major-scale-components-in-vector-space">C major scale components in vector space</h2>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-processing to get the chord vectors</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load chord vectors</span></span>
<span id="cb2-5">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb2-8">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb2-14">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb2-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb2-21"></span>
<span id="cb2-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb2-24">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb2-25"></span>
<span id="cb2-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb2-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb2-28">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb2-29"></span>
<span id="cb2-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb2-31">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb2-33"></span>
<span id="cb2-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb2-35">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb2-36"></span>
<span id="cb2-37">  }</span>
<span id="cb2-38">}</span>
<span id="cb2-39"></span>
<span id="cb2-40">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(c_chord_excel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)),</span>
<span id="cb2-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(keys, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(c_chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb2-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix),</span>
<span id="cb2-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb2-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">database_chord =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-46">)</span>
<span id="cb2-47"></span>
<span id="cb2-48">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb2-49"></span>
<span id="cb2-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find repeats and build synonym list</span></span>
<span id="cb2-51">repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-52"></span>
<span id="cb2-53">first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-54"></span>
<span id="cb2-55"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb2-56">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the current row</span></span>
<span id="cb2-57">  evaluate_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order[i,]</span>
<span id="cb2-58"></span>
<span id="cb2-59">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't count the current item as a repeat</span></span>
<span id="cb2-60">  evaluate_row[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-61"></span>
<span id="cb2-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeats are the ids for any other 1s found</span></span>
<span id="cb2-63">  repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(evaluate_row <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> )</span>
<span id="cb2-64"></span>
<span id="cb2-65">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-66">  }</span>
<span id="cb2-67"></span>
<span id="cb2-68">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#add to list of repeat items</span></span>
<span id="cb2-70">    repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(repeat_indices,repeats)</span>
<span id="cb2-71"></span>
<span id="cb2-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add synonyms</span></span>
<span id="cb2-73">    chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>synonyms[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix)[repeats])</span>
<span id="cb2-74">  }</span>
<span id="cb2-75"></span>
<span id="cb2-76">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> first_occurrence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> repeat_indices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-78">      first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(first_occurrence,i)</span>
<span id="cb2-79">      chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>database_chord[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-80">    }</span>
<span id="cb2-81">  }</span>
<span id="cb2-82">}</span>
<span id="cb2-83"></span>
<span id="cb2-84">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-85">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_notes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(chord_matrix),</span>
<span id="cb2-86">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-87"></span>
<span id="cb2-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep only unique chord, recompute similarities</span></span>
<span id="cb2-89">chord_matrix_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[first_occurrence,]</span>
<span id="cb2-90">first_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix_no_repeats))</span>
<span id="cb2-91">second_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order_no_repeats)</span>
<span id="cb2-92"></span>
<span id="cb2-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove scales and individual notes</span></span>
<span id="cb2-94">only_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-95">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,</span>
<span id="cb2-96">         type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span>,</span>
<span id="cb2-97">         database_chord <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-98"></span>
<span id="cb2-99">first_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-100">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span>
<span id="cb2-101">second_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> second_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-102">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb3-3">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdscale</span>((first_order<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))</span>
<span id="cb3-4">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(mds_first_order) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties)</span>
<span id="cb3-6"></span>
<span id="cb3-7">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mds_first_order <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(key,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bold_me =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(key <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-10">                             key <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>,</span>
<span id="cb3-12">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>,</span>
<span id="cb3-13">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>,</span>
<span id="cb3-14">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>,</span>
<span id="cb3-15">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>,</span>
<span id="cb3-16">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>,</span>
<span id="cb3-17">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>,</span>
<span id="cb3-18">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major scale"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">V1 =</span> V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-20">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">V2 =</span> V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line_V1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>,</span>
<span id="cb3-22">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>,</span>
<span id="cb3-23">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>,</span>
<span id="cb3-24">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>,</span>
<span id="cb3-25">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>,</span>
<span id="cb3-26">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>,</span>
<span id="cb3-27">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>,</span>
<span id="cb3-28">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major scale"</span>,</span>
<span id="cb3-29">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>,</span>
<span id="cb3-30">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>,</span>
<span id="cb3-31">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>,</span>
<span id="cb3-32">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>,</span>
<span id="cb3-33">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>,</span>
<span id="cb3-34">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>,</span>
<span id="cb3-35">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> V1),</span>
<span id="cb3-36">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line_V2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>,</span>
<span id="cb3-37">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>,</span>
<span id="cb3-38">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>,</span>
<span id="cb3-39">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>,</span>
<span id="cb3-40">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>,</span>
<span id="cb3-41">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>,</span>
<span id="cb3-42">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>,</span>
<span id="cb3-43">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major scale"</span>,</span>
<span id="cb3-44">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>,</span>
<span id="cb3-45">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>,</span>
<span id="cb3-46">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>,</span>
<span id="cb3-47">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>,</span>
<span id="cb3-48">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>,</span>
<span id="cb3-49">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>,</span>
<span id="cb3-50">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> V2))</span>
<span id="cb3-51"></span>
<span id="cb3-52">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb3-53">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb3-57">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-58">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-59">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> line_V1,</span>
<span id="cb3-60">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> line_V2,</span>
<span id="cb3-61">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> type))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-62">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() </span>
<span id="cb3-63">p1</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
<p>It’s morning coffee time and my goal is to make observations about the C major scale from these kinds of graphs. A big theme for this analysis is to better understand “where I am going” in chord space when playing different chords or notes. Direction is denoted in the graph using lines and arrows.</p>
<p>The graph shows the notes in C in the order of the circle of fifths = F C G D A E B (red lines). This is different from the order of white keys on the keyboard = C D E F G A B.</p>
<p>The 7 notes in the scale are symmetrical about the D note. The green arrow shows the vector for the C major scale, which is created by adding all of the notes together. It points in the same direction as the D note. The C major scale (Ionian) is the same as D Dorian. D Dorian has symmetrical 5th components, there are three anti-clockwise (GCF) and three clockwise (AEB). The C major scale is asymmetrical, there is only one anti-clockwise 5th (F), and 5 clockwise 5ths (GDAEB).</p>
<p>In some sense the D dorian scale is comfortably balanced and locked into the D direction. The C scale is more off-kilter, like it is in the middle of taking step, it’s going somewhere.</p>
</section>
<section id="c-major-triad" class="level2">
<h2 class="anchored" data-anchor-id="c-major-triad">C major triad</h2>
<p>The C major triad has C, E, and G. The vector for the triad is in red. The triad vector is the average of the component vectors for C, E, and G. It’s closer to C and G, than E. The major triad is asymmetrical. It’s direction lands between a G note and a D note. C and G form a perfect fifth, and as a simultaneous pair, their potential for circular motion is ambiguous. Adding the E applies a torque in the clock-wise direction. Similarly, with CE or GE, adding the missing note in the triad twists anti-clockwise.</p>
<p>It’s been a while since I took physics statics and dynamics…but, considering C major triad as a static body, with the elements, C, E, and G, as force vectors, does C major triad have an inherent spin? If we take the D note as the center position, the C major scale is a weighted a bit anti-clockwise from D. If we arranged everything so that D was 90 degrees, and then set up the triad, it looks like it would fall to the left. The curvy arrows represents the direction of spin.</p>
<p>Playing more E (saying scattering Es around the piano) would add to the weight of the E vector, and apply force consistent with spinning the other way.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">Cmajor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb4-2">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-6">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-7">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-8">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-9">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-11">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-12">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-13">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-14">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-16">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-17">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-18">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-19">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-21">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb4-22">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-23">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-24">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb4-25">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb4-27">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb4-28">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-29">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-30">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-31">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb4-32">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-36">Cmajor</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="d-minor-triad" class="level2">
<h2 class="anchored" data-anchor-id="d-minor-triad">D minor triad</h2>
<p>The D minor triad has D, F, and A. The vector for the triad is in red. Its location is right on top of the C major triad, but it gets there from different elements.</p>
<p>Interesting that C major triad and D minor triads go in the same direction. The D minor notes are also the 9th, 11th, and 13th, notes in C extended chords. Perhaps more fittingly, the C major notes are the 7th, 9th, and 11th extensions of D minor.</p>
<p>If the center point is the G note, the D minor triad appears biased to spin clock-wise.</p>
<p>The overall pattern is similar to a major chord, 2 contiguous fifths (DA), and one that is 3 away (F). In both the major and the minor, the outlying fifth is the 3rd. However, in the minor chord, the root (D) is closer to the third, than in the major chord.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">Dminor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb5-2">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb5-6">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-7">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-8">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb5-9">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb5-11">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-12">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-13">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb5-14">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb5-16">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-17">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-18">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb5-19">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb5-21">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb5-22">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-23">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-24">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb5-25">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb5-27">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb5-28">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-29">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-30">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-31">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb5-32">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb5-36">Dminor</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="960"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="g-major-and-a-minor" class="level2">
<h2 class="anchored" data-anchor-id="g-major-and-a-minor">G major and A minor</h2>
<p>The patterns for G major and A minor are similar to C major and D minor. The G major and A minor triads point in the same direction as each other.</p>
<p>The G major triad is notionally centered on A, and wants to spin anti-clockwise.</p>
<p>The A minor triad it notionally centered on D, but it wants to spin clockwise.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">Gmajor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb6-2">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-6">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-7">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-8">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb6-9">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-11">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-12">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-13">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb6-14">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-16">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-17">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-18">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb6-19">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-21">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb6-22">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-23">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-24">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb6-25">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-27">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb6-28">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb6-29">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-30">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-31">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb6-32">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb6-36"></span>
<span id="cb6-37"></span>
<span id="cb6-38">Aminor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb6-39">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-43">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-44">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-45">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb6-46">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-48">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-49">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-50">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb6-51">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-53">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-54">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-55">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb6-56">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-58">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb6-59">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-60">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-61">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb6-62">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb6-64">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb6-65">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb6-66">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-67">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-68">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb6-69">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-70">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-71">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-72">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb6-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Aminor</span></span>
<span id="cb6-74"></span>
<span id="cb6-75"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb6-76"></span>
<span id="cb6-77">Gmajor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Aminor</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="1920"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="f-major-e-minor-and-b-dim" class="level2">
<h2 class="anchored" data-anchor-id="f-major-e-minor-and-b-dim">F major, E minor and B dim</h2>
<p>There’s only three left. F major wants to spin anti-clockwise. E minor wants to spin clockwise. In terms of the other chords, F major and E minor are further from the notional center (D note), and they have a weaker orbit, compared to Cmajor/Dminor and Gmajor/Aminor, which are both closer to the center.</p>
<p>The last chord is B diminished. It is symmetrical about the center (D note). It doesn’t have a spin, but is rather precariously balanced. The D note is keeping it centered, the other two could tip easily.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">Fmajor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb7-2">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-6">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-7">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-8">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-9">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-11">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-12">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-13">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-14">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-16">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-17">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-18">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-19">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-21">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb7-22">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-23">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-24">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-25">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-27">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb7-28">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb7-29">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-30">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-31">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb7-32">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F major triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb7-36"></span>
<span id="cb7-37"></span>
<span id="cb7-38">Eminor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb7-39">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-43">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-44">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-45">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-46">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-48">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-49">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-50">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-51">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-53">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-54">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-55">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-56">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-58">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb7-59">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-60">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-61">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-62">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-64">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb7-65">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curvature =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb7-66">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-67">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-68">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb7-69">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-70">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-71">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E minor triad"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-72">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb7-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Aminor</span></span>
<span id="cb7-74"></span>
<span id="cb7-75">Bdim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb7-76">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-77">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-78">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-79">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-80">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-81">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-82">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-83">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-84">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-85">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-86">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-87">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-88">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-90">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-91">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-92">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-93">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-94">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb7-95">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb7-96">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-97">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-98">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V1),</span>
<span id="cb7-99">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(mds_first_order,chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>V2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-100">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-101">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bdim"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-102">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb7-103"></span>
<span id="cb7-104"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb7-105"></span>
<span id="cb7-106">Fmajor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Eminor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Bdim</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="2880"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="wanting-to-go-somewhere" class="level2">
<h2 class="anchored" data-anchor-id="wanting-to-go-somewhere">Wanting to go somewhere</h2>
<p>Sequences of chords can produce feelings of tension and resolution. For some sequences it really feels like a particular chord “wants to go” to the resolving chord.</p>
<p>The above analysis of triad vectors puts a “spin” on each chord vector, showing which way the chord may want to spin in terms of the circle of fifths. Perhaps this is useful in terms of thinking about movement between chords.</p>
</section>
<section id="ii-v-i" class="level2">
<h2 class="anchored" data-anchor-id="ii-v-i">ii-V-i</h2>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">Dminor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Gmajor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Cmajor</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="2880"></p>
</figure>
</div>
</div>
</div>
<p>ii-V-i progressions are super common. The progression is consistent with the spin of these chords. D minor wants to go clockwise, and is met by a G major triad. G major triad wants to anti-clockwise, is met by a C major triad.</p>
<p>ii-VI is an option too, but the A minor wants to keep spinning clockwise to E minor, and E minor wants to keep spinning in the same direction. However, there are no more chords in the clockwise direction, and spinning out more would quickly deteriorate the key center. E minor doesn’t “want to go” to F major, but going there is a good option for restoring balance to the center.</p>
</section>
<section id="c-chord-charts" class="level2">
<h2 class="anchored" data-anchor-id="c-chord-charts">C chord charts</h2>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">(Cmajor <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Fmajor <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Gmajor) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (Dminor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Eminor <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Aminor) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (Bdim <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_spacer</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_spacer</span>())</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="2880"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="general-conclusions" class="level2">
<h2 class="anchored" data-anchor-id="general-conclusions">General conclusions</h2>
<p>Here are some of my general conclusions.</p>
<p>A scale of notes, like C major scale, is a compound vector that has a direction in chord space. For example, C major happens to be centered on the D note, and goes in that direction. The triads for this scale reinforce the direction of the scale, as their individual chord vectors are arranged symmetrically about the same key center.</p>
<p>Individual chords may have natural rotational motion with respect to the key center of the scale. The major chords want to spin anti-clockwise, and the minor chords want to spin clockwise. The diminished chord doesn’t have a spin.</p>
<p>The spin of an individual chord can suggest a chord-progression. For example, D minor spins toward G major. G major spins back toward C major. These, oscillations are also symmetrical about the key center.</p>
<p>The well-formedness of the key center can suggest a chord-progression. For example, E minor spins out of C major scale, but can be counter-balanced by F major triad.</p>
</section>
<section id="performance-vector-concept" class="level2">
<h2 class="anchored" data-anchor-id="performance-vector-concept">Performance vector concept</h2>
<p>This is a short digression. I’m thinking about applying these ideas to my playing. Let’s say I’m going to improvise in the C major scale using only the notes from the C major scale. And, let’s also say that I want my performance to maintain symmetry about the key center (D note).</p>
<p>From the chord vector space perspective, every time I play a note I am adding another feature into my “performance vector”. I’m thinking of this as a single vector that aggregates all the notes I play. If I played all the notes of the C major scale once, the performance vector would equal the “C major scale” vector shown in the first graph.</p>
<p>If I then started playing a lot more Es and As, I would add more E and A features into the vector, and in that moment the cumulative direction of the vector would tilt away from center, in the clockwise direction. If I wanted to re-balance, I would need too play notes on the anti-clockwise side of D. This would accumulate the features in the performance vector that are necessary to shift the direction back to center.</p>
<p>Overall, it seems interesting to think about how chord progressions and note choices in the context of improvisation add to the performance vector, and either keep it on target, spin it away from center (creating tension), or spin it back (creating resolution?) to center.</p>
<p>That’s it for now. Maybe I’ll add the 7th chords another day.</p>
<hr>
</section>
<section id="bar-blues-analysis" class="level2">
<h2 class="anchored" data-anchor-id="bar-blues-analysis">12-bar blues analysis</h2>
<p>This probably deserves it’s own post, but I want to quickly take a look at the 12 bar blues in terms of chord space analysis.</p>
<p>The 12-bar blues starting with C7 is: C7 (4 bars), F7 (2 bars), C7 (2 bars), G7, F7, C7, G7.</p>
<p>I (4), IV(2), I(2), V, VI, I, V</p>
<p>First, I’m curious what the performance vector for this series of chords looks like. I heart R indexing :)</p>
<p>Here are the chord vectors for the 12-bar blues:</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">blues_progression_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  chord_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb10-2">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F7'</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb10-3">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb10-4">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'G7'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'F7'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'G7'</span>),]</span>
<span id="cb10-5">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(blues_progression_matrix)</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: right;">C</th>
<th style="text-align: right;">Db</th>
<th style="text-align: right;">D</th>
<th style="text-align: right;">Eb</th>
<th style="text-align: right;">E</th>
<th style="text-align: right;">F</th>
<th style="text-align: right;">Gb</th>
<th style="text-align: right;">G</th>
<th style="text-align: right;">Ab</th>
<th style="text-align: right;">A</th>
<th style="text-align: right;">Bb</th>
<th style="text-align: right;">B</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">C7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">F7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">G7</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">F7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">G7</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>I’ll take the column sum to compute the performance vector.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">blues_performance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(blues_progression_matrix)</span>
<span id="cb11-2">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(blues_performance))</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: right;">C</th>
<th style="text-align: right;">Db</th>
<th style="text-align: right;">D</th>
<th style="text-align: right;">Eb</th>
<th style="text-align: right;">E</th>
<th style="text-align: right;">F</th>
<th style="text-align: right;">Gb</th>
<th style="text-align: right;">G</th>
<th style="text-align: right;">Ab</th>
<th style="text-align: right;">A</th>
<th style="text-align: right;">Bb</th>
<th style="text-align: right;">B</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">10</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">5</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">9</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">2</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Next, I’d like to project this vector into the chord space and see where it is heading.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row bind blues_performance</span></span>
<span id="cb12-2"></span>
<span id="cb12-3">chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,blues_performance)</span>
<span id="cb12-4">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_properties,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"performance"</span>,</span>
<span id="cb12-5">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb12-6">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blues_performance"</span>,</span>
<span id="cb12-7">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb12-8">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">database_chord =</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb12-9">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_notes=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb12-10">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">757</span>))</span>
<span id="cb12-11"></span>
<span id="cb12-12">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb12-13"></span>
<span id="cb12-14">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdscale</span>((first_order<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))</span>
<span id="cb12-15">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(mds_first_order) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties)</span>
<span id="cb12-17"></span>
<span id="cb12-18">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mds_first_order <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(key,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bold_me =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(key <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb12-21">                             key <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7"</span>,</span>
<span id="cb12-23">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F7"</span>,</span>
<span id="cb12-24">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>,</span>
<span id="cb12-25">                                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blues_performance"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">V1 =</span> V1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb12-27">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">V2 =</span> V2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line_V1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7"</span>,</span>
<span id="cb12-29">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F7"</span>,</span>
<span id="cb12-30">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>,</span>
<span id="cb12-31">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blues_performance"</span>,</span>
<span id="cb12-32">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>,</span>
<span id="cb12-33">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>,</span>
<span id="cb12-34">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb note"</span>,</span>
<span id="cb12-35">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>,</span>
<span id="cb12-36">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>,</span>
<span id="cb12-37">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>,</span>
<span id="cb12-38">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>,</span>
<span id="cb12-39">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb note"</span>,</span>
<span id="cb12-40">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> V1),</span>
<span id="cb12-41">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line_V2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(chord_names <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7"</span>,</span>
<span id="cb12-42">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F7"</span>,</span>
<span id="cb12-43">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>,</span>
<span id="cb12-44">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blues_performance"</span>,</span>
<span id="cb12-45">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C note"</span>,</span>
<span id="cb12-46">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D note"</span>,</span>
<span id="cb12-47">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb note"</span>,</span>
<span id="cb12-48">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E note"</span>,</span>
<span id="cb12-49">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F note"</span>,</span>
<span id="cb12-50">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G note"</span>,</span>
<span id="cb12-51">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A note"</span>,</span>
<span id="cb12-52">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb note"</span>,</span>
<span id="cb12-53">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B note"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> V2))</span>
<span id="cb12-54"></span>
<span id="cb12-55">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb12-56">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)),</span>
<span id="cb12-60">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb12-61">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb12-62">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> line_V1,</span>
<span id="cb12-63">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> line_V2,</span>
<span id="cb12-64">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> type))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-65">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-66">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>()</span>
<span id="cb12-67">p1</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/29_1_29_24_cmajor/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" width="1104"></p>
</figure>
</div>
</div>
</div>
<p>There are three chords are centered around C7 (middle). I didn’t draw the spin, but C7 (CEGBb) is loaded to spin anti-clockwise. And, that is what happens after four bars of C7, we take a spin anti-clockwise to F7.</p>
<p>In general, dominant 7th chords want to spin anti-clockwise. However, going to Bb7 from F7 would shift the center of the performance vector. The four bars of C7 at the beginning can be viewed as impressing C7 as the center into the performance vector. If F7 is a deviation for two bars, then it needs to be re-balanced. In 12 bar blues, we go back to C7 for 2 bars, which does some re-balancing. I haven’t plotted this stuff, but the performance vector would still be tilted off C7. There would be six C7s and two F7s in the performance vector, which slightly tilts toward F7. As a result, the last four bars add in G7 twice, and C7 and F7 once each. The G7 counterbalances the F7s, and helps hold the center on C7. Nevertheless, there is one extra F7, as a result the performance vector is slightly off from C7 in the F direction.</p>
<p>The very last G7 is a valiant attempt to rotate the performance vector back onto C7, but it doesn’t quite get there by itself. It could use some extra notes to strengthen the force of the rotation. But, it seems palpable what the G7 is trying to do to the performance vector. It doesn’t really matter that it doesn’t get the performance vector to C7 because the 12-bar blues repeats, and the next chord is…C7, which resolves the question if there was any doubt.</p>


</section>

 ]]></description>
  <category>chord similarity</category>
  <category>datavis</category>
  <category>circle of fifths</category>
  <category>music theory</category>
  <category>rstats</category>
  <category>C major scale</category>
  <category>movement</category>
  <guid>https://homophony.quest/blog/29_1_29_24_cmajor/</guid>
  <pubDate>Mon, 29 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/29_1_29_24_cmajor/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week of 1/28 - 2/3 daily practice post</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/28_1_28_24_weekly_practice/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"architecture drawing piano. constructing a piano. cartoon. retro 80s. blueprint."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/28_1_28_24_weekly_practice/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>architecture drawing piano. constructing a piano. cartoon. retro 80s. blueprint. - Dreamshaper v7</p>
</div></div><section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section">1/28</h2>
<p>I suspect practice this week will be inspired by circle of fifths symmetry (as discussed in some previous posts) and <a href="https://homophony.quest/blog/27_1_28_24_symmetry/">concepts of chords as vectors that go in a direction in chord space</a>.</p>
<p>Sus practice.</p>
<ul>
<li>Drone on a C note
<ul>
<li>add one note from each side of the circle of fifths (F and G)</li>
<li>Play the C sus chord in a droney way across the keyboard spattering Cs and Fs and Gs everywhere</li>
</ul></li>
<li>Drone around the Circle of fifths.
<ul>
<li>transition to the next sus chord going clockwise (start playing G with C and D around it, then start playing D with G and A around it)</li>
<li>do the same thing but going anti-clockwise</li>
<li>get used to the sus</li>
</ul></li>
</ul>
<p>Rotate the fifth pairs, keep the drone the same</p>
<ul>
<li>Drone on a C note
<ul>
<li>add the F G around the C note</li>
<li>keep the C note, but start moving the other notes around the circle of the fifths.</li>
<li>F G -&gt; C D -&gt; G A -&gt; D E -&gt; etc.</li>
</ul></li>
</ul>
<p>Keep the fifth pairs the same, rotate the drone</p>
<ul>
<li>Drone on a C, add the F and G.
<ul>
<li>keep playing F and G, but rotate C through the circle of fifths</li>
<li>CFG -&gt; FFG -&gt; BbFG -&gt; EbFG -&gt; etc.</li>
</ul></li>
</ul>
<p>Throughout these exercises, try to keep track of what the note relationships are in whichever scale is considered the center.</p>
<p>Practicing 5 note C chords that are constructed from rotations of neighboring 5ths.</p>
<p><img src="https://homophony.quest/blog/28_1_28_24_weekly_practice/images/Untitled - January 28, 2024 20.25.39.jpg" class="img-fluid"></p>
</section>
<section id="section-1" class="level2">
<h2 class="anchored" data-anchor-id="section-1">1/29</h2>
<p>I’m still on C from above.</p>
<p>Practicing being able transition between those chords and being able to “clock” how many fifths in the anti-clockwise or clockwise direction there are in a chord.</p>
<p>Also, started playing the first chord from above with all other notes as possible bass notes. It starts getting pretty hairy with A and E as bass notes.</p>


</section>

 ]]></description>
  <category>piano practice</category>
  <guid>https://homophony.quest/blog/28_1_28_24_weekly_practice/</guid>
  <pubDate>Sun, 28 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/28_1_28_24_weekly_practice/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Symmetry, high-dimensional chord space, the circle of fifths, and Sunday morning</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/27_1_28_24_symmetry/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"synthesizer floating in space. symmetrical geometry. 80s cartoon. retro."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/27_1_28_24_symmetry/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>synthesizer floating in space. symmetrical geometry. 80s cartoon. retro. - Dreamshaper v7</p>
</div></div><p>In the last few posts I’ve been making scattered notes about a chord vector space, which represents the elements of individual chords or scales as feature vectors. The feature vectors can then be analyzed in terms of their similarity relationships in high-dimensional geometric space. Although I use similar approaches in some of my cognition lab research, I’m mostly messing about in this context out of curiosity, and with some hope that this exercise may bring usable musical perspectives that I didn’t have before.</p>
<p>Yesterday, I managed to eke out a musical idea from this analysis that I had fun playing on the piano, and this post will attempt to describe how this idea came from the analysis, and also what the idea is.</p>
<section id="visualizing-chord-space" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-chord-space">Visualizing chord space</h2>
<p>Skipping over some details, I computed the cosine similarity between every chord in my database and every other chord. This results in a 756 x756 similarity matrix. With a few tricks (multi-dimensional scaling in this case) it’s possible to visualize the similarity relationships between chords in a 2-dimensional space. If I add all the chords into the visualization it get’s too hard to read. Here’s an example with several chords taken out to make it easier to look at it.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-processing to get the chord vectors</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load chord vectors</span></span>
<span id="cb2-5">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb2-8">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb2-14">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb2-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb2-21"></span>
<span id="cb2-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb2-24">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb2-25"></span>
<span id="cb2-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb2-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb2-28">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb2-29"></span>
<span id="cb2-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb2-31">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb2-33"></span>
<span id="cb2-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb2-35">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb2-36"></span>
<span id="cb2-37">  }</span>
<span id="cb2-38">}</span>
<span id="cb2-39"></span>
<span id="cb2-40">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(c_chord_excel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)),</span>
<span id="cb2-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(keys, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(c_chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb2-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix),</span>
<span id="cb2-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb2-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">database_chord =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-46">)</span>
<span id="cb2-47"></span>
<span id="cb2-48">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb2-49"></span>
<span id="cb2-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find repeats and build synonym list</span></span>
<span id="cb2-51">repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-52"></span>
<span id="cb2-53">first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-54"></span>
<span id="cb2-55"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb2-56">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the current row</span></span>
<span id="cb2-57">  evaluate_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order[i,]</span>
<span id="cb2-58"></span>
<span id="cb2-59">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't count the current item as a repeat</span></span>
<span id="cb2-60">  evaluate_row[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-61"></span>
<span id="cb2-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeats are the ids for any other 1s found</span></span>
<span id="cb2-63">  repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(evaluate_row <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> )</span>
<span id="cb2-64"></span>
<span id="cb2-65">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-66">  }</span>
<span id="cb2-67"></span>
<span id="cb2-68">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#add to list of repeat items</span></span>
<span id="cb2-70">    repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(repeat_indices,repeats)</span>
<span id="cb2-71"></span>
<span id="cb2-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add synonyms</span></span>
<span id="cb2-73">    chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>synonyms[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix)[repeats])</span>
<span id="cb2-74">  }</span>
<span id="cb2-75"></span>
<span id="cb2-76">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> first_occurrence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> repeat_indices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-78">      first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(first_occurrence,i)</span>
<span id="cb2-79">      chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>database_chord[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-80">    }</span>
<span id="cb2-81">  }</span>
<span id="cb2-82">}</span>
<span id="cb2-83"></span>
<span id="cb2-84">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-85">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_notes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(chord_matrix),</span>
<span id="cb2-86">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-87"></span>
<span id="cb2-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep only unique chord, recompute similarities</span></span>
<span id="cb2-89">chord_matrix_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[first_occurrence,]</span>
<span id="cb2-90">first_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix_no_repeats))</span>
<span id="cb2-91">second_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order_no_repeats)</span>
<span id="cb2-92"></span>
<span id="cb2-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove scales and individual notes</span></span>
<span id="cb2-94">only_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-95">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,</span>
<span id="cb2-96">         type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span>,</span>
<span id="cb2-97">         database_chord <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-98"></span>
<span id="cb2-99">first_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-100">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span>
<span id="cb2-101">second_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> second_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-102">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb3-3">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdscale</span>((first_order<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))</span>
<span id="cb3-4">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(mds_first_order) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties)</span>
<span id="cb3-6"></span>
<span id="cb3-7">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mds_first_order <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(key,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bold_me =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-10">                             type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-12">         num_notes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb3-13"></span>
<span id="cb3-14">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb3-15">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names,</span>
<span id="cb3-16">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> key,</span>
<span id="cb3-17">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> bold_me))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()</span>
<span id="cb3-21"></span>
<span id="cb3-22">p1</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/27_1_28_24_symmetry/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="1920"></p>
</figure>
</div>
</div>
</div>
<p>The circle of fifths pops out right away. I put slightly larger dots on the location where individual notes are located in the space. At the bottom is the C note, and then going anti-clockwise we find F, Bb, Eb etc., and going clockwise we get G, D, A, etc.</p>
</section>
<section id="chord-location-based-on-note-vectors" class="level2">
<h2 class="anchored" data-anchor-id="chord-location-based-on-note-vectors">Chord location based on note vectors</h2>
<p>Each of the chords and notes is a point in the multi-dimensional chord space, represented here in a compressed 2-d form. Each point is also a vector representing a direction from the origin. For example, the next graph draws lines from the origin to the C, E, and G notes, showing their respective directions in the space. These notes make up a C major triad, and it is worth considering how the vectors for the individual notes relate to the vector for the chord.</p>
<p><img src="https://homophony.quest/blog/27_1_28_24_symmetry/images/Cmajor.jpg" class="img-fluid"></p>
<p>The C major triad vector is an equally weighted average of the sum of it’s note vectors. The point is roughly in the middle of the triangle between G, C, and E. Drawing a line from the origin to that point is where we find the C major triad.</p>
<p>I’ve been looking for musical implications from this graph that offer new (to me) perspectives. Here’s what I’ve come up with so far.</p>
</section>
<section id="symmetrical-3-note-scale" class="level2">
<h2 class="anchored" data-anchor-id="symmetrical-3-note-scale">Symmetrical 3 note scale</h2>
<p>I’m starting on a C note, and playing Cs across the piano as a kind of drone note. Let’s say this establishes a tonal center in C. And, without any more information, I’m heading in the C direction in musical space.</p>
<p>But, let’s say I want to branch out and add more notes, but also keep the tonal center on C. In the next several graphs I do this in steps by adding an additional note from the circle of fifths, in both directions, to preserve symmetry.</p>
<p>For example, the next graph creates a simple 3 note scale by adding the G and F notes.</p>
<p><img src="https://homophony.quest/blog/27_1_28_24_symmetry/images/3_note-01.jpg" class="img-fluid"></p>
<p>Playing a drone C on the piano, and sprinkling in Gs and Fs sounds fun and very “major fifthy”. The CFG triad is a Csus chord (and the Csus chord is located where it should based on it’s constituent note elements). You also get a paired down Gsus7 (GCF) and Fadd9 (FCG) in this scale. The symmetry is fun in that you add notes, but are still going in the same direction.</p>
<p>As I’m playing this type of thing on the piano, and thinking about every note as adding to an accumulating performance vector in chord space, I would have to play these notes (especially F and G) equally frequently to preserve the C direction. If I started playing more Fs, then I would be tilting the performance vector a little bit toward the F note. Musically, this seems like an invitation to start exploring the anti-clockwise direction in terms of the circle of fifths. For example, I could sneak in a Bb, which is the next note past F. This brings in C7sus vibes.</p>
</section>
<section id="symmetrical-5-note-scale" class="level2">
<h2 class="anchored" data-anchor-id="symmetrical-5-note-scale">Symmetrical 5 note scale</h2>
<p>I’m playing Csus (CFG) around the piano and want to two more notes to make it interesting. But, for now, let’s keep it symmetrical. So, I add D and Bb.</p>
<p><img src="https://homophony.quest/blog/27_1_28_24_symmetry/images/5_note-01.jpg" class="img-fluid"></p>
<p>Now I’m having fun droning on C, and sprinkling in F Bb and D G everywhere. The 5 note scale works as a C chord = C9sus (C D9 Fsus GV Bb7), or a Gm7sus chord (and more for the other notes). But, let’s keep going with the idea of adding more notes and keeping the direction symmetrical about C.</p>
</section>
<section id="note-symmetrical-scale" class="level2">
<h2 class="anchored" data-anchor-id="note-symmetrical-scale">7 note symmetrical scale</h2>
<p>Adding the next two notes (A and Eb), we get a 7 note scale. This scale is centered on C in terms of equal weighting the other notes on either side of the circle of fifths.</p>
<p><img src="https://homophony.quest/blog/27_1_28_24_symmetry/images/7_note-01.jpg" class="img-fluid"></p>
<p>Arranging the notes starting on C, gives: C D Eb F G A Bb, which is the same as a C dorian scale. Or, if I was hammering away on a Bb as the drone note to establish Bb as the tonal center, and then used these same notes (even though they are not symmetrical around Bb), we get the Bb major scale (ionian).</p>
<p>Dare we go to a 9 note scale?</p>
</section>
<section id="note-symmetrical-scale-1" class="level2">
<h2 class="anchored" data-anchor-id="note-symmetrical-scale-1">9 note symmetrical scale</h2>
<p>Let’s do it by adding the E and Ab.</p>
<p><img src="https://homophony.quest/blog/27_1_28_24_symmetry/images/9_note.jpg" class="img-fluid"></p>
<p>This is a really fun scale to mess around with, and it’s what I’m spending time on right now.</p>
<p>It’s big and harmonically rich, and helps me connect to understanding chords as compound vectors that go off in some direction in the circle of fifths.</p>
<p>For example, I could play a 5 note C chord with CDFGBb, this type of chord is symmetrical about C.</p>
<p>Which chords would I play for each note in the scale? There are options here, but let’s say I start with C Eb F Ab Bb (Cm7sus#5). This chord works, but it’s direction is centered about Bb. To keep a balance around C, I might want the next chord to shoot off on the other side of the circle of fifths. So, to play D, I could do EA D GC (D7sus (add 13)).</p>
<p>Following that pattern, every other note has a chord that alternates between groups of notes from either side of the circle of fifths (about C).</p>
<section id="chords-as-adding-fifths" class="level3">
<h3 class="anchored" data-anchor-id="chords-as-adding-fifths">Chords as adding fifths</h3>
<p>Another little practice I am doing is trying to get used to thinking of the above chords as adding notes in terms of the circle of fifths.</p>
<p>For example, I’ll play a C, and think let’s add fifths symmetrically, so that means add FG, and then add BbD. Or, let’s say I want to go more minor, that would be playing a C and adding more fifths on the anti-clockwise side. C FBb G, or go further C FBb Eb G.</p>
<p>When I play these chords I’m also playing them as arpeggios, but playing the notes in terms of the circle of fifths. This brings a sense of direction, and control over direction. Even with something simple like a triad with C, F, and G. I’ll start with C, and I could go F to G, or G to F. The first choice seems to nudge the feeling to one side or the other of the circle of fifths.</p>
<p>I’m assuming that if I practice chords this way I’ll get better at sensing which direction I’m headed in, and what kind of tension is being built when the direction is ambiguous.</p>


</section>
</section>

 ]]></description>
  <category>chord similarity</category>
  <category>datavis</category>
  <category>circle of fifths</category>
  <category>music theory</category>
  <guid>https://homophony.quest/blog/27_1_28_24_symmetry/</guid>
  <pubDate>Sun, 28 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/27_1_28_24_symmetry/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Steps toward visualizing chord spaces</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/26_1_26_24_space_vis/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"synthesizer floating in space. 80s cartoon. retro."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/26_1_26_24_space_vis/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>synthesizer floating in space. 80s cartoon. retro. - Dreamshaper v7</p>
</div></div><p>No time today for much explanation. Just some code that produces a visual. Lot’s of things to change up here later.</p>
<ul>
<li>create feature vectors for chords</li>
<li>calculate similarity matrix</li>
<li>find a multi-dimensional scaling solution to plot the chord names in 2-d</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-processing to get the chord vectors</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load chord vectors</span></span>
<span id="cb2-5">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb2-8">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb2-14">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb2-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb2-21"></span>
<span id="cb2-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb2-24">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb2-25"></span>
<span id="cb2-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb2-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb2-28">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb2-29"></span>
<span id="cb2-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb2-31">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb2-33"></span>
<span id="cb2-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb2-35">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb2-36"></span>
<span id="cb2-37">  }</span>
<span id="cb2-38">}</span>
<span id="cb2-39"></span>
<span id="cb2-40">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(c_chord_excel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)),</span>
<span id="cb2-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(keys, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(c_chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb2-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix),</span>
<span id="cb2-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb2-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">database_chord =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-46">)</span>
<span id="cb2-47"></span>
<span id="cb2-48">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb2-49">second_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order)</span>
<span id="cb2-50"></span>
<span id="cb2-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find repeats and build synonym list</span></span>
<span id="cb2-52">repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-53"></span>
<span id="cb2-54">first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-55"></span>
<span id="cb2-56"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb2-57">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the current row</span></span>
<span id="cb2-58">  evaluate_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order[i,]</span>
<span id="cb2-59"></span>
<span id="cb2-60">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't count the current item as a repeat</span></span>
<span id="cb2-61">  evaluate_row[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-62"></span>
<span id="cb2-63">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeats are the ids for any other 1s found</span></span>
<span id="cb2-64">  repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(evaluate_row <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> )</span>
<span id="cb2-65"></span>
<span id="cb2-66">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-67">  }</span>
<span id="cb2-68"></span>
<span id="cb2-69">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb2-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#add to list of repeat items</span></span>
<span id="cb2-71">    repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(repeat_indices,repeats)</span>
<span id="cb2-72"></span>
<span id="cb2-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add synonyms</span></span>
<span id="cb2-74">    chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>synonyms[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix)[repeats])</span>
<span id="cb2-75">  }</span>
<span id="cb2-76"></span>
<span id="cb2-77">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> first_occurrence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-78">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> repeat_indices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb2-79">      first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(first_occurrence,i)</span>
<span id="cb2-80">      chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>database_chord[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-81">    }</span>
<span id="cb2-82">  }</span>
<span id="cb2-83">}</span>
<span id="cb2-84"></span>
<span id="cb2-85">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-86">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_notes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(chord_matrix),</span>
<span id="cb2-87">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-88"></span>
<span id="cb2-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep only unique chord, recompute similarities</span></span>
<span id="cb2-90">chord_matrix_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[first_occurrence,]</span>
<span id="cb2-91">first_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix_no_repeats))</span>
<span id="cb2-92">second_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order_no_repeats)</span>
<span id="cb2-93"></span>
<span id="cb2-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove scales and individual notes</span></span>
<span id="cb2-95">only_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-96">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,</span>
<span id="cb2-97">         type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span>,</span>
<span id="cb2-98">         database_chord <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-99"></span>
<span id="cb2-100">first_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-101">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span>
<span id="cb2-102">second_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> second_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb2-103">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span></code></pre></div>
</details>
</div>
<p>First-order similarity chord-space using 1-hot vectors.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb3-3"></span>
<span id="cb3-4">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdscale</span>((first_order<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))</span>
<span id="cb3-5">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(mds_first_order) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties)</span>
<span id="cb3-7"></span>
<span id="cb3-8">mds_first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mds_first_order <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(key,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>)</span>
<span id="cb3-11"></span>
<span id="cb3-12">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mds_first_order, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V1, V2, </span>
<span id="cb3-13">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> chord_names,</span>
<span id="cb3-14">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> key))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.overlaps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb3-18">p1</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/26_1_26_24_space_vis/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="3840"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>chord similarity</category>
  <category>datavis</category>
  <guid>https://homophony.quest/blog/26_1_26_24_space_vis/</guid>
  <pubDate>Fri, 26 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/26_1_26_24_space_vis/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Listening to complex tones using sine waves and toneR</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/25_1_25_24_r_sounds/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sine waves. nature. brilliant. sunset. ocean. frequency. complex"</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/25_1_25_24_r_sounds/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>musical pattern. music wallpaper. intense music trip. music everywhere. - Dreamshaper v7</p>
</div></div><p>In previous posts I’ve been messing around with analyzing chord similarity using a vector space. My plan for this post is render chords as complex tones using R and the {toneR} package, and then listen to things.</p>
<p>The code for this is taking me back to grad school. I used to run experiments involving complex tones with missing fundamentals, and I used Matlab to create those tones from sine waves.</p>
<p>Here’s some R code will generate a complex tone as a sum of a series of sine waves, each at different frequencies and amplitudes.</p>
<p>The result is a C7 chord, rendered as a complex tone, with the frequency for each note getting equal amplitude in the summed sine wave.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tuneR)</span>
<span id="cb2-2"></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to generate a complex tone</span></span>
<span id="cb2-5">generate_complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb2-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(duration,</span>
<span id="cb2-7">           sampling_rate,</span>
<span id="cb2-8">           frequencies,</span>
<span id="cb2-9">           amplitudes) {</span>
<span id="cb2-10">    time_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, duration, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sampling_rate)</span>
<span id="cb2-11">    complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(frequencies), </span>
<span id="cb2-12">                           <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(i) {</span>
<span id="cb2-13">      amplitudes[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> frequencies[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_points)</span>
<span id="cb2-14">                             }</span>
<span id="cb2-15">      )</span>
<span id="cb2-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(complex_tone))</span>
<span id="cb2-17">  }</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set parameters</span></span>
<span id="cb2-20">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb2-21">sampling_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hz (standard audio sampling rate)</span></span>
<span id="cb2-22">frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">261.63</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Middle C, frequencies of sine waves in Hz</span></span>
<span id="cb2-23">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">277.18</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># D</span></span>
<span id="cb2-24">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">293.66</span>,</span>
<span id="cb2-25">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">311.13</span>,</span>
<span id="cb2-26">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">329.63</span>,</span>
<span id="cb2-27">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">349.23</span>,</span>
<span id="cb2-28">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">369.99</span>,</span>
<span id="cb2-29">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">392</span>,</span>
<span id="cb2-30">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">415.3</span>,</span>
<span id="cb2-31">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span>,</span>
<span id="cb2-32">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">466.16</span>,</span>
<span id="cb2-33">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">493.88</span>)</span>
<span id="cb2-34"></span>
<span id="cb2-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set amplitudes</span></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 12 amplitudes, one for each note from C to B</span></span>
<span id="cb2-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this makes a C7 chord</span></span>
<span id="cb2-38">amplitudes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-39"></span>
<span id="cb2-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate complex tone</span></span>
<span id="cb2-41">complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_complex_tone</span>(duration, </span>
<span id="cb2-42">                                      sampling_rate, </span>
<span id="cb2-43">                                      frequencies, </span>
<span id="cb2-44">                                      amplitudes)</span>
<span id="cb2-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalize for 16 bit</span></span>
<span id="cb2-46">complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(complex_tone))</span>
<span id="cb2-47">complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32767</span></span>
<span id="cb2-48"></span>
<span id="cb2-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use tuneR to convert to wave</span></span>
<span id="cb2-50">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wave</span>(</span>
<span id="cb2-51">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> complex_tone,</span>
<span id="cb2-52">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> complex_tone,</span>
<span id="cb2-53">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp.rate =</span> sampling_rate,</span>
<span id="cb2-54">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb2-55">)</span>
<span id="cb2-56"></span>
<span id="cb2-57"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeWave</span>(wave,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7.wav"</span>)</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="C7.wav" type="audio/wav"> </audio></p>
<section id="a-series-of-similar-chords" class="level2">
<h2 class="anchored" data-anchor-id="a-series-of-similar-chords">A series of similar chords</h2>
<p>I’m pretty sure what I’m about to make is going to sound janky, oh well.</p>
<p>Step 1: load in the chord vector space I’ve been using to compute similarities between chord patterns.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-processing to get the chord vectors</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load chord vectors</span></span>
<span id="cb3-5">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb3-8">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb3-14">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb3-15"></span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb3-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb3-21">  </span>
<span id="cb3-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb3-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb3-24">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb3-25">    </span>
<span id="cb3-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb3-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb3-28">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb3-29">    </span>
<span id="cb3-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb3-31">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb3-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb3-33">    </span>
<span id="cb3-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb3-35">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb3-36">  </span>
<span id="cb3-37">    }</span>
<span id="cb3-38">}</span></code></pre></div>
</details>
</div>
<p>Step 2: compute the cosine similarities between all chords</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb4-2">second_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order)</span></code></pre></div>
</details>
</div>
<p>Step 3: Pick a starting chord and get the list of all other chords, ordered in terms of decreasing similarity. I’ll start with C7. This also prints the first 10, but I there are hundreds more in a row. Also using second-order similarity here for fun.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing=</span>T)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(chord_similarities[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>])</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>           C7            C9        C7(b9)       Gb7b9b5          Edim 
    1.0000000     0.9763873     0.9701562     0.9691460     0.9633453 
C major triad       C9(#11)       C9 (13)       Em7(b5)           Gm6 
    0.9597563     0.9528986     0.9527819     0.9401221     0.9401221 </code></pre>
</div>
</div>
<p>Step 4: This is what I’ve been waiting for. Time for some teeny tiny steps. Basically, the plan is to generate a complex tone for each chord, in order of decreasing similarity, then stitch them together and then listen to them.</p>
<p>I’m going to experiment with some of the parameters, like duration, and see what happens. Let’s also try the first 10 chords.</p>
<p>Issue tracker: - try shorter duration per chord - clicks between tones need smoothing - add amplitude envelopes at beginning and end - learned about the {av} package! looks like a wrapper for ffmpeg, can use this to convert wavs to mp3</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># envelope generator function</span></span>
<span id="cb7-2">vector_envelope <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input_vector,proportion){</span>
<span id="cb7-3">  window <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(input_vector)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>proportion)</span>
<span id="cb7-4">  up <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> window)</span>
<span id="cb7-5">  down <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> window)</span>
<span id="cb7-6">  input_vector[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>window] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> input_vector[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>window]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>up</span>
<span id="cb7-7">  input_vector[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(input_vector)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(window<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(input_vector)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> input_vector[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(input_vector)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(window<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(input_vector)]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>down</span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(input_vector)</span>
<span id="cb7-9">}</span></code></pre></div>
</details>
</div>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set parameters</span></span>
<span id="cb8-2">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb8-3">sampling_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hz (standard audio sampling rate)</span></span>
<span id="cb8-4">frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">261.63</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Middle C, frequencies of sine waves in Hz</span></span>
<span id="cb8-5">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">277.18</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># D</span></span>
<span id="cb8-6">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">293.66</span>,</span>
<span id="cb8-7">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">311.13</span>,</span>
<span id="cb8-8">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">329.63</span>,</span>
<span id="cb8-9">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">349.23</span>,</span>
<span id="cb8-10">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">369.99</span>,</span>
<span id="cb8-11">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">392</span>,</span>
<span id="cb8-12">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">415.3</span>,</span>
<span id="cb8-13">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span>,</span>
<span id="cb8-14">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">466.16</span>,</span>
<span id="cb8-15">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">493.88</span>)</span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through chords</span></span>
<span id="cb8-18"></span>
<span id="cb8-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) {</span>
<span id="cb8-20">  amplitudes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(chord_similarities[i]),]</span>
<span id="cb8-21">  </span>
<span id="cb8-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate complex tone</span></span>
<span id="cb8-23">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_complex_tone</span>(duration,</span>
<span id="cb8-24">                                        sampling_rate,</span>
<span id="cb8-25">                                        frequencies,</span>
<span id="cb8-26">                                        amplitudes)</span>
<span id="cb8-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalize for 16 bit</span></span>
<span id="cb8-28">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(complex_tone))</span>
<span id="cb8-29">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32767</span></span>
<span id="cb8-30">  </span>
<span id="cb8-31">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector_envelope</span>(complex_tone,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb8-32">  </span>
<span id="cb8-33">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb8-34">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone</span>
<span id="cb8-35">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb8-36">    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##smoothing</span></span>
<span id="cb8-37">    smooth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-38">    </span>
<span id="cb8-39">    tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> complex_tone[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>smooth])</span>
<span id="cb8-40">    </span>
<span id="cb8-41">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(tone_series, complex_tone[(smooth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)])</span>
<span id="cb8-42">    </span>
<span id="cb8-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tone_series &lt;- c(tone_series,complex_tone)</span></span>
<span id="cb8-44">  }</span>
<span id="cb8-45">  </span>
<span id="cb8-46">}</span>
<span id="cb8-47"></span>
<span id="cb8-48"></span>
<span id="cb8-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use tuneR to convert to wave</span></span>
<span id="cb8-50">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wave</span>(</span>
<span id="cb8-51">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> tone_series,</span>
<span id="cb8-52">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> tone_series,</span>
<span id="cb8-53">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp.rate =</span> sampling_rate,</span>
<span id="cb8-54">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb8-55">)</span>
<span id="cb8-56"></span>
<span id="cb8-57">sound_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7_series_10"</span></span>
<span id="cb8-58"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeWave</span>(wave,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span>
<span id="cb8-59">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb8-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="C7_series_10.mp3" type="audio/wav"> </audio></p>
<p>This one runs through the first 20 most similar chords to C7. The chords don’transition super smoothly (no portamento), but I got rid of then clicks using envelopes. It’s been a while since I did the math for audio signal processing. The last 10 or so chords all sound the same because the database has lots of chord identities (same note pattern under a different name).</p>
</section>
<section id="more-experiments" class="level2">
<h2 class="anchored" data-anchor-id="more-experiments">More experiments</h2>
<p>Remove identical chord patterns</p>
<p>I botched this so many times…kept coming back to fix little problems.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb9-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(c_chord_excel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)),</span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(keys, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(c_chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix),</span>
<span id="cb9-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb9-6">)</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find repeats and build synonym list</span></span>
<span id="cb9-9">repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb9-10">chord_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb9-11"></span>
<span id="cb9-12">first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(first_order)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb9-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the current row</span></span>
<span id="cb9-16">  evaluate_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order[i,]</span>
<span id="cb9-17">  </span>
<span id="cb9-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't count the current item as a repeat</span></span>
<span id="cb9-19">  evaluate_row[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb9-20">  </span>
<span id="cb9-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeats are the ids for any other 1s found</span></span>
<span id="cb9-22">  repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(evaluate_row <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> )</span>
<span id="cb9-23">  </span>
<span id="cb9-24">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb9-25">  }</span>
<span id="cb9-26">  </span>
<span id="cb9-27">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb9-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#add to list of repeat items</span></span>
<span id="cb9-29">    repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(repeat_indices,repeats)</span>
<span id="cb9-30">    </span>
<span id="cb9-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add synonyms</span></span>
<span id="cb9-32">    chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>synonyms[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(first_order)[repeats])</span>
<span id="cb9-33">  }</span>
<span id="cb9-34">  </span>
<span id="cb9-35">   <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> first_occurrence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb9-36">     <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> repeat_indices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb9-37">       first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(first_occurrence,i)</span>
<span id="cb9-38">     }</span>
<span id="cb9-39">  }</span>
<span id="cb9-40">}</span>
<span id="cb9-41"></span>
<span id="cb9-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove repeats, recompute similarities</span></span>
<span id="cb9-43">chord_matrix_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[first_occurrence,]</span>
<span id="cb9-44"></span>
<span id="cb9-45">first_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix_no_repeats))</span>
<span id="cb9-46">second_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order_no_repeats)</span></code></pre></div>
</details>
</div>
<p>Listen to C7 in descending similarity with no repeat chords.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order_no_repeats[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing=</span>T)</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set parameters</span></span>
<span id="cb10-4">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb10-5">sampling_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hz (standard audio sampling rate)</span></span>
<span id="cb10-6">frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">261.63</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Middle C, frequencies of sine waves in Hz</span></span>
<span id="cb10-7">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">277.18</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># D</span></span>
<span id="cb10-8">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">293.66</span>,</span>
<span id="cb10-9">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">311.13</span>,</span>
<span id="cb10-10">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">329.63</span>,</span>
<span id="cb10-11">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">349.23</span>,</span>
<span id="cb10-12">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">369.99</span>,</span>
<span id="cb10-13">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">392</span>,</span>
<span id="cb10-14">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">415.3</span>,</span>
<span id="cb10-15">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span>,</span>
<span id="cb10-16">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">466.16</span>,</span>
<span id="cb10-17">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">493.88</span>)</span>
<span id="cb10-18"></span>
<span id="cb10-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through chords</span></span>
<span id="cb10-20"></span>
<span id="cb10-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>) {</span>
<span id="cb10-22">  amplitudes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(chord_similarities[i]),]</span>
<span id="cb10-23">  </span>
<span id="cb10-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate complex tone</span></span>
<span id="cb10-25">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_complex_tone</span>(duration,</span>
<span id="cb10-26">                                        sampling_rate,</span>
<span id="cb10-27">                                        frequencies,</span>
<span id="cb10-28">                                        amplitudes)</span>
<span id="cb10-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalize for 16 bit</span></span>
<span id="cb10-30">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(complex_tone))</span>
<span id="cb10-31">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32767</span></span>
<span id="cb10-32">  </span>
<span id="cb10-33">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector_envelope</span>(complex_tone,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb10-34">  </span>
<span id="cb10-35">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb10-36">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone</span>
<span id="cb10-37">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb10-38">    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##smoothing</span></span>
<span id="cb10-39">    smooth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-40">    </span>
<span id="cb10-41">    tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> complex_tone[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>smooth])</span>
<span id="cb10-42">    </span>
<span id="cb10-43">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(tone_series, complex_tone[(smooth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)])</span>
<span id="cb10-44">    </span>
<span id="cb10-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tone_series &lt;- c(tone_series,complex_tone)</span></span>
<span id="cb10-46">  }</span>
<span id="cb10-47">  </span>
<span id="cb10-48">}</span>
<span id="cb10-49"></span>
<span id="cb10-50"></span>
<span id="cb10-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use tuneR to convert to wave</span></span>
<span id="cb10-52">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wave</span>(</span>
<span id="cb10-53">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> tone_series,</span>
<span id="cb10-54">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> tone_series,</span>
<span id="cb10-55">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp.rate =</span> sampling_rate,</span>
<span id="cb10-56">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb10-57">)</span>
<span id="cb10-58"></span>
<span id="cb10-59">sound_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7_series_30"</span></span>
<span id="cb10-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeWave</span>(wave,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span>
<span id="cb10-61">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb10-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="C7_series_30.mp3" type="audio/wav"> </audio></p>
<p>Taking bigger steps (10) between each chord in terms of similarity.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order_no_repeats[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing=</span>T)</span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set parameters</span></span>
<span id="cb11-4">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb11-5">sampling_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hz (standard audio sampling rate)</span></span>
<span id="cb11-6">frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">261.63</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Middle C, frequencies of sine waves in Hz</span></span>
<span id="cb11-7">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">277.18</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># D</span></span>
<span id="cb11-8">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">293.66</span>,</span>
<span id="cb11-9">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">311.13</span>,</span>
<span id="cb11-10">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">329.63</span>,</span>
<span id="cb11-11">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">349.23</span>,</span>
<span id="cb11-12">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">369.99</span>,</span>
<span id="cb11-13">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">392</span>,</span>
<span id="cb11-14">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">415.3</span>,</span>
<span id="cb11-15">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span>,</span>
<span id="cb11-16">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">466.16</span>,</span>
<span id="cb11-17">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">493.88</span>)</span>
<span id="cb11-18"></span>
<span id="cb11-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through chords</span></span>
<span id="cb11-20"></span>
<span id="cb11-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) {</span>
<span id="cb11-22">  amplitudes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(chord_similarities[i]),]</span>
<span id="cb11-23">  </span>
<span id="cb11-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate complex tone</span></span>
<span id="cb11-25">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_complex_tone</span>(duration,</span>
<span id="cb11-26">                                        sampling_rate,</span>
<span id="cb11-27">                                        frequencies,</span>
<span id="cb11-28">                                        amplitudes)</span>
<span id="cb11-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalize for 16 bit</span></span>
<span id="cb11-30">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(complex_tone))</span>
<span id="cb11-31">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32767</span></span>
<span id="cb11-32">  </span>
<span id="cb11-33">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector_envelope</span>(complex_tone,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb11-34">  </span>
<span id="cb11-35">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb11-36">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone</span>
<span id="cb11-37">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb11-38">    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##smoothing</span></span>
<span id="cb11-39">    smooth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-40">    </span>
<span id="cb11-41">    tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> complex_tone[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>smooth])</span>
<span id="cb11-42">    </span>
<span id="cb11-43">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(tone_series, complex_tone[(smooth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)])</span>
<span id="cb11-44">    </span>
<span id="cb11-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tone_series &lt;- c(tone_series,complex_tone)</span></span>
<span id="cb11-46">  }</span>
<span id="cb11-47">  </span>
<span id="cb11-48">}</span>
<span id="cb11-49"></span>
<span id="cb11-50"></span>
<span id="cb11-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use tuneR to convert to wave</span></span>
<span id="cb11-52">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wave</span>(</span>
<span id="cb11-53">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> tone_series,</span>
<span id="cb11-54">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> tone_series,</span>
<span id="cb11-55">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp.rate =</span> sampling_rate,</span>
<span id="cb11-56">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb11-57">)</span>
<span id="cb11-58"></span>
<span id="cb11-59">sound_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7_series_30b"</span></span>
<span id="cb11-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeWave</span>(wave,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span>
<span id="cb11-61">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb11-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="C7_series_30b.mp3" type="audio/wav"> </audio></p>
<p>Mildly interesting. These sine waves are tough on the ears though.</p>
<hr>
<p>The chord vectors only have 12 features, so they abstract over note positions, chord inversions, voicings, octaves, etc. These experiments might sound more interesting if I randomly assigned frequencies to different octaves to spread out the sound a little bit.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order_no_repeats[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing=</span>T)</span>
<span id="cb12-2"></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set parameters</span></span>
<span id="cb12-4">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb12-5">sampling_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hz (standard audio sampling rate)</span></span>
<span id="cb12-6">frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">261.63</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Middle C, frequencies of sine waves in Hz</span></span>
<span id="cb12-7">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">277.18</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># D</span></span>
<span id="cb12-8">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">293.66</span>,</span>
<span id="cb12-9">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">311.13</span>,</span>
<span id="cb12-10">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">329.63</span>,</span>
<span id="cb12-11">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">349.23</span>,</span>
<span id="cb12-12">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">369.99</span>,</span>
<span id="cb12-13">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">392</span>,</span>
<span id="cb12-14">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">415.3</span>,</span>
<span id="cb12-15">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span>,</span>
<span id="cb12-16">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">466.16</span>,</span>
<span id="cb12-17">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">493.88</span>)</span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through chords</span></span>
<span id="cb12-20"></span>
<span id="cb12-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) {</span>
<span id="cb12-22">  amplitudes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(chord_similarities[i]),]</span>
<span id="cb12-23">  </span>
<span id="cb12-24">  random_frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>frequencies</span>
<span id="cb12-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate complex tone</span></span>
<span id="cb12-26">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_complex_tone</span>(duration,</span>
<span id="cb12-27">                                        sampling_rate,</span>
<span id="cb12-28">                                        random_frequencies,</span>
<span id="cb12-29">                                        amplitudes)</span>
<span id="cb12-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalize for 16 bit</span></span>
<span id="cb12-31">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(complex_tone))</span>
<span id="cb12-32">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32767</span></span>
<span id="cb12-33">  </span>
<span id="cb12-34">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector_envelope</span>(complex_tone,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb12-35">  </span>
<span id="cb12-36">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb12-37">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone</span>
<span id="cb12-38">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb12-39">    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##smoothing</span></span>
<span id="cb12-40">    smooth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-41">    </span>
<span id="cb12-42">    tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> complex_tone[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>smooth])</span>
<span id="cb12-43">    </span>
<span id="cb12-44">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(tone_series, complex_tone[(smooth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)])</span>
<span id="cb12-45">    </span>
<span id="cb12-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tone_series &lt;- c(tone_series,complex_tone)</span></span>
<span id="cb12-47">  }</span>
<span id="cb12-48">  </span>
<span id="cb12-49">}</span>
<span id="cb12-50"></span>
<span id="cb12-51"></span>
<span id="cb12-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use tuneR to convert to wave</span></span>
<span id="cb12-53">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wave</span>(</span>
<span id="cb12-54">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> tone_series,</span>
<span id="cb12-55">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> tone_series,</span>
<span id="cb12-56">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp.rate =</span> sampling_rate,</span>
<span id="cb12-57">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb12-58">)</span>
<span id="cb12-59"></span>
<span id="cb12-60">sound_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7_series_30c"</span></span>
<span id="cb12-61"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeWave</span>(wave,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span>
<span id="cb12-62">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb12-63"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="C7_series_30c.mp3" type="audio/wav"> </audio></p>
<p>sounds more interesting. need to refactor the code a bit so I delete the wav file and save the mp3</p>
<hr>
<p>Let’s start somewhere out there, and then move toward C7.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order_no_repeats[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing=</span>T)</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set parameters</span></span>
<span id="cb13-4">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb13-5">sampling_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hz (standard audio sampling rate)</span></span>
<span id="cb13-6">frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">261.63</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Middle C, frequencies of sine waves in Hz</span></span>
<span id="cb13-7">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">277.18</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># D</span></span>
<span id="cb13-8">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">293.66</span>,</span>
<span id="cb13-9">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">311.13</span>,</span>
<span id="cb13-10">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">329.63</span>,</span>
<span id="cb13-11">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">349.23</span>,</span>
<span id="cb13-12">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">369.99</span>,</span>
<span id="cb13-13">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">392</span>,</span>
<span id="cb13-14">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">415.3</span>,</span>
<span id="cb13-15">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span>,</span>
<span id="cb13-16">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">466.16</span>,</span>
<span id="cb13-17">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">493.88</span>)</span>
<span id="cb13-18"></span>
<span id="cb13-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through chords</span></span>
<span id="cb13-20">counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">301</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)) {</span>
<span id="cb13-22">  counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> counter<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-23">  amplitudes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(chord_similarities[i]),]</span>
<span id="cb13-24">  </span>
<span id="cb13-25">  random_frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>frequencies</span>
<span id="cb13-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate complex tone</span></span>
<span id="cb13-27">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_complex_tone</span>(duration,</span>
<span id="cb13-28">                                        sampling_rate,</span>
<span id="cb13-29">                                        random_frequencies,</span>
<span id="cb13-30">                                        amplitudes)</span>
<span id="cb13-31">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalize for 16 bit</span></span>
<span id="cb13-32">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(complex_tone))</span>
<span id="cb13-33">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32767</span></span>
<span id="cb13-34">  </span>
<span id="cb13-35">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector_envelope</span>(complex_tone,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb13-36">  </span>
<span id="cb13-37">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(counter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb13-38">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone</span>
<span id="cb13-39">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb13-40">    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##smoothing</span></span>
<span id="cb13-41">    smooth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-42">    </span>
<span id="cb13-43">    tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> complex_tone[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>smooth])</span>
<span id="cb13-44">    </span>
<span id="cb13-45">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(tone_series, complex_tone[(smooth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)])</span>
<span id="cb13-46">    </span>
<span id="cb13-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tone_series &lt;- c(tone_series,complex_tone)</span></span>
<span id="cb13-48">  }</span>
<span id="cb13-49">  </span>
<span id="cb13-50">}</span>
<span id="cb13-51"></span>
<span id="cb13-52"></span>
<span id="cb13-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use tuneR to convert to wave</span></span>
<span id="cb13-54">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wave</span>(</span>
<span id="cb13-55">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> tone_series,</span>
<span id="cb13-56">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> tone_series,</span>
<span id="cb13-57">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp.rate =</span> sampling_rate,</span>
<span id="cb13-58">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb13-59">)</span>
<span id="cb13-60"></span>
<span id="cb13-61">sound_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7_series_30d"</span></span>
<span id="cb13-62"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeWave</span>(wave,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span>
<span id="cb13-63">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb13-64"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span></code></pre></div>
</details>
</div>
<p><audio controls=""> <source src="C7_series_30d.mp3" type="audio/wav"> </audio></p>
<p>That goes for almost a minute, not sure If I got the feeling I was headed toward C7.</p>
</section>
<section id="stepping-distances-between-chords" class="level2">
<h2 class="anchored" data-anchor-id="stepping-distances-between-chords">Stepping distances between chords</h2>
<p>NOTE: This section is rough because I keep going back and fixing code, and the answers change.</p>
<p>I was going to start working on an endless chord progression algorithm, but I realized I needed to pause and figure this out instead.</p>
<p>The issue is to consider movement from one chord to another in the vector space. In the above examples I was moving away from C7 or toward C7, simply on the basis of the similarity scores from other chords.</p>
<p>What if I wanted to move between two different chords, say a C major triad, and a G major triad.</p>
<p>It’s still the morning, so my vector space math isn’t totally working.</p>
<p>I’m at C major triad in the multi-dimensional vector space. I see G major triad over there as another point in vector space. I could go straight there. Or, I could go anywhere else from C before going to G. With those options out of the way, let’s do equal-interval steps.</p>
<p>Starting simple. Choose the C major chord, sort it by decreasing similarity. Find, the G major triad in the list. Print the chord that is halfway between the two.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">starting_chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order_no_repeats[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> T)</span>
<span id="cb14-2"></span>
<span id="cb14-3">target_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(starting_chord_similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'G major triad'</span>)</span>
<span id="cb14-4"></span>
<span id="cb14-5">middle_chord <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> starting_chord_similarities[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(target_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb14-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(middle_chord)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>     Cm13 
0.8095027 </code></pre>
</div>
</div>
<p>This one works fine between C and G</p>
<p>another mistake:I had made a mistake earlier in the code that removed repeats, I previously got a D 9 (13), which sounded good. The Dm13(#11) is harded on the ears.</p>
<p>From before the fix: I played C major triad, D 9 (13), and G major triad on a piano and it sounded great! Neat.</p>
<p>I’m curious what some of the other chords near this spot are like.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">starting_chord_similarities[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(target_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(target_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>      Ab∆9(#11)       Gm13(#11)       Cm13(#11)            Cm13         F9(#11) 
      0.8113597       0.8111463       0.8101535       0.8095027       0.8088325 
C melodic minor      Em (add 9) 
      0.8085356       0.8084651 </code></pre>
</div>
</div>
<p>After another fix, mostly look fine. Good that there are good options!</p>
<p>After fix: The Ab∆9 sounds great in between C and G. The Eb7(b9) works very well. I was almost worried this would start breaking, but still sounding good.</p>
<p>From before the fix: Nice, all of those work pretty well. I might need to switch gears today and make a tool to compute these while I’m at the piano.</p>
<p>But let’s persist a little longer.</p>
<p>What if we want to get there in more equal interval steps.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">starting_chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order_no_repeats[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C major triad"</span>,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> T)</span>
<span id="cb18-2"></span>
<span id="cb18-3">target_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(starting_chord_similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'G major triad'</span>)</span>
<span id="cb18-4"></span>
<span id="cb18-5">num_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb18-6"></span>
<span id="cb18-7">progression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> starting_chord_similarities[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,target_id,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>num_steps ))]</span>
<span id="cb18-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(progression)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>C major triad      Edim(∆7)          Cm13        C note G major triad 
    1.0000000     0.8436963     0.8095027     0.7804147     0.7302693 </code></pre>
</div>
</div>
<p>This is pretty cool, damn. Sometimes I’m getting back scales instead of chords, so I’d need to clean this up a little bit.</p>
<p>I’m using existing chords in the space as the locations for intermediate chords. It would be interesting to add a little noise into the process so that some the chords are not quite “right”. Also, interesting to explore unequal steps.</p>
<p>The method I’m using is not necessarily finding the exact middle between two chords in chord space, but that’s OK these ones sound good.</p>
<p>Also, not necessarily getting symmetrical answers. fun.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">starting_chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order_no_repeats[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G major triad"</span>,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> T)</span>
<span id="cb20-2"></span>
<span id="cb20-3">target_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(starting_chord_similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C major triad'</span>)</span>
<span id="cb20-4"></span>
<span id="cb20-5">num_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb20-6"></span>
<span id="cb20-7">progression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> starting_chord_similarities[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,target_id,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>num_steps ))]</span>
<span id="cb20-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(progression)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>G major triad      Bdim(∆7)  C Mixolydian        G note C major triad 
    1.0000000     0.8436963     0.8095027     0.7804147     0.7302693 </code></pre>
</div>
</div>
<hr>
<p>using this a chord progression calculator. Had to switch to the similarity matrix with lots of repeat chords.</p>
<p>Overall, I’d like to refine this chord vector space “intermediate” chord finder. It has potential. But, lots of little issues right now.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">start_chord <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D7"</span></span>
<span id="cb22-2">end_chord <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span></span>
<span id="cb22-3"></span>
<span id="cb22-4">starting_chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(second_order[start_chord,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> T)</span>
<span id="cb22-5"></span>
<span id="cb22-6">target_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(starting_chord_similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> end_chord)</span>
<span id="cb22-7"></span>
<span id="cb22-8">num_steps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-9"></span>
<span id="cb22-10">progression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> starting_chord_similarities[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,target_id,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>num_steps ))]</span>
<span id="cb22-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(progression)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>       D7   D∆9(13)        G7 
1.0000000 0.8595150 0.7792604 </code></pre>
</div>
</div>
</section>
<section id="improving-an-intermediate-chord-finder-function" class="level2">
<h2 class="anchored" data-anchor-id="improving-an-intermediate-chord-finder-function">Improving an intermediate chord finder function</h2>
<p>I need to clean up a bunch of things. Ideally, I want a function that takes a chord similarity matrix, a start and end chord, and computes intermediate chords and returns them.</p>
<ul>
<li>delete non-unique chord, lots of bugs but seems fine now</li>
<li>made synonym list for deleted chords</li>
<li>not yet implemented, search by synonym</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb24-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-processing to get the chord vectors</span></span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load chord vectors</span></span>
<span id="cb24-5">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb24-6"></span>
<span id="cb24-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb24-8">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb24-9"></span>
<span id="cb24-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb24-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb24-12"></span>
<span id="cb24-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb24-14">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb24-15"></span>
<span id="cb24-16"></span>
<span id="cb24-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb24-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb24-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb24-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb24-21"></span>
<span id="cb24-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb24-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb24-24">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb24-25"></span>
<span id="cb24-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb24-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb24-28">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb24-29"></span>
<span id="cb24-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb24-31">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb24-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb24-33"></span>
<span id="cb24-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb24-35">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb24-36"></span>
<span id="cb24-37">  }</span>
<span id="cb24-38">}</span>
<span id="cb24-39"></span>
<span id="cb24-40">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb24-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(c_chord_excel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)),</span>
<span id="cb24-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(keys, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(c_chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb24-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix),</span>
<span id="cb24-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>),</span>
<span id="cb24-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">database_chord =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb24-46">)</span>
<span id="cb24-47"></span>
<span id="cb24-48">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb24-49"></span>
<span id="cb24-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find repeats and build synonym list</span></span>
<span id="cb24-51">repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb24-52"></span>
<span id="cb24-53">first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb24-54"></span>
<span id="cb24-55"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]){</span>
<span id="cb24-56">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the current row</span></span>
<span id="cb24-57">  evaluate_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> first_order[i,]</span>
<span id="cb24-58"></span>
<span id="cb24-59">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># don't count the current item as a repeat</span></span>
<span id="cb24-60">  evaluate_row[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb24-61"></span>
<span id="cb24-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeats are the ids for any other 1s found</span></span>
<span id="cb24-63">  repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(evaluate_row <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> )</span>
<span id="cb24-64"></span>
<span id="cb24-65">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb24-66">  }</span>
<span id="cb24-67"></span>
<span id="cb24-68">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(repeats) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb24-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#add to list of repeat items</span></span>
<span id="cb24-70">    repeat_indices <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(repeat_indices,repeats)</span>
<span id="cb24-71"></span>
<span id="cb24-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add synonyms</span></span>
<span id="cb24-73">    chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>synonyms[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">synonyms =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_matrix)[repeats])</span>
<span id="cb24-74">  }</span>
<span id="cb24-75"></span>
<span id="cb24-76">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> first_occurrence <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb24-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> repeat_indices <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>){</span>
<span id="cb24-78">      first_occurrence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(first_occurrence,i)</span>
<span id="cb24-79">      chord_properties<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>database_chord[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb24-80">    }</span>
<span id="cb24-81">  }</span>
<span id="cb24-82">}</span>
<span id="cb24-83"></span>
<span id="cb24-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep only unique chord, recompute similarities</span></span>
<span id="cb24-85">chord_matrix_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[first_occurrence,]</span>
<span id="cb24-86">first_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix_no_repeats))</span>
<span id="cb24-87">second_order_no_repeats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order_no_repeats)</span>
<span id="cb24-88"></span>
<span id="cb24-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove scales and individual notes</span></span>
<span id="cb24-90">only_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_properties <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb24-91">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,</span>
<span id="cb24-92">         type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key"</span>,</span>
<span id="cb24-93">         database_chord <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb24-94"></span>
<span id="cb24-95">second_order_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> second_order_no_repeats[only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names,</span>
<span id="cb24-96">                                               only_chords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord_names]</span>
<span id="cb24-97"></span>
<span id="cb24-98"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#################################</span></span>
<span id="cb24-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FUNCTIONS</span></span>
<span id="cb24-100"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#################################</span></span>
<span id="cb24-101"></span>
<span id="cb24-102">generate_intermediate_chords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(start,</span>
<span id="cb24-103">                                         target,</span>
<span id="cb24-104">                                         steps,</span>
<span id="cb24-105">                                         chord_similarity_matrix</span>
<span id="cb24-106">){</span>
<span id="cb24-107">  ordered_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(chord_similarity_matrix[start,],<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span>T)</span>
<span id="cb24-108">  target_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(ordered_similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> target)</span>
<span id="cb24-109">  progression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ordered_similarities[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,target_id,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>steps ))]</span>
<span id="cb24-110">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(progression)</span>
<span id="cb24-111">}</span>
<span id="cb24-112"></span>
<span id="cb24-113"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_intermediate_chords</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">steps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, second_order_chords)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>       C7      Gsus  D13susb9   Em7(11)        G7 
1.0000000 0.8677997 0.8211606 0.7944620 0.7368894 </code></pre>
</div>
</div>
<p>That’s good enough for now. I have a bunch more things I’d want to add to this function</p>
<ul>
<li>add option to print more choices (near neighbors)</li>
<li>add option to choose chords with X number of notes</li>
</ul>
<section id="listening-to-a-progression" class="level3">
<h3 class="anchored" data-anchor-id="listening-to-a-progression">listening to a progression</h3>
<p>From C7 to G7</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">chord_progression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_intermediate_chords</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G7"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">steps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, second_order_chords)</span>
<span id="cb26-2">chord_progression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(chord_progression[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb26-3">                       chord_progression[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb26-4">                       chord_progression</span>
<span id="cb26-5">                       )</span>
<span id="cb26-6"></span>
<span id="cb26-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set parameters</span></span>
<span id="cb26-8">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb26-9">sampling_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hz (standard audio sampling rate)</span></span>
<span id="cb26-10">frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">261.63</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Middle C, frequencies of sine waves in Hz</span></span>
<span id="cb26-11">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">277.18</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># D</span></span>
<span id="cb26-12">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">293.66</span>,</span>
<span id="cb26-13">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">311.13</span>,</span>
<span id="cb26-14">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">329.63</span>,</span>
<span id="cb26-15">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">349.23</span>,</span>
<span id="cb26-16">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">369.99</span>,</span>
<span id="cb26-17">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">392</span>,</span>
<span id="cb26-18">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">415.3</span>,</span>
<span id="cb26-19">                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span>,</span>
<span id="cb26-20">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">466.16</span>,</span>
<span id="cb26-21">                 <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">493.88</span>)</span>
<span id="cb26-22"></span>
<span id="cb26-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through chords</span></span>
<span id="cb26-24">counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb26-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(chord_progression)) {</span>
<span id="cb26-26">  counter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> counter<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb26-27">  amplitudes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(chord_progression[i]),]</span>
<span id="cb26-28">  </span>
<span id="cb26-29">  random_frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>frequencies</span>
<span id="cb26-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate complex tone</span></span>
<span id="cb26-31">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_complex_tone</span>(duration,</span>
<span id="cb26-32">                                        sampling_rate,</span>
<span id="cb26-33">                                        random_frequencies,</span>
<span id="cb26-34">                                        amplitudes)</span>
<span id="cb26-35">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalize for 16 bit</span></span>
<span id="cb26-36">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(complex_tone))</span>
<span id="cb26-37">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32767</span></span>
<span id="cb26-38">  </span>
<span id="cb26-39">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector_envelope</span>(complex_tone,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb26-40">  </span>
<span id="cb26-41">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(counter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb26-42">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone</span>
<span id="cb26-43">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb26-44">    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##smoothing</span></span>
<span id="cb26-45">    smooth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb26-46">    </span>
<span id="cb26-47">    tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (tone_series[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(smooth<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(tone_series)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> complex_tone[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>smooth])</span>
<span id="cb26-48">    </span>
<span id="cb26-49">    tone_series <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(tone_series, complex_tone[(smooth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(complex_tone)])</span>
<span id="cb26-50">    </span>
<span id="cb26-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tone_series &lt;- c(tone_series,complex_tone)</span></span>
<span id="cb26-52">  }</span>
<span id="cb26-53">  </span>
<span id="cb26-54">}</span>
<span id="cb26-55"></span>
<span id="cb26-56"></span>
<span id="cb26-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use tuneR to convert to wave</span></span>
<span id="cb26-58">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wave</span>(</span>
<span id="cb26-59">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> tone_series,</span>
<span id="cb26-60">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> tone_series,</span>
<span id="cb26-61">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp.rate =</span> sampling_rate,</span>
<span id="cb26-62">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb26-63">)</span>
<span id="cb26-64"></span>
<span id="cb26-65">sound_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C7toG7"</span></span>
<span id="cb26-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeWave</span>(wave,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span>
<span id="cb26-67">av<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">av_audio_convert</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".mp3"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "/Users/mattcrump/Github/homophony.github.io/blog/25_1_25_24_r_sounds/C7toG7.mp3"</code></pre>
</div>
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.remove</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(sound_name,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".wav"</span>))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p><audio controls=""> <source src="C7toG7.mp3" type="audio/wav"> </audio></p>
<p>I think I am nearing the end of wanting to listen to things in terms of sine waves. Maybe I’ll try midi later.</p>
</section>
</section>
<section id="endless-progression" class="level2">
<h2 class="anchored" data-anchor-id="endless-progression">Endless progression</h2>
<p>Didn’t get this far today.</p>
<p>Goals:</p>
<ul>
<li>start on some chord</li>
<li>move away from the chord in similarity terms</li>
<li>after some steps, re-center on the current chord</li>
</ul>


</section>

 ]]></description>
  <category>computer music</category>
  <category>tuneR</category>
  <category>R music</category>
  <guid>https://homophony.quest/blog/25_1_25_24_r_sounds/</guid>
  <pubDate>Wed, 24 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/25_1_25_24_r_sounds/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Week of 1/21 - 1/27 daily practice post</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/24_1_24_24_weekly_practice/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"musical pattern. music wallpaper. intense music trip. music everywhere."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/24_1_24_24_weekly_practice/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>musical pattern. music wallpaper. intense music trip. music everywhere. - Dreamshaper v7</p>
</div></div><p>Trying out a single post to record daily practice exercises that I will continue to update throughout a week. It’s 1/24 and I will have to reconstruct what might have happened earlier this week.</p>
<section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section">1/21</h2>
<ul>
<li>did a couple of chord reaction time tests</li>
<li>got into the 7b5 chords a little bit, playing them in all keys very slowly</li>
</ul>
</section>
<section id="section-1" class="level2">
<h2 class="anchored" data-anchor-id="section-1">1/22</h2>
<ul>
<li>Drilled 7b5 chords a bunch</li>
</ul>
</section>
<section id="section-2" class="level2">
<h2 class="anchored" data-anchor-id="section-2">1/23</h2>
<ul>
<li>missed a day really oops</li>
<li>played “all of me” a couple times</li>
</ul>
</section>
<section id="section-3" class="level2">
<h2 class="anchored" data-anchor-id="section-3">1/24</h2>
<p>Major triads</p>
<p>Went through all of the below in all keys, anti-clockwise through circle of fifths</p>
<ul>
<li>play them once</li>
<li>played the triad in right hand, with different bass notes from the triad</li>
<li>played the triad up through keyboard through the inversions</li>
<li>played the triad down through the inversions</li>
<li>played the triad once, on the first inversion</li>
<li>played the triad once, on the second inversion</li>
</ul>
<p>I didn’t make too many mistakes, but I was more rusty at this then I thought I would be. I’m still slow on Db and Ab.</p>
<p>Starting on the different inversions is interesting. When I’m really into a jam, I don’t think about what inversions to play and they just happen (on a good day). But, in this case, I’m not used to deliberately trying to play a specific triad in a specific inversion. Playing the second inversion was hardest for some reason.</p>
</section>
<section id="section-4" class="level2">
<h2 class="anchored" data-anchor-id="section-4">1/25</h2>
<p>Found a lead sheet for Nate Smith’s Retold. Love this song. Challenging 9/8 rhythm. Messed about with this for a while.</p>
</section>
<section id="section-5" class="level2">
<h2 class="anchored" data-anchor-id="section-5">1/26</h2>
<p>More retold</p>
</section>
<section id="section-6" class="level2">
<h2 class="anchored" data-anchor-id="section-6">1/27</h2>
<p>Thinking more about symmetry, scales, chords and the circle of fifths.</p>
<ul>
<li>Started on C.
<ul>
<li>add G and F, the next notes going clock-wise or anti-clockwise
<ul>
<li>This creates Csus, F (add 9), Gsus7 (without the iii or V)</li>
</ul></li>
<li>add D and Bb
<ul>
<li>scale = C D F G Bb (a 5 note scale)</li>
</ul></li>
<li>add A and Eb
<ul>
<li>scale = C D Eb F G A Bb (7 note scale) Ends up as Bb major (2 fifths down from C)</li>
</ul></li>
<li>add E and Ab
<ul>
<li>scale = C D Eb E F G Ab A Bb (9 note scale)</li>
<li>messed about with building chords here</li>
<li>Chords with C (F Bb Eb Ab) are built off the anti-clockwise circle of fifths</li>
<li>Chords with C (G D A E) are built off the clockwise circle</li>
</ul></li>
</ul></li>
</ul>


</section>

 ]]></description>
  <category>piano practice</category>
  <guid>https://homophony.quest/blog/24_1_24_24_weekly_practice/</guid>
  <pubDate>Wed, 24 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/24_1_24_24_weekly_practice/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Minerva and expectancy from a chord vector space</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/23_1_23_24_minerva/</link>
  <description><![CDATA[ 




<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> diffusers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DiffusionPipeline</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_seed</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ssl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-8">ssl._create_default_https_context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ssl._create_unverified_context</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#locate library</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#model_id = "./stable-diffusion-v1-5"</span></span>
<span id="cb1-12">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dreamshaper-xl-turbo"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DiffusionPipeline.from_pretrained(</span>
<span id="cb1-15">    pretrained_model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18">pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommended if your computer has &lt; 64 GB of RAM</span></span>
<span id="cb1-21">pipeline.enable_attention_slicing(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minerva robot of wisdom. binary codes. thundercat cartoon. music. music theory. conceptual. reverberation. resonance. colorful."</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>):</span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]:</span>
<span id="cb1-27">    seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span></span>
<span id="cb1-28">    num_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-29">    set_seed(seed)</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(prompt,height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,num_images_per_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,num_inference_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_steps)</span>
<span id="cb1-32">    </span>
<span id="cb1-33">    image_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/synth_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpeg"</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35">    image_save <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.images[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].save(image_name.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(seed,num_steps))</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/23_1_23_24_minerva/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Minerva robot of wisdom. binary codes. thundercat cartoon. music. music theory. conceptual. reverberation. resonance. colorful.</p>
</div></div><p>This is a scratchpad post with R code to explore some esoteric computational modeling ideas. I want to get coding, but will put a bit of context around this.</p>
<p>My plan is to take the chord vector space I made yesterday (see last post), and put it into the memory of a MINERVA-II model. Then, I’m going to probe the model with various input patterns, and see what comes out.</p>
<p>I wish I had time to review MINERVA-II in more depth here, but I don’t. Very quickly, MINERVA-II is an instance-based model of human memory processes by Douglas Hintzman <span class="citation" data-cites="hintzman1984">(Hintzman 1984)</span>. This model was inspired by Richard Semon’s memory theory <span class="citation" data-cites="semon1923">(Semon 1923)</span>, which I find very poetic. Semon made up his own terms so that he could more precisely state his theoretical ideas, including words like engram, engraphic, and homophony.</p>
<p>The basic idea is that people store the patterns of individual experiences in memory. And, a current pattern can retrieve old memories by similarity. MINERVA-II uses a resonance metaphor. A pattern is presented to a memory system. The pattern activates all of the traces in memory, in proportion to their similarity to the pattern. In this way, memory is call and response process. The pattern of the present moment resonates with the memory system bringing forth a chorus of activated traces. This memory response is called the echo. The resonance between the structure of the pattern in the present moment and similar traces from the past is what Richard Semon called homophony. I have some <a href="https://www.crumplab.com/cognition/articles/modules/L11_Instance_Theory.html">lecture material on these concepts in my intro to cognition course</a>.</p>
<p>Now onto the R code. Memory is the chord vector matrix. I can “probe” the model by giving it any feature vector as an input. The input probe activates every chord in memory by it’s similarity (using the vector cosine). The memory responds as a similarity weighted sum. All of traces are multiplied by their similarity, and then summed up into a single feature vector, called the echo.</p>
<section id="loading-the-chord-vector-space" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-chord-vector-space">Loading the chord vector space</h2>
<p>The excel file for the chord vector space is available from the <a href="https://github.com/homophony/homophony.github.io/tree/main">github repo for this blog</a>.</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pre-processing to get the chord vectors</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load chord vectors</span></span>
<span id="cb2-5">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb2-8">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb2-14">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb2-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb2-21">  </span>
<span id="cb2-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb2-24">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb2-25">    </span>
<span id="cb2-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb2-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb2-28">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb2-29">    </span>
<span id="cb2-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb2-31">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb2-33">    </span>
<span id="cb2-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb2-35">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb2-36">  </span>
<span id="cb2-37">    }</span>
<span id="cb2-38">}</span></code></pre></div>
</details>
</div>
<p>Each chord is represented as a vector with 12 features, corresponding to each of the 12 possible notes. If a note is in a chord, then the note feature gets a 1 in the vector. All other features are set to 0.</p>
<p>The first 10 rows look like this:</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(c_chord_excel[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,])</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<colgroup>
<col style="width: 5%">
<col style="width: 19%">
<col style="width: 20%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">key</th>
<th style="text-align: left;">type</th>
<th style="text-align: left;">item</th>
<th style="text-align: right;">C</th>
<th style="text-align: right;">Db</th>
<th style="text-align: right;">D</th>
<th style="text-align: right;">Eb</th>
<th style="text-align: right;">E</th>
<th style="text-align: right;">F</th>
<th style="text-align: right;">Gb</th>
<th style="text-align: right;">G</th>
<th style="text-align: right;">Ab</th>
<th style="text-align: right;">A</th>
<th style="text-align: right;">Bb</th>
<th style="text-align: right;">B</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">C</td>
<td style="text-align: left;">key</td>
<td style="text-align: left;">C note</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C</td>
<td style="text-align: left;">scale</td>
<td style="text-align: left;">C major scale</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">C major triad</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">C minor triad</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">C6</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">Cm6</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">C (add 9)</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">Cm (add 9)</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C</td>
<td style="text-align: left;">dominant 7th</td>
<td style="text-align: left;">C7</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C</td>
<td style="text-align: left;">dominant 7th</td>
<td style="text-align: left;">C9</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>The vector space includes one feature vector for all of the following chords and scales:</p>
<p>C note, C major scale, C major triad, C minor triad, C6, Cm6, C (add 9), Cm (add 9), C7, C9, C9(#11), C9 (13), C13 (#11), C∆7, C∆9, C∆9(#11), C∆9(13), C∆7(#5), C∆7(b5), Cm7, Cm9, Cm11, Cm7(11), Cm13, Cm13(#11), Cm7(b5), Cm9(b5), Cm11(b5), Csus, C7sus, C9sus, C13sus, C7susb9, C13susb9, C7(b5), C7(#5), C7(b9), C7#9b5, C7#9#5, C7b9b5, C7b9#5, Cm∆7, Cm∆9, Cdim, Co7, Cdim(∆7), C7#11#9, C chromatic, C whole-tone, C major pentatonic, C minor pentatonic, C Ionian, C Dorian, C Phrygian, C Lydian, C Mixolydian, C Aeolian, C Locrian, C maj 6th diminished, C melodic minor, C half-step/whole-step, C whole-step/half-step, C Blues</p>
<p>The above shows everything in the key of C. The matrix contains all of the above in all of the keys. For a total of 756 patterns to be stored in the memory matrix.</p>
<p>In the next sections I’ll be giving this model an input pattern as a “reminder cue”, and then computing what the model “remembers” based on the cue. This is a way of asking about associations or expectations between one pattern and a history of other patterns. The answers the model gives back are entirely dependent on the nature of the memory traces.</p>
<p>The current set of chord vectors is very unlike my own musical experience. If I tried to capture my own musical experience as a series of individual traces, I would be inputting one feature vector for every chord, note, scale, or let’s say short phrase, that I have ever played in my entire life. That collection of traces would be severely biased in terms key, as I way over played things in CFGDA in my life.</p>
<p>The chord vector space I’m using here is more like an uniform agent who played every chord and scale equally frequently in all keys. So, the expectations returned by the model are in relation to that kind of unbiased musical history.</p>
</section>
<section id="minerva-ii-modeling" class="level2">
<h2 class="anchored" data-anchor-id="minerva-ii-modeling">MINERVA II modeling</h2>
<section id="probe-with-a-c-note" class="level3">
<h3 class="anchored" data-anchor-id="probe-with-a-c-note">Probe with a C note</h3>
<p>The following code shows the basic steps in probing the memory with a cue pattern. I used a C note, which is coded as a single 1, followed by 11 zeros.</p>
<p>The cosine similarity between the probe and all patterns in memory is computed. There is a possibility of “tuning” the similarities by raising them to an exponent, but I’ll talk about that later.</p>
<p>The individual patterns in memory are multiplied by their similarity to the probe. This allows the cue to selectively retrieve memories that contain features in the cue. For example, traces that have 0 similarity to the cue will be multiplied by 0, and thus eliminated from the echo. The echo is produced by summing the similarity weighted traces.</p>
<p>The values in the echo are additive and can get very large. In the last step I divide all of the values in the echo by the maximum value to squish them between 0 and 1.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb4-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe with a C</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Each of the 12 spots is a note, starting on C</span></span>
<span id="cb4-6">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb4-9">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb4-12">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-13"></span>
<span id="cb4-14">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb4-15">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb4-16"></span>
<span id="cb4-17">echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
1.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 
       Ab         A        Bb         B 
0.4200609 0.4772587 0.4790949 0.2163667 </code></pre>
</div>
</div>
<p>I like to think of the echo as the reminder values. Given the model hears a C, it is reminded of things that have a C in them. The echo is a similarity weighted sum of all of those things.</p>
</section>
<section id="full-cacophony" class="level3">
<h3 class="anchored" data-anchor-id="full-cacophony">Full cacophony</h3>
<p>A couple short detours before going in a more musical direction with this.</p>
<p>The echo in MINERVA-II is the concept that memory retrieval acts like a chorus of singers, where each singer is an individual memory trace.</p>
<p>Consider what would happen if memory was totally unselective and everything was retrieved all at once.</p>
<p>In the model, this would be like hearing all of the chords in the memory all at once. This can be represented by summing every trace together into one echo. This is the same as summing down the columns of the matrix like so:</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(memory)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>  C  Db   D  Eb   E   F  Gb   G  Ab   A  Bb   B 
338 338 338 338 338 338 338 338 338 338 338 338 </code></pre>
</div>
</div>
<p>Each note appears 338 times across all of the chords in memory. If they were all played at once, the echo would sound like every note played simultaneously with a loudness of 338. If I normalize the echo by dividing by 338, I’d get all 1s, which would be saying play all the notes at 100% amplitude. In other words, if memory reminded you of everything, everywhere, all at once, it sounds like full cacophony.</p>
</section>
<section id="the-sound-of-unbiased-memory-from-c" class="level3">
<h3 class="anchored" data-anchor-id="the-sound-of-unbiased-memory-from-c">The sound of unbiased memory from C</h3>
<p>MINERVA-II allows for selective retrieval of prior memories. The primary mechanism is that a probe pattern activates memories by similarity.</p>
<p>In this example, I apply the <code>ceiling()</code> function to the similarities and transform any positive value to 1, and leave the 0s at 0.</p>
<p>I’m using the C probe, so any chord pattern that has a C element in it will get a 1, and any chord pattern that does not have a C in it will get a 0.</p>
<p>I calculate both the echo and the normalized echo.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb8-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe with a C</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Each of the 12 spots is a note, starting on C</span></span>
<span id="cb8-6">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb8-9">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># force similarities to 0 or 1</span></span>
<span id="cb8-12">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(similarities)</span>
<span id="cb8-13"></span>
<span id="cb8-14">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb8-15">echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>  C  Db   D  Eb   E   F  Gb   G  Ab   A  Bb   B 
338  81 172 169 148 191 130 191 148 169 172  81 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb10-2">echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
1.0000000 0.2396450 0.5088757 0.5000000 0.4378698 0.5650888 0.3846154 0.5650888 
       Ab         A        Bb         B 
0.4378698 0.5000000 0.5088757 0.2396450 </code></pre>
</div>
</div>
<p>The first echo is basically co-occurrence context vector containing the co-occurrence frequency between C and the other notes, counting across all of the patterns in memory. The second echo is the same information, just in terms of proportion to the largest value.</p>
<p>C always co-occurs with itself. C co-occurs next most often with G and F, and then Bb and D etc.</p>
<p>This echo is not as cacophonous as hearing every single chord in memory played at the same time. However, i’m guessing this would still sound pretty cacophonous, as it is the sound of about 338 patterns that all contain a C played at the same time.</p>
<p>At some point, hopefully today, I’d like to synthesize tones using these echo values for note amplitude and hear what they sound like.</p>
</section>
<section id="increasingly-selective-echoes-of-c" class="level3">
<h3 class="anchored" data-anchor-id="increasingly-selective-echoes-of-c">Increasingly selective echoes of C</h3>
<p>MINERVA-II has a few options for controlling how many memories get added into the echo. After computing similarities between the probe and memory traces, the similarities can be raised to a power before weighting the traces. As the exponent increases, smaller similarity values get squashed into 0 and become effectively 0. Larger similarity values remain proportionally larger. Perfectly similar traces remain at 1 regardless of the exponent.</p>
<p>The bottom line is that as the power is raised, fewer traces (only the most similar) are allowed to contribute to the echo. As a result, the echo becomes much less cacophonous.</p>
<p>The code below shows what happens when the probe is a C, and the exponent is raised to 1, 3, 11, and 51.</p>
<p>When the exponent is small, C is the loudest feature in the echo, but many other notes have some loudness too.</p>
<p>When the exponent is increased, the C remains the loudest, but the other notes get softer.</p>
<p>In the case of this vector space, driving up the exponent really, really high, essentially causes only the identical patterns in memory to be retrieved. In the extreme, the C retrieves itself, and there are not other sounds of co-occurrence.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb12-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe with a C</span></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Each of the 12 spots is a note, starting on C</span></span>
<span id="cb12-6">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb12-9">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb12-10"></span>
<span id="cb12-11">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb12-12">echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
1.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 
       Ab         A        Bb         B 
0.4200609 0.4772587 0.4790949 0.2163667 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)))</span>
<span id="cb14-2">echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
1.0000000 0.1731107 0.4114787 0.4288597 0.3797730 0.4798933 0.3271873 0.4798933 
       Ab         A        Bb         B 
0.3797730 0.4288597 0.4114787 0.1731107 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)))</span>
<span id="cb16-2">echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>          C          Db           D          Eb           E           F 
1.000000000 0.005599951 0.016650339 0.025743877 0.020721170 0.026529044 
         Gb           G          Ab           A          Bb           B 
0.018535963 0.026529044 0.020721170 0.025743877 0.016650339 0.005599951 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>)))</span>
<span id="cb18-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> C Db  D Eb  E  F Gb  G Ab  A Bb  B 
 1  0  0  0  0  0  0  0  0  0  0  0 </code></pre>
</div>
</div>
</section>
</section>
<section id="messing-around" class="level2">
<h2 class="anchored" data-anchor-id="messing-around">Messing around</h2>
<p>I’m using this code block to try different probe patterns and see what happens. In general, the echo contains the elements of the probe, and then partial activation of other elements in approximate orders that seem to make musical sense.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb20-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe using row names</span></span>
<span id="cb20-5">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C major triad'</span>,]</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb20-8">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb20-11">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb20-12"></span>
<span id="cb20-13">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb20-14">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb20-15"></span>
<span id="cb20-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(echo,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        G         C         E         A         D        Bb         F         B 
1.0000000 0.9648918 0.9283912 0.6326961 0.6308542 0.4828259 0.4436583 0.4141189 
       Gb        Eb        Db        Ab 
0.3390815 0.3329919 0.3127329 0.3109608 </code></pre>
</div>
</div>
<section id="adding-probes-together" class="level3">
<h3 class="anchored" data-anchor-id="adding-probes-together">Adding probes together</h3>
<p>Let’s say one is playing a Dm7 chord in the left hand, and a G as part of a melody line. A probe could be constructed by adding together the vector for Dm7 and G. I’m also sorting the echo by feature intensity. I wonder if the order of notes in the echo could work for figuring out which scales to play over what chords and situations.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb22-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe using row names</span></span>
<span id="cb22-5">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(chord_matrix[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Dm7'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'G note'</span>),])</span>
<span id="cb22-6"></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb22-8">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb22-9"></span>
<span id="cb22-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb22-11">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb22-12"></span>
<span id="cb22-13">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb22-14">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb22-15"></span>
<span id="cb22-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(echo,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C         D         G         F         A         E        Bb        Eb 
1.0000000 0.9970230 0.9948008 0.9326157 0.9326157 0.5419088 0.5419088 0.4465277 
        B        Ab        Gb        Db 
0.4378429 0.3103659 0.2854669 0.2686588 </code></pre>
</div>
</div>
</section>
<section id="discrepancy" class="level3">
<h3 class="anchored" data-anchor-id="discrepancy">Discrepancy</h3>
<p>The echo contains partial activations of non-probe features. These in some sense represent an expectation about what elements usually co-occur with the probe features in the stored memory traces.</p>
<p>It may be interesting to compute a discrepancy vector, which is a difference between the pattern in the probe and the echo.</p>
<p>These differences in expectation might be interesting to think about in terms of musical tension and resolution.</p>
<p>random notes:</p>
<ul>
<li>subtraction introduces negative values and negative similarity</li>
<li>which way to subtract? probe-echo or echo-probe</li>
</ul>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb24-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe using row names</span></span>
<span id="cb24-5">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C note'</span>,]</span>
<span id="cb24-6"></span>
<span id="cb24-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb24-8">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb24-9"></span>
<span id="cb24-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb24-11">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb24-12"></span>
<span id="cb24-13">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb24-14">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb24-15">echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
1.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 
       Ab         A        Bb         B 
0.4200609 0.4772587 0.4790949 0.2163667 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">discrepancy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>probe</span>
<span id="cb26-2">discrepancy</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
0.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 
       Ab         A        Bb         B 
0.4200609 0.4772587 0.4790949 0.2163667 </code></pre>
</div>
</div>
<p>In this case the discrepancy vector has activation across all notes except C. Although the activation is not uniform, this discrepancy vector is similar to the chromatic scale, which is all of the notes.</p>
<p>Submitting the discrepancy vector as a probe to memory, and then listing the top 10 most similar traces in memory as a way to interpret the vector in terms of the chord patterns.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> discrepancy</span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb28-4">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb28-5"></span>
<span id="cb28-6">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(similarities),</span>
<span id="cb28-7">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">similarities =</span> similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(similarities))</span>
<span id="cb28-9">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>                   chords similarities
C chromatic   C chromatic    0.9274934
Db chromatic Db chromatic    0.9274934
D chromatic   D chromatic    0.9274934
Eb chromatic Eb chromatic    0.9274934
E chromatic   E chromatic    0.9274934
F chromatic   F chromatic    0.9274934
Gb chromatic Gb chromatic    0.9274934
G chromatic   G chromatic    0.9274934
Ab chromatic Ab chromatic    0.9274934
A chromatic   A chromatic    0.9274934</code></pre>
</div>
</div>
<p>Adding the echo to probe. After hearing a note the model retrieves the echo as a response. In this new moment the original note and the retrieved chorus are a new combined probe.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb30-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb30-3"></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe using row names</span></span>
<span id="cb30-5">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C note'</span>,]</span>
<span id="cb30-6"></span>
<span id="cb30-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb30-8">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb30-9"></span>
<span id="cb30-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb30-11">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb30-12"></span>
<span id="cb30-13">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb30-14">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb30-15">echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
1.0000000 0.2163667 0.4790949 0.4772587 0.4200609 0.5390773 0.3656121 0.5390773 
       Ab         A        Bb         B 
0.4200609 0.4772587 0.4790949 0.2163667 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add echo to probe</span></span>
<span id="cb32-2">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> probe<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>echo</span>
<span id="cb32-3"></span>
<span id="cb32-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb32-5">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb32-6"></span>
<span id="cb32-7">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb32-8"></span>
<span id="cb32-9">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb32-10">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb32-11">echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
1.0000000 0.6284936 0.7864139 0.7701819 0.7288598 0.8174667 0.6928161 0.8174667 
       Ab         A        Bb         B 
0.7288598 0.7701819 0.7864139 0.6284936 </code></pre>
</div>
</div>
<p>This is like having steps of iterative retrieval. A variation is to get the retrieved echo and then submit the echo as the probe. What happens is that the echo fills up with more general co-occurrence information.</p>
</section>
<section id="echo-meaning" class="level3">
<h3 class="anchored" data-anchor-id="echo-meaning">Echo meaning</h3>
<p>The echo is a feature vector in the same space as the chords. In general, the echo will contain more activation across all elements compared to any individual chord. This is because the echo sums over many chords, and typically sums over enough chords that all notes end up in the sum.</p>
<p>In this sense, the fact that an echo usually has partial activation across all notes, makes the pattern in the echo similar to the chromatic scale, which has all notes. This is not a particularly interesting or nuanced meaning of the echo. If the echo was all 1s, then it would be the chromatic scale.</p>
<p>The activation values in the echo depend on the activation function that raises similarity to a power. A given echo can be interpreted in terms of the original chord vectors by calculating similarity between the echo and all of the chords, and then looking at the chords that are most similar. When the exponent is small, the most similar chords returned are all the chromatic scales (which are identical), and other chords with lots of notes in them.</p>
<p>As the exponent is raised higher, the pattern in the echo grows more similar to the probe pattern (with some extra activations), and the echo becomes similar to different patterns of chords, eventually honing in on the same ordering as the probe pattern would have.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb34-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb34-3"></span>
<span id="cb34-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe using row names</span></span>
<span id="cb34-5">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C note'</span>,]</span>
<span id="cb34-6"></span>
<span id="cb34-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb34-8">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb34-9"></span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb34-11">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb34-12"></span>
<span id="cb34-13">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb34-14">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb34-15">echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>         C         Db          D         Eb          E          F         Gb 
1.00000000 0.02269835 0.06352622 0.08694634 0.07307524 0.09134910 0.06433469 
         G         Ab          A         Bb          B 
0.09134910 0.07307524 0.08694634 0.06352622 0.02269835 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">echo_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(echo,memory)</span>
<span id="cb36-2">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(echo_similarities),</span>
<span id="cb36-3">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">similarities =</span> echo_similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(echo_similarities))</span>
<span id="cb36-5">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>                       chords similarities
C note                 C note    0.9732485
Csus                     Csus    0.6645644
C minor triad   C minor triad    0.6620904
F major triad   F major triad    0.6620904
Adim                     Adim    0.6596165
C major triad   C major triad    0.6542962
F minor triad   F minor triad    0.6542962
Ab major triad Ab major triad    0.6518223
A minor triad   A minor triad    0.6518223
Fsus                     Fsus    0.6489305
Gsus                     Gsus    0.6489305
Cdim                     Cdim    0.6469109
Gbdim                   Gbdim    0.6469109
F (add 9)           F (add 9)    0.6178398
Cm6                       Cm6    0.6156973
F7                         F7    0.6156973
Am7(b5)               Am7(b5)    0.6156973
Fm (add 9)         Fm (add 9)    0.6110898
C6                         C6    0.6089473
F∆7                       F∆7    0.6089473</code></pre>
</div>
</div>
<p>In this variation the echo is submitted as the probe to generate a second echo. The first echo is already very general because even a single C note is in many chords. The second echo is extremely general because it has positive similarity to all chords. The values in the second echo can be thought of as reflecting very general expectations about note co-occurrence. The first echo also has some of these very general expectations.</p>
<p>What happens here is some proportion of the second echo, which represents super general features, is subtracted from the first echo. This allows the first echo to reflect more nuanced and specific expectations given the probe.</p>
<p>It seems necessary to turn this into a shiny app or something, where the parameters can be wiggled around as a way to explore whether there are interesting things going on.</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb38-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb38-3"></span>
<span id="cb38-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe using row names</span></span>
<span id="cb38-5">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Dm7'</span>,]</span>
<span id="cb38-6"></span>
<span id="cb38-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb38-8">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb38-9"></span>
<span id="cb38-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb38-11">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb38-12"></span>
<span id="cb38-13">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb38-14">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb38-15">echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
0.9918638 0.2479850 1.0000000 0.4178599 0.5037347 0.9766951 0.3491312 0.7242753 
       Ab         A        Bb         B 
0.3603990 0.9657370 0.4859291 0.4261934 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add echo to probe</span></span>
<span id="cb40-2">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo</span>
<span id="cb40-3"></span>
<span id="cb40-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb40-5">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb40-6"></span>
<span id="cb40-7">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb40-8"></span>
<span id="cb40-9">second_echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb40-10">second_echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> second_echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(second_echo))</span>
<span id="cb40-11">second_echo</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>        C        Db         D        Eb         E         F        Gb         G 
0.9946912 0.5014757 1.0000000 0.6381784 0.7237607 0.9389013 0.5636836 0.9371725 
       Ab         A        Bb         B 
0.5704482 0.9385442 0.7156892 0.6432196 </code></pre>
</div>
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># subtract a weighted portion of second echo</span></span>
<span id="cb42-2">more_specific_echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>second_echo)</span>
<span id="cb42-3"></span>
<span id="cb42-4">echo_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(more_specific_echo,memory)</span>
<span id="cb42-5">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(echo_similarities),</span>
<span id="cb42-6">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">similarities =</span> echo_similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb42-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(echo_similarities))</span>
<span id="cb42-8">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>                               chords similarities
Dm7                               Dm7    0.8386204
F6                                 F6    0.8386204
D minor triad           D minor triad    0.7413557
F major triad           F major triad    0.7368539
Dm7(11)                       Dm7(11)    0.7272550
D minor pentatonic D minor pentatonic    0.7272550
F major pentatonic F major pentatonic    0.7272550
G9sus                           G9sus    0.7272550
Dm9                               Dm9    0.6825942
Bb∆9                             Bb∆9    0.6724193
D7#11#9                       D7#11#9    0.6640474
F (add 9)                   F (add 9)    0.6126096
Dm11                             Dm11    0.6022796
G13sus                         G13sus    0.6022796
G7sus                           G7sus    0.5976717
C13sus                         C13sus    0.5929913
Gm11                             Gm11    0.5929913
F9 (13)                       F9 (13)    0.5880307
D7sus                           D7sus    0.5869733
D Blues                       D Blues    0.5853489</code></pre>
</div>
</div>
<p>Lots of breadcrumbs here to follow up on later. Ultimately, I didn’t get close to what I was hoping to accomplish. Making a note here that it would be interesting if this type of analysis could provide insight into chord movement from one to another.</p>
<hr>
<p>Some code for listening to echoes in terms of complex tones made from sine waves, with sine wave amplitude for each note set by the echo intensity for each note.</p>
<p>need to explore this</p>
<div class="cell">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tuneR)</span>
<span id="cb44-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to generate a complex tone</span></span>
<span id="cb44-3">generate_complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(duration, sampling_rate, frequencies, amplitudes) {</span>
<span id="cb44-4">  time_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, duration, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>sampling_rate)</span>
<span id="cb44-5">  complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(frequencies), <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(i) {</span>
<span id="cb44-6">    amplitudes[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> frequencies[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_points)</span>
<span id="cb44-7">  })</span>
<span id="cb44-8">  </span>
<span id="cb44-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(complex_tone))</span>
<span id="cb44-10">}</span>
<span id="cb44-11"></span>
<span id="cb44-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set parameters</span></span>
<span id="cb44-13">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb44-14">sampling_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hz (standard audio sampling rate)</span></span>
<span id="cb44-15">frequencies <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">261.63</span>,</span>
<span id="cb44-16"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">277.18</span>,</span>
<span id="cb44-17"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">293.66</span>,</span>
<span id="cb44-18"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">311.13</span>,</span>
<span id="cb44-19"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">329.63</span>,</span>
<span id="cb44-20"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">349.23</span>,</span>
<span id="cb44-21"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">369.99</span>,</span>
<span id="cb44-22"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">392</span>,</span>
<span id="cb44-23"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">415.3</span>,</span>
<span id="cb44-24"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span>,</span>
<span id="cb44-25"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">466.16</span>,</span>
<span id="cb44-26"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">493.88</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># frequencies of sine waves in Hz</span></span>
<span id="cb44-27"></span>
<span id="cb44-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb44-29">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb44-30"></span>
<span id="cb44-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe with a C</span></span>
<span id="cb44-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Each of the 12 spots is a note, starting on C</span></span>
<span id="cb44-33">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C note'</span>,]</span>
<span id="cb44-34"></span>
<span id="cb44-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb44-36">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb44-37"></span>
<span id="cb44-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb44-39">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb44-40"></span>
<span id="cb44-41">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb44-42">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb44-43"></span>
<span id="cb44-44">amplitudes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># amplitudes of sine waves</span></span>
<span id="cb44-45"></span>
<span id="cb44-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate complex tone</span></span>
<span id="cb44-47">complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_complex_tone</span>(duration, sampling_rate, frequencies, amplitudes)</span>
<span id="cb44-48">complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(complex_tone))</span>
<span id="cb44-49">complex_tone <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complex_tone<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32767</span></span>
<span id="cb44-50"></span>
<span id="cb44-51"></span>
<span id="cb44-52">wave <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wave</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> complex_tone, </span>
<span id="cb44-53">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> complex_tone,</span>
<span id="cb44-54">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp.rate =</span> sampling_rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb44-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#writeWave(wave,"test.wav")</span></span></code></pre></div>
</details>
</div>
<hr>
<p>experiment graveyard of fun ideas</p>
<p>extruding a subtracted echo from the middle out</p>
<div class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try minerva</span></span>
<span id="cb45-2">memory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix</span>
<span id="cb45-3"></span>
<span id="cb45-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probe using row names</span></span>
<span id="cb45-5">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chord_matrix[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C7'</span>,]</span>
<span id="cb45-6"></span>
<span id="cb45-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>){</span>
<span id="cb45-8"></span>
<span id="cb45-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute similarities between probe and all traces</span></span>
<span id="cb45-10">similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(probe,memory)</span>
<span id="cb45-11"></span>
<span id="cb45-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuning function: raise similarities to a power </span></span>
<span id="cb45-13">activations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> similarities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb45-14"></span>
<span id="cb45-15">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>((memory<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(activations)))</span>
<span id="cb45-16">echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(echo))</span>
<span id="cb45-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#echo</span></span>
<span id="cb45-18"></span>
<span id="cb45-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add echo to probe</span></span>
<span id="cb45-20">subtracted_echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>probe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>)</span>
<span id="cb45-21">subtracted_echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> subtracted_echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(subtracted_echo))</span>
<span id="cb45-22">subtracted_echo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> subtracted_echo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb45-23"></span>
<span id="cb45-24">echo_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RsemanticLibrarian<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine_x_to_m</span>(subtracted_echo, memory)</span>
<span id="cb45-25"></span>
<span id="cb45-26">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(echo_similarities),</span>
<span id="cb45-27">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">similarities =</span> echo_similarities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb45-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(echo_similarities))</span>
<span id="cb45-29"></span>
<span id="cb45-30">next_chord <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>chord[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb45-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#probe &lt;- chord_matrix[next_chord,]</span></span>
<span id="cb45-32">probe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> subtracted_echo</span>
<span id="cb45-33"></span>
<span id="cb45-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(next_chord)</span>
<span id="cb45-35"></span>
<span id="cb45-36">}</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "D note"
[1] "C∆7"
[1] "D note"
[1] "Am9"
[1] "D note"
[1] "B7(#5)"
[1] "Asus"
[1] "A note"
[1] "E note"
[1] "A note"</code></pre>
</div>
</div>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-hintzman1984" class="csl-entry">
Hintzman, Douglas L. 1984. <span>“MINERVA 2: A Simulation Model of Human Memory.”</span> <em>Behavior Research Methods, Instruments, &amp; Computers</em> 16 (2): 96101. <a href="https://doi.org/10.3758/BF03202365">https://doi.org/10.3758/BF03202365</a>.
</div>
<div id="ref-semon1923" class="csl-entry">
Semon, R. 1923. <span>“Mnemic Psychology (b. Duffy, Trans.).”</span> <em>Concord, Ma: George Allen &amp; Unwin.(original Work Published 1909)</em>.
</div>
</div></section></div> ]]></description>
  <category>chord similarity</category>
  <category>MINERVA</category>
  <guid>https://homophony.quest/blog/23_1_23_24_minerva/</guid>
  <pubDate>Tue, 23 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/23_1_23_24_minerva/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Chord Similarity analysis table</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/22_1_22_24_chord_similarity/</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/22_1_22_24_chord_similarity/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>piano chord similarity analysis. cartoon. colorful. musical. science.</p>
</div></div><p>This is a quick post with some tools for looking at chord similarity.</p>
<p>I took all of the chords on this <a href="https://musictheory.pugetsound.edu/mt21c/ChordLabels.html">music theory page</a>, and represented them in a chord vector space using one-hot codes.</p>
<p>Each chord is represented as a vector with 12 features, corresponding to each of the 12 possible notes. If a note is in a chord, then the note feature get’s a 1 in the vector. All other features are set to 0.</p>
<p>Here’s a few examples of what the vectors look like.</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<colgroup>
<col style="width: 6%">
<col style="width: 11%">
<col style="width: 22%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
<col style="width: 4%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">key</th>
<th style="text-align: left;">type</th>
<th style="text-align: left;">item</th>
<th style="text-align: right;">C</th>
<th style="text-align: right;">Db</th>
<th style="text-align: right;">D</th>
<th style="text-align: right;">Eb</th>
<th style="text-align: right;">E</th>
<th style="text-align: right;">F</th>
<th style="text-align: right;">Gb</th>
<th style="text-align: right;">G</th>
<th style="text-align: right;">Ab</th>
<th style="text-align: right;">A</th>
<th style="text-align: right;">Bb</th>
<th style="text-align: right;">B</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">C</td>
<td style="text-align: left;">key</td>
<td style="text-align: left;">C note</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C</td>
<td style="text-align: left;">scale</td>
<td style="text-align: left;">C major scale</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">C major triad</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">C minor triad</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C</td>
<td style="text-align: left;">triads</td>
<td style="text-align: left;">C6</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>I created vectors for 47 chords across all keys. This results in a matrix with 564 rows (for each chord vector) and 12 columns for each note feature.</p>
<p>Next, I used the <a href="https://en.wikipedia.org/wiki/Cosine_similarity">vector cosine</a> to compute the similarity between each chord and every other chords. That results in a 564x564 chord-similarity matrix.</p>
<p>In the matrix, similarity ranges from 0 (no similarity) to 1 (perfect similarity). The similarity function basically tracks how many overlapping features there are between two chords. If each chord has zero shared notes, then similarity will be 0. As a chord increases in the number of shared notes, then similarity increases.</p>
<p>If I have extra time I may play around with some additional ways to visualize this matrix. For now, I’m using the datatable library to load the matrix into this webpage. It’s a bit clunky and very large.</p>
<p>The table should scroll left and right. The columns can be sorted ascending or descending by clicking the little arrows beside a column name. Sorting from the largest value to the smallest value will re-arrange the row-names on the left side. This produces an ordered list of chords from most to least similar to the column name that was clicked.</p>
<section id="shiny-app" class="level2">
<h2 class="anchored" data-anchor-id="shiny-app">Shiny app</h2>
<p>update</p>
<p>There were originally tables in this post, but they were basically unusable. Ideally, I’d like to search the tables on my ipad while it is sitting on my piano.</p>
<p>I tried to make a shiny app using webr (that would run without a server), but I couldn’t make it work.</p>
<p>So, here is a shiny app that does work:</p>
<p><a href="https://crumplab.shinyapps.io/webr-chord-similarity/" class="uri">https://crumplab.shinyapps.io/webr-chord-similarity/</a></p>
</section>
<section id="first-order-chord-similarity" class="level2">
<h2 class="anchored" data-anchor-id="first-order-chord-similarity">First order chord similarity</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import excel sheet</span></span>
<span id="cb1-2">c_chord_excel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chord_vectors.xlsx"</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab feature vectors</span></span>
<span id="cb1-5">c_chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>])</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign row names to the third column containing chord names</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(c_chord_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define all keys</span></span>
<span id="cb1-11">keys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Db"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ab"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bb"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the excel sheet only has chords in C</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop through the keys, permute the matrix to get the chords in the next key</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the permuted matrix to new rows in the overall chord_matrix</span></span>
<span id="cb1-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)) {</span>
<span id="cb1-18">  </span>
<span id="cb1-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb1-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize chord_matrix with C matrix</span></span>
<span id="cb1-21">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> c_chord_matrix</span>
<span id="cb1-22">    </span>
<span id="cb1-23">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#permute the matrix as a function of iterator</span></span>
<span id="cb1-25">    new_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(c_chord_matrix[, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>],c_chord_matrix[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i)] )</span>
<span id="cb1-26">    </span>
<span id="cb1-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the rows with the new key</span></span>
<span id="cb1-28">    new_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, keys[i], c_chord_excel[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb1-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(new_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> new_names</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append the new_matrix to chord_matrix</span></span>
<span id="cb1-32">    chord_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(chord_matrix,new_matrix)</span>
<span id="cb1-33">  </span>
<span id="cb1-34">    }</span>
<span id="cb1-35">}</span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate similarities between keys</span></span>
<span id="cb1-38">key_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(chord_matrix)</span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate similarities between keys</span></span>
<span id="cb1-41">chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb1-42"></span>
<span id="cb1-43">chord_properties <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(c_chord_excel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(keys)),</span>
<span id="cb1-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(keys, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(c_chord_matrix)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb1-46">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chord_names  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_similarities)</span>
<span id="cb1-47">)</span>
<span id="cb1-48"></span>
<span id="cb1-49">chord_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties,</span>
<span id="cb1-50">                            chord_similarities)</span>
<span id="cb1-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(chord_similarities) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb1-52"></span>
<span id="cb1-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print table</span></span>
<span id="cb1-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># try datatable options...didn't work as I wanted</span></span>
<span id="cb1-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DT::datatable(</span></span>
<span id="cb1-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   chord_similarities[1:50,1:50],</span></span>
<span id="cb1-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   extensions = c("FixedColumns","SearchBuilder","Buttons"),</span></span>
<span id="cb1-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   options = list(</span></span>
<span id="cb1-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     paging = TRUE,</span></span>
<span id="cb1-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     pageLength =  25,</span></span>
<span id="cb1-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     fixedColumns = list(leftColumns = 4),</span></span>
<span id="cb1-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     dom = "BQlfrtip",</span></span>
<span id="cb1-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     searchBuilder = TRUE,</span></span>
<span id="cb1-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     search = list(return = TRUE),</span></span>
<span id="cb1-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     buttons = 'colvis'</span></span>
<span id="cb1-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   )</span></span>
<span id="cb1-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb1-68"></span>
<span id="cb1-69">DT<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datatable</span>(</span>
<span id="cb1-70">  chord_similarities,</span>
<span id="cb1-71">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extensions =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FixedColumns"</span>,</span>
<span id="cb1-72">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-73">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paging =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb1-74">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pageLength =</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb1-75">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixedColumns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">leftColumns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-76">  )</span>
<span id="cb1-77">)</span></code></pre></div>
</div>
</section>
<section id="second-order-similarities" class="level2">
<h2 class="anchored" data-anchor-id="second-order-similarities">Second-order similarities</h2>
<p>update: this table has been moved to the shiny app</p>
<p>This table uses the above cosine similarity vectors for each chord as the basis vectors, and then computes another similarity matrix. The approach has interesting properties in other domains like computational modeling of word semantics. Just curious to look at it in this context.</p>
<p>One basic observation is that in the first-order similarity space (above), there are many 0 similarities between pairs. For example, the single note C has 0 similarity to every other single note, because each note only has one feature, and the features never overlap. However, in the second-order matrix, individual notes now have some positive similarity to each other. This is because the whole vector of similarities for C (from above), now has many shared elements with the vectors for the other chords, and a similarity can be computed.</p>
<p>I suspect this table will have some more musically interesting things going on.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">first_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(chord_matrix))</span>
<span id="cb2-2">second_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lsa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cosine</span>(first_order)</span>
<span id="cb2-3"></span>
<span id="cb2-4">second_order_similarities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(chord_properties,</span>
<span id="cb2-5">                                   second_order)</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(second_order_similarities) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb2-7"></span>
<span id="cb2-8">DT<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datatable</span>(</span>
<span id="cb2-9">  second_order_similarities,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extensions =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FixedColumns"</span>,</span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb2-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paging =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pageLength =</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb2-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixedColumns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">leftColumns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb2-15">  )</span>
<span id="cb2-16">)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>chord similarity</category>
  <guid>https://homophony.quest/blog/22_1_22_24_chord_similarity/</guid>
  <pubDate>Mon, 22 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/22_1_22_24_chord_similarity/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Expanding the chord reaction time test</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/21_1_21_24_chord_reaction_time/</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/21_1_21_24_chord_reaction_time/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>cartoon thundercat scientist building a synthesizer. laboratory. science. 80s cartoon. space music.</p>
</div></div><p>I’ve been tinkering with a web-based “Chord Reaction Time” test to measure how fast I can play various chords on demand. The first version of the task had all the keys and three basic 7th chords (7, -7, ∆7). The newer version adds a selection screen, and more chords to practice. I don’t have a demo to share yet, but here’s a figure of what happens:</p>
<p><img src="https://homophony.quest/blog/21_1_21_24_chord_reaction_time/images/Screenshot 2024-01-21 at 8.05.10 AM.png" class="img-fluid"></p>
<p>At the moment, whenever I play a chord in response to a name, I have to simultaneously press the space bar on a bluetooth keyboard. That keypress records my reaction time to the chord and triggers the next trial. This coming week I’ll look into using the laptop microphone to record reaction time by analyzing amplitude changes (and then later something similar using MIDI).</p>
<p>Yesterday afternoon I tried my hand at all the chords in all the keys. I haven’t looked at the data yet, but I’m sure it will tell me that I’m slow at the chords that I already know I’m slow on.</p>
<p>This graph averages over keys and shows mean chord reaction time for each type of tested chord form.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/21_1_21_24_chord_reaction_time/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I should dedicate practice to all of the chords above the 2 second range.</p>
<p>One question I have is whether the performance on this kind of test would meaningfully predict my ability to fluently play through chord changes on lead sheets.</p>
<p>My experience right now is that I can often get through chord changes on a new song without too much trouble, but I’ll get tripped on the altered chords with flats and sharps. More like fall all over the place. I can’t dead reckon those chords. Instead, I’ll sit there and take 5 seconds or more to puzzle out the chord, which ruins the flow. If I’m feeling diligent I might work out a fingering pattern that makes it easy to play in that context. However, I don’t appear to retain any of that chord knowledge in a general way.</p>
<p>I assume that if I was able to play all my chords really well in the context of playing lead sheets then my reaction times in the above graph would be faster and more uniform. I could practice this test over and over, and I’m pretty confident that I would get faster on the slower chords. However, one possibility is that that this learning would be somewhat specific to the peculiar demands of this very non-musical chord production task. So, it’s not clear to me that improvements derived from practicing chording in this task would fully generalize to helping me play lead sheets. At the same time, If I can get all the chords down to under 2 seconds in all the keys, that’s gotta help.</p>
<p>Breakfast time.</p>
<hr>
<p>I did practice some of the extended chords yesterday. This morning I did a round of practice/testing on the 7b9 chords.</p>
<p>Yesterday, 7b9 were initially excruciatingly slow. I couldn’t play any of them and had to construct them on the fly. As the graph below shows, I took over 12 seconds to produce some of the chords.</p>
<p>Practice felt very slow and I didn’t feel like I was locking in new patterns at a fingering level. For example, I can visualize a C7 chord immediately, and still can’t visualize a C7b9 (even after all this practice).</p>
<p>Nevertheless, the graph shows some substantial gains in chord production time. There were a few stages in learning to play this chord. Stage 1 was having no clue and working out each chord anew. In stage 2, I settled on a method to get to the 7b9: play the 7th chord in root position, go up 1 inversion, but instead of playing the root at the top, play 1 semitone above the root. Stage 2 was pretty slow also. At some point I realized that I already knew all of these chords as o7 chords. For example C7b9 without the root has E-G-Bb-Db, which are all the notes in Eo7, Go7, Bbo7, and Dbo7. In stage 3, I switched to translating the chord name, “C7b9”, and thinking play the o7 on the third (or, in this case Eo7). That helped a little bit in terms of speed, and I think it makes musical sense to build mental associations between the 7b9 and o7 anyway.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/21_1_21_24_chord_reaction_time/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>```</p>



 ]]></description>
  <category>practice</category>
  <category>chord reaction time</category>
  <guid>https://homophony.quest/blog/21_1_21_24_chord_reaction_time/</guid>
  <pubDate>Sun, 21 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/21_1_21_24_chord_reaction_time/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Estimating practice time needed, and a bit on contextual interference</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/19_1_19_24_Contextual_Interference/</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/19_1_19_24_Contextual_Interference/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Repeating practice in a key vs.&nbsp;alternating practice across keys</p>
</div></div><p>I’ve been having so much fun making time for more music. I so needed this.</p>
<p>As my next semester at Brooklyn College is about to begin next week, I’m hoping I can keep up some of this momentum. Coincidentally, this semester I am planning to turn some of my research program in cognitive psychology towards aspects of music cognition, and I ended up <a href="https://www.crumplab.com/blog/660_music_cognition/">posting about that a little bit on my main research blog yesterday</a>. The research won’t necessarily mean playing more music, but it should at least keep me on my fingers, so to speak.</p>
<p>Today’s post continues in the spirit of intermingling my interests in cognition and piano practice.</p>
<section id="recap" class="level2">
<h2 class="anchored" data-anchor-id="recap">Recap</h2>
<p>Over the past few posts I’ve been focusing on getting command of the maj6 diminished scale in the key of B. <a href="https://homophony.quest/blog/18_1_18_24_Relearning/">I measured my improvement with practice</a> and found a few things were happening. When I sit down to play the scale (I’m playing it as a series of chords ascending), there is a big start-up cost. On the first go round it took me 104 seconds to play the scale. Then a day later only about 60 seconds. Last night I started up at about 20 seconds. For each practice set, I also continued to produce the scale for 10 minutes, by playing it over and over, in what I might term massed repetitive practice. Within each practice set, my scale completion times decreased with each attempt. I usually got down to about 10 seconds to complete the scale. Still pretty slow, but making progress.</p>
<p>I can play the 7th chords of a regular major scale in C in about 3 seconds, from a cold start. So, I’m using 3 seconds as a rough achievement criterion. If I can get my B maj6 diminished scale to 3 seconds, then I’ll have achieved that somewhat arbitrary criterion. And, then I would literally be confident that I could play it in my sleep. I was trying to play it going to sleep in my head last night, and it is still slow to visualize.</p>
<p>I am definitely hitting a floor right now at about 10 seconds, and there could be several problems that I need to sort out. I don’t often play in B, and it might be one of my weakest keys over all. Sometimes I get confused about whether I should be playing an E or F (yikes). The maj6 diminished scales adds a b6, and sometimes I get confused about that note (G). I don’t know why I sometimes want to play A. I conceptually know the correct chords and fingerings, but can’t execute everytime, especially with speed. So, in cognitive psychology terms, I am running up against the speed-accuracy tradeoff. I can go slow and accurate, but errors creep in approaching 10 seconds, and then they really popoff if I push past faster.</p>
<p>If I limit my musical goals to getting this one scale down, then I have so many questions about how to go about doing that. Overall, it is clear that I need to practice, practice, practice, and I will meet my fluency criterion eventually. But, there are lots of things to practice. I could practice the chords ascending only, which is how I’m measuring my performance. I could practice up and down, or arpeggios, and all sorts of other stuff. I could practice other scales. I could practice in lentghy repetitive sessions, or takes lots of breaks and practice every other day, or longer. Infinite practice variations here.</p>
<p>Almost done with the recap. All of the above is about to connect to a phenomena in cognitive psychology called contextual interference. This phenomena shows that repeatedly practicing a motor sequence versus alternating practice between different motor sequences, can have notable consequences for learning, performance, and retention. And, I’d like to explore that with my own practice this morning.</p>
<p>But, because I am full of tangents, I need to attempt an answer to a burning question first.</p>
<p>How many practice attempts do I need to get my B maj6 diminished scale under 3 seconds?</p>
</section>
<section id="estimating-how-much-practice-i-need-with-my-own-practice-curve" class="level2">
<h2 class="anchored" data-anchor-id="estimating-how-much-practice-i-need-with-my-own-practice-curve">Estimating how much practice I need with my own practice curve</h2>
<p>This graph shows my learning curves for three different sets of practice attempts. I start producing the scale slowly, and then as I repeatedly attempt the scale, I pick up speed until I get down to about 10 seconds.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/19_1_19_24_Contextual_Interference/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>What I can do next is take an average of these three learning curves, which looks like this:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/19_1_19_24_Contextual_Interference/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>There is debate in the cognitive science literature about the functional form of this curve. Maybe it’s a power function, maybe it’s an exponential function. They are both pretty similar looking. Here’s what a power function fit looks like:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = log(mean_ft) ~ log(sets), data = df_avg)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.46986 -0.09867  0.01724  0.16628  0.31374 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  4.49031    0.10817   41.51   &lt;2e-16 ***
log(sets)   -0.63201    0.03874  -16.32   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.1983 on 34 degrees of freedom
Multiple R-squared:  0.8867,    Adjusted R-squared:  0.8834 
F-statistic: 266.2 on 1 and 34 DF,  p-value: &lt; 2.2e-16</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/19_1_19_24_Contextual_Interference/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Looks pretty good to me, the line is going right through dots. So, the line can represent a kind of average practice curve. The neat thing is that I can keep drawing the line out following the power function. This allows me to use my existing data to make a prediction about how many practice attempts I need to get down to 3 seconds.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/19_1_19_24_Contextual_Interference/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>So, according to the limited data that I collected, I should be able to get down to 3 seconds in 219 practice attempts. If I add up all of the scale completion times from 1 to 219 (that are implied by this curve), then it will take 1568 seconds to get there, or 26 minutes of repeated practice.</p>
<p>Wow, that surprises me actually, I thought it would take longer. And, this is only an estimate, it could be way off in either direction. For example, I’ve already practiced a total of 30 minutes, over 3 sets of 10 minutes. Maybe I should have tried 26 minutes the first time and just got it over with!</p>
<p>TBH I kind of want to go try this for 26 minutes as see what happens. Maybe I will set that aside as something I do later and report back. Instead, I will continue with the goal of this post.</p>
</section>
<section id="contextual-interference-and-mixed-vs-random-practice" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="contextual-interference-and-mixed-vs-random-practice">Contextual interference and mixed vs random practice</h2>
<blockquote class="blockquote">
<p>Shea, J. B., &amp; Morgan, R. L. (1979). Contextual interference effects on the acquisition, retention, and transfer of a motor skill. Journal of Experimental psychology: Human Learning and memory, 5(2), 179.</p>
</blockquote>
<p>The above paper showed a curious effect possibly relevant to practicing music.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://homophony.quest/blog/19_1_19_24_Contextual_Interference/images/Screenshot 2024-01-19 at 11.16.09 AM.png" class="img-fluid"></p>
</div></div><p>Shea &amp; Morgan had people practice sequences of motor movements on an unfamiliar device. The device is shown in the margin.</p>
<p>On each practice trial, one of the stimulus lights would turn on. The light indicated one of three movement sequences to perform. For example, one of the movement sequences was to grab the tennis ball in the middle, then strike down the gates in a particular order:</p>
<ul>
<li>right rear, left middle, right front</li>
<li>right front, left middle, right rear</li>
<li>left front, right middle, left rear</li>
</ul>
<p>This is abstractly similar to learning to play a series of notes on a strange instrument.</p>
<p>The important manipulation in their experiment involved whether or not people repeatedly practiced a sequence, or had to randomly alternate between sequences.</p>
<p>One group received “blocked” practice training. They got practice on each of the three sequences. Each sequence was performed 18 times in a row. So, each sequence was grouped into a “block” of 18 practice attempts. This group got to practice a sequence repeatedly until they ran out of attempts, and then they moved onto the next sequence and practiced it on repeat.</p>
<p>The other group received “random” practice training. They practiced each sequence 18 times overall, but the order was totally randomized by the stimulus lights. This involves many more switches between sequences during practice. Let’s take a look at the data from the study:</p>
<p><img src="https://homophony.quest/blog/19_1_19_24_Contextual_Interference/images/Screenshot 2024-01-19 at 11.28.03 AM.png" class="img-fluid"></p>
<p>The y-axis shows total time in seconds, which measures how fast people were able to produce a sequence. In the acquisition phase (when they were practicing the sequences), both groups got faster with practice. The random group started out the slowest, and made large gains with practice, but they didn’t end up as fast as the blocked group. The blocked group started out pretty fast, made smaller gains with practice, but ended up the fastest.</p>
<p>+1 for blocked practice right?</p>
<p>Not so fast. Shea &amp; Morgan also included a retention test. Some subjects waited 10 minutes after the acquisition before attempting the sequences again, others waited 10 whole days before producing the sequence again.</p>
<p>The retention graph has several things going on here. I should also mention that the type retention test was counterbalanced. Some participants who received blocked training also received a blocked version of the retention test, but others received a random version of the retention test; and vice versa for the random group.</p>
<p>The basic pattern shown in the retention graph is that participants who received random practice retained the more than the participants who received blocked practice. This seems almost paradoxical. The blocked practice group “learned the most”, or “performed the best” during acquisition, but they also forgot the most when trying to redo the sequences later on. The random group appeared to have inferior learning, but they retained what they learned much better than the blocked group, and they even performed better on the retention test than the best scores from the block group.</p>
<p>Are there implications of this result for music training? A quick search on google scholar shows several papers looking at blocked vs random practice schedules in music learning contexts. I haven’t had time to read them yet, but I assume there are positive findings showing some influence of blocking or randomly varying practice on learning musical skills. In general, this phenomena has been demonstrated across a fairly wide range of tasks, so I would expect it to generalize to motor skills on piano.</p>
<hr>
<p>I need to interrupt this post. I had ambitions to try blocked vs random practice myself, and I was going to do it. But, then I thought more about how I would do it so that I can measure my performance times, as well as how would I randomly tell myself what scales to play…and, then I realized I had to do something else first.</p>
<p>Begin the process of building computational assessment methods. Should be fun. This semester I have some plans to get more serious about this using MIDI and jspsych.</p>
<p>For now, I’m going to try something as simple as possible. The basic idea is to be able to have my ipad present a target stimulus for practice, like “A major triad”, or “c major scale”, or “C7 chord”, or whatever I want. I’ll set my ipad up on the piano, wait for the stimulus, and the try to play it as fast as possible. I’ll also add a little button on the screen to press when I finish playing the target stimulus. This will be really hacky from a cogsci perspective, but I’ll improve the precision later. For now, this will work to collect some rough personal data on my progress learning the maj6 diminished scale.</p>
<p>Time to roll up the javascript programming sleeves.</p>


</section>

 ]]></description>
  <category>practice</category>
  <category>cogsci</category>
  <category>contextual interference</category>
  <category>estimating practice time</category>
  <category>practice schedules</category>
  <guid>https://homophony.quest/blog/19_1_19_24_Contextual_Interference/</guid>
  <pubDate>Fri, 19 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/19_1_19_24_Contextual_Interference/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Assessing my 7th chords with a reaction time test</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/20_1_19_24_7th_chords/</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Testing myself on 7th chords using a choice-reaction time procedure</p>
</div></div><p>This post is about collecting some performance data on my ability to play stuff. I have some longer term plans to improve on these methods for research purposes, but for now, I’m just interested in roughly tracking my own abilities.</p>
<p>In my last post I was about try out some different practice schedules, one of which would require me to randomly pick which keys to practice. That kind of stuff is annoying to do without a computer. Plus, if I’m about to collect a bunch of data in a bunch of conditions, I’d rather not code things and do data entry by hand.</p>
<p>So, I jumped ship and decided to start building little computerized measurement tools.</p>
<p>I put together a really simple choice reaction test using <a href="https://www.jspsych.org/7.3/">jspsych</a>, the same JavaScript library that I use for online cognition experiments.</p>
<p>To start, I decided to test myself on basic seventh chords in all keys. There are 12 different keys, and for this test, I used ∆7, 7, and -7 chords, for a total of 36 different chords.</p>
<p>The choice reaction time test is very simple. The program takes all of the possible chord names, randomly shuffles them, and then presents each name on the screen one at a time. I put my laptop on top of my piano, waited for the chord name to appear, and then played the chord as fast as I could on the piano. At the same time, I had my left thumb on the spacebar, and I pressed the spacebar roughly at the same time that I played the chord. This allowed me to measure the reaction time for each chord. I also had the program repeat all the chords randomly twice, so that I got two reaction time measures per chord.</p>
<p>I love jspsych. It took like 15 minutes to make this happen (granted, I have a bunch of prior experience using that library, and I was doing something very simple). Still, I already made the program and ran the test, and collected the data as a JSON variable. Woo hoo!</p>
<p>And, of course, this is really messy data. Ideally, I would have the reaction times for each note, say using MIDI or something. But, that’s for later.</p>
<p>I’d really like to take a look at my own performance data. I know all of these chords pretty well, but I have never closely compared my ability to produce them on demand. I expect I’ll be pretty good in C, D, F, G, A, and worse in the other keys. But, I don’t really know what the pattern looks like.</p>
<p>So, let’s get to the data analysis.</p>
<p>I loaded in the data, computed the average chord-reaction time for each chord, and put them all in the following table and graph.</p>
<div class="cell">
<div class="cell-output-display">
<div class="datatables html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-190f1127080f6f229f3c" style="width:100%;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-190f1127080f6f229f3c">{"x":{"filter":"none","vertical":false,"data":[["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36"],["A-7","A7","Ab-7","Ab7","Ab∆7","A∆7","B-7","B7","Bb-7","Bb7","Bb∆7","B∆7","C-7","C7","C∆7","D-7","D7","Db-7","Db7","Db∆7","D∆7","E-7","E7","Eb-7","Eb7","Eb∆7","E∆7","F-7","F7","F∆7","G-7","G7","Gb-7","Gb7","Gb∆7","G∆7"],[901.5,1269.5,4730.5,2626.5,4038,1920.5,2974,2563.5,6454.5,3860.5,4595,3846,1414.5,1773.5,1231.5,1160.5,1206.5,3469,2383,3080.5,2951,1196.5,1698,4777.5,1878,2218,2951.5,1231.5,1478,1692,1508.5,1217.5,4033.5,4607,5124,2259]],"container":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>stimulus<\/th>\n      <th>mean_rt<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"columnDefs":[{"className":"dt-right","targets":2},{"orderable":false,"targets":0}],"order":[],"autoWidth":false,"orderClasses":false}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Neat. Close to what I expected in terms of which chords I think I’m better at. All of em could do with some extra practice. I suppose I should do more practice on the slow ones, because the fast ones don’t really need it.</p>
<hr>
<p>I was too hasty with my jspsych programming and totally forgot to add a few things that would make data analysis much easier. I’d like to be able to easily replot the data in a few different ways. One way is to group by maj7, min7, and dominant 7th. Another is to arrange the keys in ascending/descending order (rather than alphabetically), or in the order of the circle of fifths. I could add the necessary factor levels to the data file by hand, but I think I’ll add this to the jspsych program so that the data file includes this by default.</p>
<p>So, off to fixing the program, and then I’ll collect some more data and try a few different plots.</p>
<p>And, I’m back. I ran through the practice one more time. Now my data file should be easier to plot in different ways.</p>
<p>Here is the mean chord reaction time for each key, grouped by 7th chords.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I wanted to order the keys in terms of the circle of fifths, but there was another bug in the code, now fixed. I’ll need another round of data-collection to get that graph.</p>
<p>In terms of piano practice, I should get a bunch of these chord reaction times lower. Especially Gb, Ab, Bb, Eb, and Db, and B. I thought Bb would be better, but nope.</p>
<p>The program is not currently keeping track of practice attempts per chord, and I should add that.</p>
<hr>
<p>After some javascript nonsense, the program now runs in a loop. Each loop goes through a set of practice material and records the practice attempt number for each chord.</p>
<p>My loop of practice material is all the basic 7th chords. So, I’m about to practice them for a while and then plot the data.</p>
<p>One detail is whether to do away with the delay between trials. Right now there is a 2 second delay before the next chord. That’s nice and everything, but I feel like chomping through this, so I’ll get rid of that delay.</p>
<hr>
<p>I practiced all the chords in a random order for about 10 times each. This is a plot of my chord reaction times as a function of practice for all chords. A bit messy to look at.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>If I average over keys, did I get any faster?</p>
<p>There’s a downward trend I guess.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Averaging over chords and showing the individual keys:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>And, one last summary graph. Let’s average over repetitions, and arrange by the circle of fifths.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I guess I should practice Gb and Db and Bb and flatten out this performance distribution.</p>
<hr>
<p>Alright, that’s basically all I wanted to accomplish today. Now I have a clunky little tool to relatively quickly assess where I am at on different musical elements. Time to go do something else.</p>
<hr>
<p>Practicing “Eb”,“Db”,“Gb”,“Ab”,“B” this morning, and plotting the reactions from yesterday (1), and today (2).</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Averaging over individual chords, and looking at mean chord reaction time yesterday and today on these chords.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Made a change to the program so that when I load it up I can select which keys to practice. I’m assuming that if I select only Gb and Ab (the slowest), I would be able to get them both under 2 seconds. I wonder if I would then maintain that level of performance when increasing the number of other chords in the test. Need to make breakfast first.</p>
<p>I put Gb and Ab and practiced those 7th chords for a while.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Nice, with 5 minutes or so of banging around those chords, I could get the times way down in the context of this much simpler test (fewer other chords to play, less hand movement between chords etc).</p>
<p>I’m curious whether this improvement for Gb and Ab would persist into a test using all of the keys.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/20_1_19_24_7th_chords/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>When I added all of the keys back the RTs for Gb and Ab went up a little bit from the last time, but they are over all way down. Almost all of them are under 1500 ms now.</p>
<p>This practice isn’t very musical, but it seems to work out my ability to identify and then play chords on demand. Perhaps speeding up on this test would improve my ability to sight read chord changes.</p>



 ]]></description>
  <category>practice</category>
  <category>7th chords</category>
  <category>jspsych</category>
  <category>assessment</category>
  <guid>https://homophony.quest/blog/20_1_19_24_7th_chords/</guid>
  <pubDate>Fri, 19 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/20_1_19_24_7th_chords/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Savings in relearning</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/18_1_18_24_Relearning/</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/18_1_18_24_Relearning/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>retro 80s computer with cartoon hands playing a synthesizer. computer with hands playing piano. - dreamshaper</p>
</div></div><p>Yesterday I spent some time practicing the maj6 diminished scale across all keys. I also posted about practice ideas in relation to cognitive psychology phenomena.</p>
<p>For reference, I can play a C major scale in 7th chords in just under 3 seconds without any warm-up. I’ve had a couple days to put some practice into the C major 6th diminished scale, and I times myself at 12 seconds to play through the chords there.</p>
<p>I timed myself going through several keys for the first time, and B was the slowest at 104 seconds. Then, just for B maj 6 diminished, I did a focused spurt of practice for 10 minutes on that scale. This involved playing the scale ascending in chords over and over again, and not doing anything else. If I made a mistake I would correct it, and if I couldn’t correct it I would start again. I used a stopwatch on my phone for the timer, and pressed the lap button every time I finished the scale.</p>
<p>I was interested in measuring a learning curve to track my progress with this scale. The data looked like this:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/18_1_18_24_Relearning/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The graph shows that I reduced my time to complete the scale by quite a bit in just 10 minutes of practice, from 104 seconds to 21 seconds.</p>
<p>That was yesterday.</p>
<section id="retentionsavings-in-re-learning" class="level2">
<h2 class="anchored" data-anchor-id="retentionsavings-in-re-learning">Retention…Savings in re-learning?</h2>
<p>My question this morning is how much did I retain? I haven’t practiced the B maj6 diminished scaled since yesterday. My plan is to go sit down and play it ascending for the next 10 minutes, record my playing times, and then come back here and graph it.</p>
<p>One possibility is that I’ll start off around 21 seconds where I left off, and then maybe get a faster. That would indicate I retained almost all of whatever I learned yesterday. Another possibility is that I start back at the beginning, perhaps having retained not very much at all. Still, if that happened, it’s possible that I would re-learn faster the second time through.</p>
<p>Let’s find out.</p>
<p>I just put in 10 minutes of repetitive practice, and here are the results.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/18_1_18_24_Relearning/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>What happened? I ended up at about 20 seconds per run at the end of yesterday (last red dot), and today I started way back at about 60 seconds per run. That might look like almost no retention of whatever I “learned” yesterday. Yes, my first data point today was almost twice as fast as the first one from yesterday, but that could be an outlier. I remember making loads of mistakes the first time yesterday and restarting the scale several times.</p>
<p>Although my starting points are similar, it appears there was a decent amount of savings in relearning. Savings in relearning is a concept from <a href="https://www.crumplab.com/cognition/textbook/C8_Memory_I.html#ebbinghauss-forgetting">Hermann Ebbinghaus</a> and his research on forgetting. Ebbinghaus spent time learning lists of random syllables until he could recite them, and then he waited different amounts of time before trying to recall them from memory. Not surprisingly, he forgot items over time. However, he would also relearn lists a second time, after the delay, and often found savings in his relearning attempt. Even though he had forgotten items from the list, when he tried to relearn the list, it took less time (than the initial learning attempt) before he could recite it perfectly again.</p>
<p>Something similar is going on here. One possibility is that I forgot everything I learned since yesterday, and that’s why I was back at the beginning. However, even though the data show I was basically back at the beginning, it seems my practice from yesterday helped me relearn faster than before. The green dots go down faster over practice attempts than the red dots. Yesterday I only got 15 scales completed in 10 minutes, but this time I got through 30 attempts. I also got my time down to 8 or 9 seconds by the end.</p>
</section>
<section id="rd-attempt" class="level2">
<h2 class="anchored" data-anchor-id="rd-attempt">3rd attempt</h2>
<p>For now I’m not being systematic about any of this. It’s been a few hours since my second attempt at practicing the B maj6 diminished scale. What would happen if tried again, instead of waiting for a longer delay?</p>
<p>So, I went and tried again for 10 minutes. Here’s the data:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/18_1_18_24_Relearning/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Overall, the blue dors are pretty similar to the green dots from this morning. Even though I got down to about 8 seconds this morning, I didn’t start from there when I went back to practice. My first run on the third attempt was a big improvement in some sense, but the second run was way worse.</p>
<p>I’ll sit back an do a bit of introspective psychology along with some hand-wavy data description about what seems to be happening. For convenience, I’ll split this into three phases.</p>
<p><em>Phase 1. Puzzling it out.</em> There is a lot action going on in the first 10 practice attempts. I start out really slow, and then make substantial speed gains across the first few attempts. Introspectively, this a very new scale to me. I can’t readily mentally visualize yet. By comparison say to a C major scale, the elements of which I can very easily bring to mind in terms of visual mental imagery or a mental sense of fingering chord shapes. Sitting here right now, I can think of a B maj6 chord now, but I’m drawing a blank when I think about the next chord. OK, it took at least 15 seconds to reconstruct the Dbdim7 chord in my mind. So, at this point in my B maj6 dim scale practice, when I go sit down to try playing it, I don’t have a great mental visualization of it, and I’m puzzling out each chord as I go through the scale.</p>
<p>If I zoom into the production of the scale it goes something like this. - OK, play the first chord…and, I’m practicing the B scale. - Look at B, but thumb on B (think that I should’ve practice B more as a kid). - I’m not slamming that B major triad…a little confused on whether to play E or Eb, or F or Gb. If things get really bad, then I can go back to first principles and work out the intervals in semitones, but I rarely need to do that for basic chords. However, this kind of mental puzzle talk is happening at the same time as important memories might come back. For example, I’m starting to get a nice mental image about the shape Bmaj6, with the B Eb Gb Ab. It’s a palpable kind of embodied knowledge or sense of the chord that is hard to describe, but has a lot to do with how my fingers and keyboard look and feel as they spread across and make contact with those notes. The B is the only white note, and the other three notes are pretty far away. I think the B-Gb perfect fifth might be physically the furthest on the piano. In any case, whatever this chord sense is, if I’m lucky enough for it to be “retrieved”, voila, I can use that memory and then play it (sidenote, this is basically the instance theory of automatization idea from an instrospective perspective). - Waiting for either the puzzling out process to find a solution, or for a memory of B maj6 to pop-up, is followed by playing the chord, ya I got it down. - At this point, I’m on the chord I was trying to play, and having trouble thinking up the next chord. - Another puzzling out process/waiting for a useful memory of the next chord ensues. Sometimes I just go for it and land the next chord not really knowing if it was going to work out. - I usually want to have some confidence that I will play the next chord correctly. So, I will sit on the current chord, stare at my fingers, and try to invoke the next chord. - Sometimes, I’m not particularly verbalizing or instructing myself about what the next chord is. Or, I’m changing the instruction. For example, if I’m on Bmaj6 and trying to play the next chord, I could be saying “play the next chord”, or “play the ii”, or “the next one is going to be the diminished chord, but what diminished chord is it?”, or “play the Db”, or “what is the Dbdim7”, and so on. Othertimes, there seems to be less inner voice, and more a sense of fingering patterns that need to change. - More recently, I’ve been trying to mentally visualize the next chord before I play it. Once I lock in the finger sense of what that chord will be, then I go to it. I find this usually helps with accuracy.</p>
<p>Taking all of this together I think provides some descriptive context to account for the lengthy inter-chord production times that appear in phase 1 (the first 10 practice attempts). I haven’t automatized these chords yet, and lot’s of different kinds of cognitive processing from active puzzling out a solution, to side conversations not super relevant to my current task, to losing track of what I’m doing, to finding that I do remember a chord— these activities all take some amount of time before the next chord is produced. And, those times can account for some of the time in-between each chord.</p>
<p>In my first few practice attempts, I find that some chords come back from memory, and others take some puzzling. And, that these can switch around sometimes, especially after going through the scale. There’s also room for a bunch of interference from other chord knowledge. For example, yesterday I did some focused practice on playing fully diminished 7th chords in every key. Now, this morning when I’m going through the Bmaj6 scale, even though I know that I should be alternating maj6 and dim7 chords across each note, sometimes I’ll be trying to play an Ebmaj6, but the Ebdim7 comes out. So, as I get into practicing the scale, achieving fluency also involves managing interference from other chords.</p>
<p><em>Phase 2. Almost getting it.</em> I would say phase 2 is what is happening in between practice attempts 10 and 30. I’m hitting a floor here of about 10-12 seconds. This is not very fast or fluid, but I’m able to consistently play through the scale without making too many errors. Introspectively, there is still a lot of thinking going on before many chords. Sometimes I get a nice fast run of three or four chords in a row, other times I might completely fall apart on a chord and have a very long pause before being able to play it.</p>
<p><em>Phase 3. Whispers of fluency</em>. In these very early practice attempts, by the time I get past 30 runs I’m starting to almost feel comfortable. I can begin to sense how the chords would be played in a fluent manner. If I go for it I can play it fast with lots of errors, but with the general feeling close to right.</p>
<p><em>Achieving actual fluency</em>. As a piano player, I’m just going to keep practicing this scale, mix it up, and have fun with it. Fluency will come with practice, and I’m not going to sweat about it, or really care too much about optimizing the process.</p>
<p>As a cognitive psychologist, I am nevertheless wondering about various practice schedules or approaches that could influence getting an unfamiliar musical concept into series of fluent actions that I don’t have to think about. There are lots of manipulations that could be interesting to try.</p>
<p>One approach is for me to go all out and just practice ascending chords in the Bmaj6 scale, as I’ve been doing, but go all day long until I reach some kind of fluency criterion that’s good enough for now. If I could play that scale in 3 seconds I would be very happy with that level of fluency. Could I get to 3 seconds by focused repetitive practice, drilling that puppy until I get there or go to sleep trying, or before piano mush brain sets in? Maybe? If I did get to that criterion, what kind of retention would I have tomorrow?</p>
<p>It’s possible that large swathes of the above practice schedule would be practically useless. I could get tired and sloppy. Maybe I need to have a sleep and rely on the magic of memory consolidation. Or perhaps spread out the practice with lots of other intervening stuff.</p>
<p>In the first scenario I might actually get to a reasonable level of fluency in this scale sometime today. In the second scenario, it could take days or months depending on how many things I did in between.</p>
<p>I’m realizing I have a bunch more to write about this, but not in this post. I think it’s time for some cross-posting between my <a href="https://www.crumplab.com/Blog.html">main research blog</a> and this here music blog.</p>


</section>

 ]]></description>
  <category>relearning</category>
  <category>practice</category>
  <category>scales</category>
  <guid>https://homophony.quest/blog/18_1_18_24_Relearning/</guid>
  <pubDate>Thu, 18 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/18_1_18_24_Relearning/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Practicing some Barry Harris methods</title>
  <dc:creator>Matt Crump</dc:creator>
  <link>https://homophony.quest/blog/17_1_17_24_BarryHarris/</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://homophony.quest/blog/17_1_17_24_BarryHarris/cover.jpg" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
</figure>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Barry Harris - courtesy wikipedia</p>
</div></div><p>A couple of days ago I stumbled across the Barry Harris system as taught by one of his students Shan Verma, who also runs <a href="https://www.jazzskills.com" class="uri">https://www.jazzskills.com</a>.</p>
<p>I’ve been randomly watching a few videos from his <a href="https://www.youtube.com/@JazzSkills">youtube channel</a> and trying a few things out.</p>
<p>All of the practice is around learning the major 6th diminished scale, which has some very interesting properties, and sounds great.</p>
<p>These two videos show the two primary ideas for today’s practice.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=oALZ7xcEdJY&amp;list=PL2GT-F7_oAbkEGy3Sm5jjoowPJLGs6Zzd&amp;index=1">basics of the major 6th diminished scale</a>.</li>
<li><a href="https://www.youtube.com/watch?v=b_Th3Z6csbg&amp;list=PL2GT-F7_oAbkEGy3Sm5jjoowPJLGs6Zzd&amp;index=4">building up notes, contrary motion movement exercise</a></li>
</ul>
<section id="what-i-did-so-far" class="level2">
<h2 class="anchored" data-anchor-id="what-i-did-so-far">What I did so far</h2>
<p>Woke up and played the scale using alternating maj6 and dim7 chords. Played through C, F, and Bb. Also, ran through the building up notes exercise in each key, starting from each note in the scale for each key.</p>
</section>
<section id="practice-notes" class="level2">
<h2 class="anchored" data-anchor-id="practice-notes">Practice notes</h2>
<p><strong>C scale notes</strong>. I was playing through this one last night as well. In particular, I was attempting to get the ‘building up notes’ exercise fluid. If I played each step like a new chord it felt chunky. If I played each step like an ascending run in the right hand, and simultaneous descending run in the left hand it was fast. However, when I did those runs I was only playing single notes, and leaving out the internal notes that form the maj6 or dim7 chords. Then, I got into the swing of alternating my fingers properly.</p>
<p>The table shows the fingering for thumb to pinky (1-5), for the left and right hands. Start with both thumbs on the same note. Then, the index to pinky (2345) go on every note ascending on the right, and every note descending on the left.</p>
<table class="table">
<tbody>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td></td>
<td>1</td>
<td></td>
<td>1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
<td>2</td>
<td></td>
<td></td>
<td></td>
<td>2</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td>3</td>
<td></td>
<td>1</td>
<td></td>
<td>1</td>
<td></td>
<td>3</td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td>4</td>
<td></td>
<td>2</td>
<td></td>
<td></td>
<td></td>
<td>2</td>
<td></td>
<td>4</td>
<td></td>
</tr>
<tr class="odd">
<td>5</td>
<td></td>
<td>3</td>
<td></td>
<td>1</td>
<td></td>
<td>1</td>
<td></td>
<td>3</td>
<td></td>
<td>5</td>
</tr>
</tbody>
</table>
<p>Took a little while, but once the symmetry hits the fingering locked in pretty easily.</p>
<p>In C, starting from the Ab has a particularly nice symmetrical viewpoint.</p>
<p><strong>F scale notes</strong>. Practice went pretty well. This scale uses a different dim7 chord (GBbDdE). Felt like a little bit of interference from C. The Fmaj6 chord has the same shape and fingering as Cmaj6.</p>
<p>As I was playing the building up notes exercise through every note, I started to think more about how I could use the exercise. I started asking questions like, where does this movement want to go? For example, starting on the root, and “building up notes” seems to want to resolve on the V.</p>
<p><strong>Bb scale notes</strong>. These observations would apply to any of the other scales, but I roughly had these thoughts around this time in practice. So, I’m going to stop organizing notes by scale.</p>
</section>
<section id="scale-practice-checkbox" class="level2">
<h2 class="anchored" data-anchor-id="scale-practice-checkbox">Scale practice checkbox</h2>
<table class="table">
<colgroup>
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
</colgroup>
<thead>
<tr class="header">
<th>C</th>
<th>F</th>
<th>Bb</th>
<th>Eb</th>
<th>Ab</th>
<th>Db</th>
<th>Gb</th>
<th>B</th>
<th>E</th>
<th>A</th>
<th>D</th>
<th>G</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>x</td>
<td>x</td>
<td>x</td>
<td>x</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</section>
<section id="more-practice-notes" class="level2">
<h2 class="anchored" data-anchor-id="more-practice-notes">More practice notes</h2>
<section id="whenwhere-to-start-building-up" class="level3">
<h3 class="anchored" data-anchor-id="whenwhere-to-start-building-up">When/Where to start building up?</h3>
<p>Noodling around in CMaj6…lots of CEGA. I started building up on C.</p>
<ul>
<li><p>step 1, playing a C is kind of redundant with the chord, but it sets the location</p></li>
<li><p>step 2. playing a BD is nice. It’s not part of CEGA, but it adds the maj7 and 9th. Easy to sprinkle in whenever, even if staying on CMaj6. sprinkles of possible movement.</p></li>
<li><p>step 3. ACE, restating the center, with minor vii feels</p></li>
<li><p>step 4. AbBDF, dominant chord, lots of possibilities, wants to go G</p></li>
</ul>
<p>Still playing over a Cmaj6, I did a little bit of starting the building up notes on different notes, but not too much. Need to do that more, to get a better sense of the directions.</p>
</section>
<section id="what-a-step-in-the-building-up-exercise-provides" class="level3">
<h3 class="anchored" data-anchor-id="what-a-step-in-the-building-up-exercise-provides">What a step in the building up exercise provides</h3>
<p>The building up notes exercise starts by emphasizing some particular note in the scale. This could be where you are at, say in a melody. Then, it alternates between adding the next notes in a maj6 chord, or a dim7 chord. I should sit down and spell this out for myself at some point after I get the fingering down across keys.</p>
<ul>
<li>in general, the exercise provides a way to start on a note in the scale, transition between restating aspects of the root (through the maj6), or the diminshed 7th chord, with very harmonious sounding transitions. The transitions already have a bit of movement, and they set up off-ramps into other directions. Especially from a dim7th chord, which can easily end up as four different 7th chords.</li>
</ul>
</section>
<section id="cognitive-science-notes-proactive-interference" class="level3">
<h3 class="anchored" data-anchor-id="cognitive-science-notes-proactive-interference">Cognitive science notes: proactive interference</h3>
<p>Proactive interference is a well-known phenomena in the learning and memory literature. The classic finding is from studies of free recall. Participants are given lists of items to study, like words, and then after a delay they are asked to recall as many as possible from the list. Pro-active interference occurs when your memory for items in the list is impaired by previous exposure and/or learning attempts to memorize other lists.</p>
<p><img src="https://homophony.quest/blog/17_1_17_24_BarryHarris/images/Screenshot 2024-01-17 at 9.44.43 AM.png" class="img-fluid"></p>
<p>The figure shows some recall data from Underwood (1957). The x-axis is number of previous lists. Some subjects were new to these kinds of studies, and they had not tried to memorize lists of items before. Their recall was pretty high. Other subjects had participated in these kinds of studies before, and had tried to memorize many different lists (up to 20 different lists). The more lists one had previously tried to learn, the worse participants did when trying to learn and recall a new list.</p>
<p>As I try to learn the maj6th diminished scale across all of the keys I’m wondering about the role of pre-active interference, as well as other kinds of interference. If learning scales was like learning random lists of words, then it is possible that every time I learn one scale, the next scale becomes harder to learn because of this so-called pro-active interference. My general sense is that this isn’t how learning scales works in practice, and that prior experience generally helps with learning new things. Not to say that there isn’t sometimes interference.</p>
<p>Eb practice…got through it, thought a little more about pro-active interference, and “task-switching” or key-switching.</p>
<p>It’s not clear to me that findings showing pro-active interference in free recall should neatly generalize to learning scales. One reason is that the free-recall studies usually used arbitrary lists of items with no particular relationships to one another. Part of the pro-active interference is that one accidentally recalls words from a previous list, and those get counted as errors. Also, learning additional lists of random items is like trying to grow a vocabulary of random words with no particular meaning.</p>
<p>In contrast to random lists of words, musical scales have many shared elements across keys. There is lots of opportunity for facilitation and interference. For example, learning to play the dim7 in the C major 6th diminished scale could facilitate learning the Eb, Gb, and A versions of that scale, because they use the same dim7 chord. At the same time, there could be associative interference at play based on prior learning attempts. For example, learning to interleave CEGA with DFAbB(dim7) could reinforce those interchord assocations, such as C6-Ddim7-E6. Then, consider moving to learn Eb major 6th diminshed. There is a C6-Ddim7-Eb6, and perhaps here the E6 will interfere with the Eb6? I wonder what a MINERVA process would do here…</p>
</section>
<section id="cogsci-notes-key-switching-costs" class="level3">
<h3 class="anchored" data-anchor-id="cogsci-notes-key-switching-costs">Cogsci notes: Key-switching costs</h3>
<p>Another classic finding in cognition is called the task-switching cost. This has been demonstrated in diverse task situations. The basic finding is that there are usually costs, in terms of time and accuracy, when switching from one task to another.</p>
<p>I’ve been practicing the build up exercise in C, F, Bb, and Eb. The fingerings are all different, but similar enough that my fluency is getting better, even as I switch to new keys.</p>
<p>These four keys share some notes. For example, C appears in all of C, F, Bb, and Eb scales. I did practice the build up for all four, across all notes of the scale, which means that I did start on C and do the build up for each key. However, I practiced the build up ascending and descending within each scale.</p>
<p>I am 100% experiencing pretty strong key-switching costs if I start on C alone, and try to then produce a build in the key of F, Bb, or Eb. It’s much easier to start on C major. Need to break out of the switch cost by practicing these more.</p>
<p>A musical benefit is that a build-up exercise starting say on C, can take you in lots of places, by building up into different keys from that one note. Opening so much opportunity for movement. Wow.</p>
</section>
<section id="cogsci-notes-spacing-and-repetition-during-practice" class="level3">
<h3 class="anchored" data-anchor-id="cogsci-notes-spacing-and-repetition-during-practice">Cogsci notes: Spacing and repetition during practice</h3>
<p>Another well-known set of phenomena in learning and memory are spacing and repetition effects. I have been thinking about these phenomena as I’ve been practicing, and I was probably thinking more about these than what I was trying to accomplish in Ab as I was learning the maj6 diminished scale in that key.</p>
<p>Spacing effects seem to be a common export of cognitive psychology, especially in various apps for ‘optimizing’ learning. For example, flashcard apps and language learning apps will build in a spacing algorithm. The purpose of the algorithm is to space out repetitions during practice, which can facilitate learning and memory (whether or not spacing effects have positive or negative benefits, or no effect can depend).</p>
<p>Repetition effects are another commonly studied phenomena. In general, repeatedly practicing an action, movement pattern, or series of movements, increases the fluency and “automaticity” of the action. Musician’s know this very well. If you haven’t practiced a Gb scale before, or in a while, your performance will be slow and error-prone. If you repeatedly play the scale up and down and up and down, over and over, it get’s easier, and your performance will become faster and more accurate. Repetitions can also make performance worse sometimes (but I’ll skip over those cogsci things for now).</p>
<p>Studies of practicing motor skills, like learning scales, typically show that performance gains follow a power or exponential functions (both are very similar looking), like the one below.</p>
<p><img src="https://homophony.quest/blog/17_1_17_24_BarryHarris/images/practice curve.jpg" class="img-fluid"></p>
<p>The general outcome is that measures of fluency, like scale speed, increase with more practice. However, the gains that are made with practice decrease. The biggest gains in performance are seen early on in practice, afterwards, it takes a lot of practice to make very tiny gains. There are lots of reasons for this basic curve. On a piano, one issue is that people can only move their fingers up to some limit, so there are hard limits to the floor of the function. And, it may take loads of practice to approach those near floor limits.</p>
<p>A related concept with repetitive practice is the idea of diminished returns. Repetitive practice will increase fluency for sure, but at some point in practice one becomes fluent enough, and further practice isn’t going to do much. So, the question becomes when to stop repeating and move onto something else? Which leads back to the spacing of repetitions question.</p>
<p>Let’s say you are trying to practice major scales in all of the keys. What kind of practice schedule should one adopt? There are lots of options, and depending on how you arrange things, the repeated attempts can be massed together or spread out. I’ve got more to say about this kind of stuff, but will get back to practicing Gb. Although, it would be possible to get fancy and use concepts from cognition, I’m just going through the circle of fifths. This has musical benefits, and moving in that direction involves going from one key to another that share many notes. As a result, I think I get a little bit of facilitation from learning one scale to another, and also a little of bit of a discriminative challenge to make sure I’m not playing the previous one. Seems like a productive level of difficulty.</p>
<p>Lunch break</p>
</section>
<section id="turning-up-the-interference" class="level3">
<h3 class="anchored" data-anchor-id="turning-up-the-interference">Turning up the interference</h3>
<p>All the above being said, over lunch I was wondering about maximum interference practice schedules. For example, consider this build-up note exercise. I could write a computer program to tell me what note to start on, and what key to build on, and have this be totally random. That would be a great little practice tool (note to self to make some midi javascript stuff later). But, it would be hard. Especially for me right now because I don’t know the build-up patterns in most keys yet.</p>
<p>Something more approachable, but still hard, would be for me to do much less repetition as I practice the remaining keys (I think I have about 8 left). Up until this point, I have been doing a lot of varied practice within each key. Something like this for each key:</p>
<ul>
<li><p>play the all the notes of the scale up and down, and all around</p></li>
<li><p>play them all at the same time to “see the notes all together”</p></li>
<li><p>play them in sets of 4 or 5, starting on different notes</p></li>
<li><p>play them up and down starting on different notes</p></li>
<li><p>play the maj6 inversions as chords, then as arpeggios</p></li>
<li><p>play the dim7 inversions as chords, then as arpeggios</p></li>
<li><p>put the alternating chords together, play through the scale up and down in chords</p></li>
<li><p>play through the scale up an down in arpeggios</p></li>
<li><p>Start playing the build-up exercise on each note of the scale. Do this up and down and all around</p></li>
</ul>
<p>That’s a lot of different kinds of repetition, and it seems to work pretty well. My fingers get used to the pattern of notes in the key, and then I’m on my way. Still, playing the scale in terms of chords is slow at first, and I’m not getting very fast, but it does become comfortably slow fairly quickly.</p>
<p>A different sort of practice schedule would be more painful. For example, I could go immediately to playing the chords of the maj6 diminished scaled in Db, which is the next key I need to practice. This will be new for me, and I know it will take sometimes a few seconds or more of staring and thinking, and getting a bit lost, to press the first chord, and then the second and so on. I will be working it out on the fly. After going up the scale one time, I could decide to stop Db, and switch to Gb (the next one in my anti-clockwise circle of fifths practice cycle). That would be new and somewhat painful too. In other words, the harder, less repetitive, more spaced out practice schedule could be: once up then switch to new key.</p>
<p>Maybe I will try this next I’m not sure if I have the patience for it…as I like to feel the progress. However, I can imagine some potentially interesting side effects (benefits? or at least potential consequences) of this switchy schedule. One possibility is that this schedule may increase associative linkages between a current musical goal and an intended outcome. One reason this might happen is that when attempting new patterns, the goal may be clear (e.g., play the third chord of the maj6 dim scale in Gb), but the action and corresponding pattern may not be clear. So, one is keeping the goal in mind as an instruction, and trying to work out the pattern, and then execute. As a result, this constitutes a processing episode where the goal was in mind at the same time as a puzzling out process, as well as an action being executed. According some theories of learning and memory the things that happen during an episode of learning are preserved in memory, and later retrieved when similar circumstance are re-encountered. Not sure what the practical consequences would be for learning scales in this manner…maybe I should go try this.</p>
<p>Alright…not as bad as I thought that would feel. Here’s a practice table with some scale completion time data:</p>
<table class="table">
<thead>
<tr class="header">
<th>Key</th>
<th>Finishing time (minutes)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Db</td>
<td>1:23</td>
</tr>
<tr class="even">
<td>Gb</td>
<td>1:00</td>
</tr>
<tr class="odd">
<td>B</td>
<td>1:44</td>
</tr>
<tr class="even">
<td>E</td>
<td>1:30</td>
</tr>
<tr class="odd">
<td>A</td>
<td>:49</td>
</tr>
<tr class="even">
<td>D</td>
<td>1:17</td>
</tr>
<tr class="odd">
<td>G</td>
<td>:56</td>
</tr>
<tr class="even">
<td>Well-practiced (C)</td>
<td>:12</td>
</tr>
</tbody>
</table>
<p>This was pretty slow going, and fairly cognitively taxing. Was constantly reminding myself what I was trying to do, while puzzling out what to play. Not too bad though. Perhaps this caused me to make some more deliberate connections than I otherwise would have, not sure. My times were generally getting faster as I moved anti-clockwise, but that could reflect my overall fluency in those keys in general. I hadn’t tried the major 6 dim scale in any of these keys before and all the completion times (to play the chord for each note ascending) are about a minute or longer. By comparison, I went back to the piano and played through the C scale in 12 seconds…still pretty slow. For another comparison, I went back and played a regular C major scale in 7th chords in less than 3 seconds. Presumably with enough practice I get the above scales down under 3 seconds too. In C, I’ve already got down to 12 seconds. Not bad.</p>
<p>I had the worst time on B. I’m also curious on what kind of fluency gains I would make by just repeating this over and over. I think I should practice this a bunch of times in a row and see what the learning curve looks like. I’m using anything fancy, just the stopwatch on my iphone. I will play the scale in chords ascending, and press the lap button every time I’m finished. Let’s put in 10 minutes of repetitive practice and see where that gets me.</p>
<p>Done. And, time plot the data in R!</p>
<div class="cell">
<div class="cell-output cell-output-stderr">
<pre><code>── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://homophony.quest/blog/17_1_17_24_BarryHarris/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>It’s not a pretty power curve, but at least it is generally decreasing. I was hovering around a minute per ascending attempt for the first 7 attempts. Then, a few things started to get easier, and I started speeding up. I cut my time by more than half, yah! Still a long way to go to get faster than 3 seconds. And, I suppose this gives me some perspective on what I got out 10 minutes of this kind of practice.</p>
<p>I’m going to try one more 10 minute burst for fun. This time I’ll do the scale in E, which was my second slowest time. However, instead of playing the scale ascending over and over for 10 minutes. I’m going to do whatever I want for 10 minutes, and see what happens. More specifically, I’ll take the list of things I mentioned earlier that I was doing, that helped me get my fingers into the key, and all that kind of stuff. Then, in the 9th minute, I’ll start timing my ascending runs. Maybe my more varied practice version of 10 minutes would get that scale into shape faster than just focusing on ascending runs…Or maybe not?</p>
<p>Did that. At the end I did a run of chords in E in about 20 seconds. But, my second attempt ended around 30 seconds with lots of errors. I was probably getting a bit better at all of the other things I was practicing, rather than being able to specifically do the ascending chords.</p>
<p>Also, starting to experience brain melt from too much piano practice. Maybe I should call it a day :)</p>


</section>
</section>

 ]]></description>
  <category>Barry Harris</category>
  <category>practice</category>
  <guid>https://homophony.quest/blog/17_1_17_24_BarryHarris/</guid>
  <pubDate>Wed, 17 Jan 2024 05:00:00 GMT</pubDate>
  <media:content url="https://homophony.quest/blog/17_1_17_24_BarryHarris/cover.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
