---
title: "Adobe after effects scratchpad"
author: "Matt Crump"
date: 2/24/24
description: "Random note collection on using adobe after effects"
image: "cover.jpg"
comments:
  giscus: 
    repo: CrumpLab/crumplab_comments
categories: 
  - after effects
  - vfx
execute: 
  echo: true
  message: false
  warning: false
  eval: false
format:
  html:
    code-fold: true
lightbox: 
  match: auto
  desc-position: right
  loop: true
---

```{r}

```

```{python, eval = FALSE}
from diffusers import DiffusionPipeline
from transformers import set_seed
from PIL import Image
import torch
import random
import ssl
import os
ssl._create_default_https_context = ssl._create_unverified_context

#locate library
#model_id = "./stable-diffusion-v1-5"
model_id = "dreamshaper-xl-turbo"

pipeline = DiffusionPipeline.from_pretrained(
	pretrained_model_name_or_path = "../../../../bigFiles/huggingface/dreamshaper-xl-turbo/"
)

pipeline = pipeline.to("mps")

# Recommended if your computer has < 64 GB of RAM
pipeline.enable_attention_slicing("max")

prompt = "Space station universe situation. Synthesizer universe. Neon. 80s Cartoon. Thundercats. Command station."

for s in range(30):
  for n in [5,10]:
    seed = s+21
    num_steps = n+1
    set_seed(seed)
    
    image = pipeline(prompt,height = 1080,width = 1080,num_images_per_prompt = 1,num_inference_steps=num_steps)
    
    image_name = "images/synth_{}_{}.jpeg"
    
    image_save = image.images[0].save(image_name.format(seed,num_steps))

```

![](cover.jpg){width="50%" fig-align="left"}

::: column-margin
Adobe after effects logo
:::

```{r}
#| echo: false
#| eval: true

html_tag_audio <- function(file, type = c("wav")) {
  type <- match.arg(type)
  htmltools::tags$audio(
    controls = "",
    htmltools::tags$source(
      src = file,
      type = glue::glue("audio/{type}", type = type)
    )
  )
}

```

Making random notes about adobe after effects. 

Perhaps a small collection of formula expressions may emerge here over time.

## Sine wave formula

a = amplitude (multiplier of -1 to 1)
f = frequency (1/30 would do one cycle in a 30 sec comp)
y = value of sine wave over time

value of some effect to assign

```default
a = 617;
f = 1/30;
y = Math.sin(time*2*Math.PI*f)*a;

effect("Transform")("Skew Axis").value = y;
```


